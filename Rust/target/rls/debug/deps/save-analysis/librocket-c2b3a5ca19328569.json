{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4","program":"/home/erflod5/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rocket","/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"private-cookies\"","-C","metadata=c2b3a5ca19328569","-C","extra-filename=-c2b3a5ca19328569","--out-dir","/home/erflod5/projects/hello-rocket/target/rls/debug/deps","-L","dependency=/home/erflod5/projects/hello-rocket/target/rls/debug/deps","--extern","atty=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libatty-128e9d8b3ab6e47a.rmeta","--extern","base64=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libbase64-19bccf9de449abfb.rmeta","--extern","log=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/liblog-81cc490d5ef90672.rmeta","--extern","memchr=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libmemchr-cc76bef611bf405f.rmeta","--extern","num_cpus=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libnum_cpus-142da58e0ebb2884.rmeta","--extern","pear=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libpear-e9f00289f17ea2cb.rmeta","--extern","rocket_codegen=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/librocket_codegen-2e1929a05c772fe5.so","--extern","rocket_http=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/librocket_http-3322c4802716ffda.rmeta","--extern","state=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libstate-edc0343e7cd5189c.rmeta","--extern","time=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libtime-c88a58f9f6c632c5.rmeta","--extern","toml=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libtoml-0a1d8084d7d35f50.rmeta","--extern","yansi=/home/erflod5/projects/hello-rocket/target/rls/debug/deps/libyansi-0fc177f78b8e3312.rmeta","--cap-lints","allow","-L","native=/home/erflod5/projects/hello-rocket/target/rls/debug/build/ring-c3f99039d4ba9667/out","--error-format=json","--sysroot","/home/erflod5/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/erflod5/projects/hello-rocket/target/rls/debug/deps/librocket-c2b3a5ca19328569.rmeta"},"prelude":{"crate_id":{"name":"rocket","disambiguator":[11477491461652958287,14576588763598421509]},"crate_root":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src","external_crates":[{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14135787011897669350,5791574643103715305]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3594110764027786524,15122039410936556636]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14028025445241469238,13012682745941878982]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12123326574028408324,16920506198485796719]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15148674381298141310,1450136519419524411]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18252964414373398583,60826006407090718]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14754928624085830232,3245395341931729835]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4207355511276114283,18313804595498328771]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3940578739564172265,12852659344087513462]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13576511082848259044,12239835797966459289]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[17355273499131644875,15078049452799821944]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7238308414641497718,227752195385183108]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16723595887887413683,11776960315488202736]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[12134636118194132697,7377681945845796235]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":15,"id":{"name":"rocket_codegen","disambiguator":[14777017017209097530,2182556433923218994]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":16,"id":{"name":"rocket_http","disambiguator":[7214492638067596562,421478645186198032]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":17,"id":{"name":"pear","disambiguator":[8320867815595244321,840618020634617350]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":18,"id":{"name":"pear_codegen","disambiguator":[9773051589549961308,11458050366483323541]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":19,"id":{"name":"percent_encoding","disambiguator":[8390980014001657434,15251537532349194260]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":20,"id":{"name":"smallvec","disambiguator":[11991185564199647192,11156057153930872716]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":21,"id":{"name":"cookie","disambiguator":[16238361220055927207,4719617541245560400]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":22,"id":{"name":"url","disambiguator":[4606337682783991255,14801840789517954462]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":23,"id":{"name":"matches","disambiguator":[8500060653623848469,8486102215552423508]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":24,"id":{"name":"idna","disambiguator":[12990727460775752270,729806048247401148]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":25,"id":{"name":"unicode_bidi","disambiguator":[2795433726882009963,1477675739719971991]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":26,"id":{"name":"unicode_normalization","disambiguator":[17290652564606818254,8259596785165242227]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":27,"id":{"name":"time","disambiguator":[14629430239414961752,8796780593957019036]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[17298067992439049467,9715494853714843371]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":29,"id":{"name":"ring","disambiguator":[5792385049988799743,4324269311805092319]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":30,"id":{"name":"lazy_static","disambiguator":[1186228694661406961,3303924564937711847]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":31,"id":{"name":"untrusted","disambiguator":[1998208107487395809,5412520363933901287]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":32,"id":{"name":"base64","disambiguator":[15810906622741218261,17521942933899141331]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":33,"id":{"name":"byteorder","disambiguator":[4969278256308796019,11529818192718749618]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":34,"id":{"name":"safemem","disambiguator":[3630260388502551664,3844990077249715469]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":35,"id":{"name":"indexmap","disambiguator":[11545785682614891898,3561444113578258601]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":36,"id":{"name":"state","disambiguator":[7629987955168434471,15501158213334922350]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":37,"id":{"name":"unicode_xid","disambiguator":[12535900591947199098,1205496786222719361]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":38,"id":{"name":"hyper","disambiguator":[10604475493888034431,7773819149127973192]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":39,"id":{"name":"unicase","disambiguator":[5932337991906096513,13633769209861769073]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":40,"id":{"name":"httparse","disambiguator":[13243388252085833053,15522217637452980814]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":41,"id":{"name":"num_cpus","disambiguator":[16461409926529763630,10067923415091418724]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":42,"id":{"name":"traitobject","disambiguator":[4958595305708403019,8644000210004615069]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":43,"id":{"name":"typeable","disambiguator":[12717432845313512201,4344917089474684633]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":44,"id":{"name":"language_tags","disambiguator":[8212192458008480564,1735268898015227505]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":45,"id":{"name":"mime","disambiguator":[9818228033749076945,2423398793852350994]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":46,"id":{"name":"log","disambiguator":[6054937505473870903,950546685142675566]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":47,"id":{"name":"log","disambiguator":[15970507826454198589,10796380872473350498]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":48,"id":{"name":"cfg_if","disambiguator":[14373448092849975338,12571823941718385080]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":49,"id":{"name":"yansi","disambiguator":[15130855117209935960,14056754736959470848]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":50,"id":{"name":"toml","disambiguator":[16961087252924119485,2103927819715381801]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":51,"id":{"name":"serde","disambiguator":[3980287455499140948,14058179018927200107]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":52,"id":{"name":"memchr","disambiguator":[13610281181869211317,18063373583810427502]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":53,"id":{"name":"base64","disambiguator":[15337724681864041784,145038514097686663]}},{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","num":54,"id":{"name":"atty","disambiguator":[16391812011259931761,10288683609446084153]}}],"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":0,"byte_end":4852,"line_start":1,"line_end":164,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3332,"byte_end":3333,"line_start":100,"line_end":100,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15365,"byte_end":15378,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"alias_span":null,"name":"LocalResponse","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15380,"byte_end":15392,"line_start":104,"line_end":104,"column_start":40,"column_end":52},"alias_span":null,"name":"LocalRequest","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15417,"byte_end":15423,"line_start":105,"line_end":105,"column_start":23,"column_end":29},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":15,"index":558},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46845,"byte_end":46853,"line_start":13,"line_end":13,"column_start":41,"column_end":49},"alias_span":null,"name":"FromForm","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":15,"index":557},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46855,"byte_end":46868,"line_start":13,"line_end":13,"column_start":51,"column_end":64},"alias_span":null,"name":"FromFormValue","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2226},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46895,"byte_end":46902,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":639},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46933,"byte_end":46944,"line_start":16,"line_end":16,"column_start":30,"column_end":41},"alias_span":null,"name":"FromRequest","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46946,"byte_end":46953,"line_start":16,"line_end":16,"column_start":43,"column_end":50},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46978,"byte_end":46987,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"alias_span":null,"name":"FromParam","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46989,"byte_end":47001,"line_start":17,"line_end":17,"column_start":34,"column_end":46},"alias_span":null,"name":"FromSegments","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47025,"byte_end":47033,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"alias_span":null,"name":"FromForm","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47035,"byte_end":47048,"line_start":18,"line_end":18,"column_start":32,"column_end":45},"alias_span":null,"name":"FromFormValue","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47072,"byte_end":47076,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"alias_span":null,"name":"Form","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2618},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47078,"byte_end":47089,"line_start":19,"line_end":19,"column_start":28,"column_end":39},"alias_span":null,"name":"LenientForm","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2423},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47091,"byte_end":47100,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"alias_span":null,"name":"FormItems","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2434},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47102,"byte_end":47110,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"FormItem","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47134,"byte_end":47143,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"alias_span":null,"name":"FormError","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2625},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47145,"byte_end":47159,"line_start":20,"line_end":20,"column_start":33,"column_end":47},"alias_span":null,"name":"FormParseError","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2661},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47161,"byte_end":47174,"line_start":20,"line_end":20,"column_start":49,"column_end":62},"alias_span":null,"name":"FormDataError","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47198,"byte_end":47203,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":2726},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47227,"byte_end":47232,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47234,"byte_end":47243,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"FromQuery","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":47287,"byte_end":47299,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"alias_span":null,"name":"FlashMessage","value":"","parent":{"krate":0,"index":186}},{"kind":"Use","ref_id":{"krate":15,"index":559},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165389,"byte_end":165398,"line_start":38,"line_end":38,"column_start":40,"column_end":49},"alias_span":null,"name":"Responder","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165426,"byte_end":165434,"line_start":40,"line_end":40,"column_start":26,"column_end":34},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165436,"byte_end":165451,"line_start":40,"line_end":40,"column_start":36,"column_end":51},"alias_span":null,"name":"ResponseBuilder","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2748},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165453,"byte_end":165457,"line_start":40,"line_end":40,"column_start":53,"column_end":57},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165459,"byte_end":165477,"line_start":40,"line_end":40,"column_start":59,"column_end":77},"alias_span":null,"name":"DEFAULT_CHUNK_SIZE","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165505,"byte_end":165514,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"Responder","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2736},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165540,"byte_end":165548,"line_start":42,"line_end":42,"column_start":25,"column_end":33},"alias_span":null,"name":"Redirect","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2786},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165571,"byte_end":165576,"line_start":43,"line_end":43,"column_start":22,"column_end":27},"alias_span":null,"name":"Flash","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165604,"byte_end":165613,"line_start":44,"line_end":44,"column_start":27,"column_end":36},"alias_span":null,"name":"NamedFile","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":917},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165637,"byte_end":165643,"line_start":45,"line_end":45,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2779},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165666,"byte_end":165671,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":2795},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165711,"byte_end":165718,"line_start":47,"line_end":47,"column_start":39,"column_end":46},"alias_span":null,"name":"Content","value":"","parent":{"krate":0,"index":778}},{"kind":"Use","ref_id":{"krate":0,"index":3310},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283846,"byte_end":283852,"line_start":202,"line_end":202,"column_start":30,"column_end":36},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":50,"index":22},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283876,"byte_end":283881,"line_start":203,"line_end":203,"column_start":23,"column_end":28},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":50,"index":23},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283883,"byte_end":283888,"line_start":203,"line_end":203,"column_start":30,"column_end":35},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":50,"index":1175},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283890,"byte_end":283895,"line_start":203,"line_end":203,"column_start":37,"column_end":42},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":50,"index":1275},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283897,"byte_end":283905,"line_start":203,"line_end":203,"column_start":44,"column_end":52},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":3152},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283929,"byte_end":283940,"line_start":204,"line_end":204,"column_start":22,"column_end":33},"alias_span":null,"name":"ConfigError","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":3197},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283969,"byte_end":283980,"line_start":205,"line_end":205,"column_start":28,"column_end":39},"alias_span":null,"name":"Environment","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284004,"byte_end":284010,"line_start":206,"line_end":206,"column_start":23,"column_end":29},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":3241},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284035,"byte_end":284048,"line_start":207,"line_end":207,"column_start":24,"column_end":37},"alias_span":null,"name":"ConfigBuilder","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284066,"byte_end":284078,"line_start":208,"line_end":208,"column_start":17,"column_end":29},"alias_span":null,"name":"LoggingLevel","value":"","parent":{"krate":0,"index":1279}},{"kind":"Use","ref_id":{"krate":0,"index":1587},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387232,"byte_end":387236,"line_start":8,"line_end":8,"column_start":21,"column_end":25},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1617},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387265,"byte_end":387275,"line_start":9,"line_end":9,"column_start":28,"column_end":38},"alias_span":null,"name":"DataStream","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1684},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387303,"byte_end":387311,"line_start":10,"line_end":10,"column_start":27,"column_end":35},"alias_span":null,"name":"FromData","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387313,"byte_end":387327,"line_start":10,"line_end":10,"column_start":37,"column_end":51},"alias_span":null,"name":"FromDataSimple","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1656},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387329,"byte_end":387336,"line_start":10,"line_end":10,"column_start":53,"column_end":60},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1667},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387338,"byte_end":387347,"line_start":10,"line_end":10,"column_start":62,"column_end":71},"alias_span":null,"name":"Transform","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1681},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387349,"byte_end":387360,"line_start":10,"line_end":10,"column_start":73,"column_end":84},"alias_span":null,"name":"Transformed","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433805,"byte_end":433810,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"alias_span":null,"name":"AdHoc","value":"","parent":{"krate":0,"index":1776}},{"kind":"Use","ref_id":{"krate":0,"index":1849},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433838,"byte_end":433842,"line_start":58,"line_end":58,"column_start":27,"column_end":31},"alias_span":null,"name":"Info","value":"","parent":{"krate":0,"index":1776}},{"kind":"Use","ref_id":{"krate":0,"index":3342},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433844,"byte_end":433848,"line_start":58,"line_end":58,"column_start":33,"column_end":37},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":1776}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3332,"byte_end":3333,"line_start":100,"line_end":100,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"uncased, ext, Header, MediaType, RawStr, route, private, uri, Method, Cookies, hyper, Accept, StatusClass, Cookie, ContentType, HeaderMap, Status","parent":{"krate":0,"index":1924}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/mod.rs","byte_start":471461,"byte_end":471466,"line_start":6,"line_end":6,"column_start":22,"column_end":27},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4190,"byte_end":4198,"line_start":144,"line_end":144,"column_start":34,"column_end":42},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4233,"byte_end":4240,"line_start":145,"line_end":145,"column_start":34,"column_end":41},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4242,"byte_end":4254,"line_start":145,"line_end":145,"column_start":43,"column_end":55},"alias_span":null,"name":"ErrorHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4290,"byte_end":4305,"line_start":146,"line_end":146,"column_start":34,"column_end":49},"alias_span":null,"name":"StaticRouteInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2141},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4307,"byte_end":4322,"line_start":146,"line_end":146,"column_start":51,"column_end":66},"alias_span":null,"name":"StaticCatchInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4357,"byte_end":4364,"line_start":147,"line_end":147,"column_start":33,"column_end":40},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1587},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4395,"byte_end":4399,"line_start":148,"line_end":148,"column_start":30,"column_end":34},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4432,"byte_end":4438,"line_start":149,"line_end":149,"column_start":32,"column_end":38},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4456,"byte_end":4461,"line_start":150,"line_end":150,"column_start":17,"column_end":22},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2226},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4481,"byte_end":4488,"line_start":151,"line_end":151,"column_start":19,"column_end":26},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4490,"byte_end":4495,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4515,"byte_end":4522,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"alias_span":null,"name":"Catcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2070},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4540,"byte_end":4546,"line_start":153,"line_end":153,"column_start":17,"column_end":23},"alias_span":null,"name":"Rocket","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":0,"byte_end":4852,"line_start":1,"line_end":164,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":62},{"krate":0,"index":186},{"krate":0,"index":778},{"krate":0,"index":1199},{"krate":0,"index":1279},{"krate":0,"index":1560},{"krate":0,"index":1742},{"krate":0,"index":1776},{"krate":0,"index":1880},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":2023},{"krate":0,"index":2122},{"krate":0,"index":2144},{"krate":0,"index":2178},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201}],"decl_id":null,"docs":" # Rocket - Core API Documentation","sig":null,"attributes":[{"value":"feature(specialization)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"feature(decl_macro)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":28,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"feature(try_trait)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":52,"byte_end":74,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"feature(never_type)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":75,"byte_end":98,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"feature(proc_macro_hygiene)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":99,"byte_end":130,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"feature(crate_visibility_modifier)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":131,"byte_end":169,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"feature(label_break_value)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":170,"byte_end":200,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":202,"byte_end":227,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"! # Rocket - Core API Documentation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":428,"byte_end":465,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":466,"byte_end":469,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Hello, and welcome to the core Rocket API documentation!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":470,"byte_end":530,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":531,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! This API documentation is highly technical and is purely a reference.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":535,"byte_end":608,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! There's an [overview] of Rocket on the main site as well as a [full,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":609,"byte_end":681,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"! detailed guide]. If you'd like pointers on getting started, see the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":682,"byte_end":753,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"! [quickstart] or [getting started] chapters of the guide.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":754,"byte_end":814,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":815,"byte_end":818,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! You may also be interested in looking at the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":819,"byte_end":867,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! [`rocket_contrib`](../rocket_contrib) documentation, which contains","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":868,"byte_end":939,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"! automatic JSON (de)serialiazation, templating support, static file serving,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":940,"byte_end":1019,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"! and other useful features.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1020,"byte_end":1050,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! [overview]: https://rocket.rs/v0.4/overview","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1055,"byte_end":1102,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"! [full, detailed guide]: https://rocket.rs/v0.4/guide","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1103,"byte_end":1159,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"! [quickstart]: https://rocket.rs/v0.4/guide/quickstart","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1160,"byte_end":1217,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"! [getting started]: https://rocket.rs/v0.4/guide/getting-started","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1218,"byte_end":1285,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1286,"byte_end":1289,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! ## Libraries","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1290,"byte_end":1306,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1307,"byte_end":1310,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Rocket's functionality is split into two crates:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1311,"byte_end":1363,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1364,"byte_end":1367,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"!   1. Core - This core library. Needed by every Rocket application.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1368,"byte_end":1438,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"!   2. [Contrib](../rocket_contrib) - Provides useful functionality for many","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1439,"byte_end":1517,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"!      Rocket applications. Completely optional.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1518,"byte_end":1568,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1569,"byte_end":1572,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1573,"byte_end":1585,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1586,"byte_end":1589,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! First, depend on `rocket` in `Cargo.toml`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1590,"byte_end":1636,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1637,"byte_end":1640,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1641,"byte_end":1652,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1653,"byte_end":1671,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"! rocket = \"0.4.4\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1672,"byte_end":1692,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1693,"byte_end":1700,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1701,"byte_end":1704,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Then, add the following to the top of your `main.rs` file:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1705,"byte_end":1767,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1768,"byte_end":1771,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1772,"byte_end":1783,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"! #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1784,"byte_end":1831,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1832,"byte_end":1835,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1836,"byte_end":1873,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"! # #[get(\"/\")] fn hello() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1874,"byte_end":1906,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"! # fn main() { rocket::ignite().mount(\"/\", routes![hello]); }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1907,"byte_end":1971,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1972,"byte_end":1979,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1980,"byte_end":1983,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! See the [guide](https://rocket.rs/v0.4/guide) for more information on how to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":1984,"byte_end":2064,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"! write Rocket applications. Here's a simple example to get you started:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2065,"byte_end":2139,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2156,"byte_end":2203,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2204,"byte_end":2207,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2208,"byte_end":2245,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2250,"byte_end":2265,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"! fn hello() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2266,"byte_end":2298,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"!     \"Hello, world!\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2299,"byte_end":2322,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2323,"byte_end":2328,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2329,"byte_end":2332,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2333,"byte_end":2348,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"! # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2349,"byte_end":2427,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"!     rocket::ignite().mount(\"/\", routes![hello]).launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2428,"byte_end":2489,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"! # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2490,"byte_end":2497,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"! }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2498,"byte_end":2503,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2504,"byte_end":2511,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ## Configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2516,"byte_end":2536,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2537,"byte_end":2540,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! Rocket and Rocket libraries are configured via the `Rocket.toml` file and/or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2541,"byte_end":2621,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"! `ROCKET_{PARAM}` environment variables. For more information on how to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2622,"byte_end":2696,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"! configure Rocket, see the [configuration section] of the guide as well as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2697,"byte_end":2774,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"! the [`config`] module documentation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2775,"byte_end":2815,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2816,"byte_end":2819,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! [configuration section]: https://rocket.rs/v0.4/guide/configuration/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2820,"byte_end":2892,"line_start":88,"line_end":88,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ## Testing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2897,"byte_end":2911,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2912,"byte_end":2915,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! The [`local`] module contains structures that facilitate unit and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2916,"byte_end":2985,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"! integration testing of a Rocket application. The top-level [`local`] module","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":2986,"byte_end":3065,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"! documentation and the [testing chapter of the guide] include detailed","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3066,"byte_end":3139,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"! examples.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3140,"byte_end":3153,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3154,"byte_end":3157,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! [testing chapter of the guide]: https://rocket.rs/v0.4/guide/testing/#testing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3158,"byte_end":3239,"line_start":97,"line_end":97,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logger","qualname":"::logger","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":2202},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2214},{"krate":0,"index":2212},{"krate":0,"index":2211},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"decl_id":null,"docs":" Rocket's logging infrastructure.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3656,"byte_end":3668,"line_start":116,"line_end":116,"column_start":16,"column_end":28}},{"value":"! Rocket's logging infrastructure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":4854,"byte_end":4890,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5239,"byte_end":5247,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Critical","qualname":"::logger::LoggingLevel::Critical","value":"LoggingLevel::Critical","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":" Only shows errors, warnings, and launch information.\n","sig":null,"attributes":[{"value":"/ Only shows errors, warnings, and launch information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5178,"byte_end":5234,"line_start":16,"line_end":16,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2205},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5314,"byte_end":5320,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Normal","qualname":"::logger::LoggingLevel::Normal","value":"LoggingLevel::Normal","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":" Shows everything except debug and trace information.\n","sig":null,"attributes":[{"value":"/ Shows everything except debug and trace information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5253,"byte_end":5309,"line_start":18,"line_end":18,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2207},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5352,"byte_end":5357,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Debug","qualname":"::logger::LoggingLevel::Debug","value":"LoggingLevel::Debug","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":" Shows everything.\n","sig":null,"attributes":[{"value":"/ Shows everything.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5326,"byte_end":5347,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5386,"byte_end":5389,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Off","qualname":"::logger::LoggingLevel::Off","value":"LoggingLevel::Off","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":" Shows nothing.\n","sig":null,"attributes":[{"value":"/ Shows nothing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5363,"byte_end":5381,"line_start":22,"line_end":22,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2202},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5159,"byte_end":5171,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"LoggingLevel","qualname":"::logger::LoggingLevel","value":"LoggingLevel::{Critical, Normal, Debug, Off}","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209}],"decl_id":null,"docs":" Defines the different levels for log messages.\n","sig":null,"attributes":[{"value":"/ Defines the different levels for log messages.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5054,"byte_end":5104,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":11675,"byte_end":11679,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"init","qualname":"::logger::init","value":"fn (level: LoggingLevel) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2222},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":12038,"byte_end":12043,"line_start":226,"line_end":226,"column_start":24,"column_end":29},"name":"error","qualname":"::logger::error","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":11924,"byte_end":11941,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2223},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":12076,"byte_end":12082,"line_start":227,"line_end":227,"column_start":24,"column_end":30},"name":"error_","qualname":"::logger::error_","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":11924,"byte_end":11941,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2224},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":12116,"byte_end":12120,"line_start":228,"line_end":228,"column_start":24,"column_end":28},"name":"warn","qualname":"::logger::warn","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":11924,"byte_end":11941,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2225},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":12152,"byte_end":12157,"line_start":229,"line_end":229,"column_start":24,"column_end":29},"name":"warn_","qualname":"::logger::warn_","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":11924,"byte_end":11941,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"local","qualname":"::local","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":133},{"krate":0,"index":182},{"krate":0,"index":185}],"decl_id":null,"docs":" Structures for local dispatching of requests, primarily for testing.","sig":null,"attributes":[{"value":"! Structures for local dispatching of requests, primarily for testing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12168,"byte_end":12240,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12241,"byte_end":12244,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module allows for simple request dispatching against a local,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12245,"byte_end":12315,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! non-networked instance of Rocket. The primary use of this module is to unit","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12316,"byte_end":12395,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! and integration test Rocket applications by crafting requests, dispatching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12396,"byte_end":12474,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! them, and verifying the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12475,"byte_end":12512,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12513,"byte_end":12516,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12517,"byte_end":12528,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12529,"byte_end":12532,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! This module contains a [`Client`] structure that is used to create","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12533,"byte_end":12603,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"! [`LocalRequest`] structures that can be dispatched against a given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12604,"byte_end":12674,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"! [`Rocket`](crate::Rocket) instance. Usage is straightforward:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12675,"byte_end":12740,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12741,"byte_end":12744,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"!   1. Construct a `Rocket` instance that represents the application.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12745,"byte_end":12816,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12817,"byte_end":12820,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"!      ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12821,"byte_end":12837,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"!      let rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12838,"byte_end":12877,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"!      # let _ = rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12878,"byte_end":12904,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"!      ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12905,"byte_end":12917,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12918,"byte_end":12921,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"!   2. Construct a `Client` using the `Rocket` instance.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12922,"byte_end":12980,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12981,"byte_end":12984,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"!      ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":12985,"byte_end":13001,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"!      # use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13002,"byte_end":13039,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"!      # let rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13040,"byte_end":13081,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"!      let client = Client::new(rocket).expect(\"valid rocket instance\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13082,"byte_end":13156,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!      # let _ = client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13157,"byte_end":13183,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"!      ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13184,"byte_end":13196,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13197,"byte_end":13200,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!   3. Construct requests using the `Client` instance.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13201,"byte_end":13257,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13258,"byte_end":13261,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"!      ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13262,"byte_end":13278,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"!      # use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13279,"byte_end":13316,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!      # let rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13317,"byte_end":13358,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"!      # let client = Client::new(rocket).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13359,"byte_end":13412,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"!      let req = client.get(\"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13413,"byte_end":13448,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"!      # let _ = req;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13449,"byte_end":13472,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"!      ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13473,"byte_end":13485,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13486,"byte_end":13489,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"!   3. Dispatch the request to retrieve the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13490,"byte_end":13545,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13546,"byte_end":13549,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"!      ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13550,"byte_end":13566,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"!      # use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13567,"byte_end":13604,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"!      # let rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13605,"byte_end":13646,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"!      # let client = Client::new(rocket).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13647,"byte_end":13700,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"!      # let req = client.get(\"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13701,"byte_end":13738,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"!      let response = req.dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13739,"byte_end":13778,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"!      # let _ = response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13779,"byte_end":13807,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"!      ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13808,"byte_end":13820,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13821,"byte_end":13824,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! All together and in idiomatic fashion, this might look like:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13825,"byte_end":13889,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13890,"byte_end":13893,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13894,"byte_end":13905,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"! use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13906,"byte_end":13936,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13937,"byte_end":13940,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":13941,"byte_end":14011,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"! let response = client.post(\"/\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14012,"byte_end":14047,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"!     .body(\"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14048,"byte_end":14078,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"!     .dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14079,"byte_end":14099,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"! # let _ = response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14100,"byte_end":14123,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14124,"byte_end":14131,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14132,"byte_end":14135,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! # Unit/Integration Testing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14136,"byte_end":14166,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14167,"byte_end":14170,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! This module can be used to test a Rocket application by constructing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14171,"byte_end":14243,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"! requests via `Client` and validating the resulting response. As an example,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14244,"byte_end":14323,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! consider the following complete \"Hello, world!\" application, with testing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14324,"byte_end":14402,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14403,"byte_end":14406,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14407,"byte_end":14418,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"! #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14419,"byte_end":14466,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14467,"byte_end":14470,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14471,"byte_end":14508,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14509,"byte_end":14512,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14513,"byte_end":14528,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"! fn hello() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14529,"byte_end":14561,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"!     \"Hello, world!\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14562,"byte_end":14585,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14586,"byte_end":14591,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14592,"byte_end":14595,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14596,"byte_end":14616,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"! #[cfg(test)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14617,"byte_end":14633,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"! mod test {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14634,"byte_end":14648,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"!     use super::{rocket, hello};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14649,"byte_end":14684,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"!     use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14685,"byte_end":14719,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14720,"byte_end":14723,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"!     #[test]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14724,"byte_end":14739,"line_start":85,"line_end":85,"column_start":1,"column_end":16}},{"value":"!     fn test_hello_world() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14740,"byte_end":14771,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"!         // Construct a client to use for dispatching requests.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14772,"byte_end":14838,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"!         let rocket = rocket::ignite().mount(\"/\", routes![hello]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14839,"byte_end":14908,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"!         let client = Client::new(rocket).expect(\"valid rocket instance\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14909,"byte_end":14986,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14987,"byte_end":14990,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"!         // Dispatch a request to 'GET /' and validate the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":14991,"byte_end":15062,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"!         let mut response = client.get(\"/\").dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15063,"byte_end":15121,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"!         assert_eq!(response.body_string(), Some(\"Hello, world!\".into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15122,"byte_end":15199,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"!     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15200,"byte_end":15209,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15210,"byte_end":15215,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15216,"byte_end":15223,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15224,"byte_end":15227,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! [`Client`]: crate::local::Client","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15228,"byte_end":15264,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"! [`LocalRequest`]: crate::local::LocalRequest","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/mod.rs","byte_start":15265,"byte_end":15313,"line_start":99,"line_end":99,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17735,"byte_end":17747,"line_start":68,"line_end":68,"column_start":12,"column_end":24},"name":"LocalRequest","qualname":"::local::request::LocalRequest","value":"LocalRequest {  }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" A structure representing a local request as created by [`Client`].","sig":null,"attributes":[{"value":"/ A structure representing a local request as created by [`Client`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15663,"byte_end":15733,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15734,"byte_end":15737,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15738,"byte_end":15749,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15750,"byte_end":15753,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A `LocalRequest` value is constructed via method constructors on [`Client`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15754,"byte_end":15834,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ Headers can be added via the [`header`] builder method and the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15835,"byte_end":15901,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ [`add_header`] method. Cookies can be added via the [`cookie`] builder","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15902,"byte_end":15976,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ method. The remote IP address can be set via the [`remote`] builder method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":15977,"byte_end":16056,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ The body of the request can be set via the [`body`] builder method or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16057,"byte_end":16130,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ [`set_body`] method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16131,"byte_end":16155,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16156,"byte_end":16159,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16160,"byte_end":16174,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16175,"byte_end":16178,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The following snippet uses the available builder methods to construct a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16179,"byte_end":16254,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ `POST` request to `/` with a JSON body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16255,"byte_end":16298,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16299,"byte_end":16302,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16303,"byte_end":16314,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16315,"byte_end":16345,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use rocket::http::{ContentType, Cookie};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16346,"byte_end":16390,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16391,"byte_end":16394,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16395,"byte_end":16465,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ let req = client.post(\"/\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16466,"byte_end":16496,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/     .header(ContentType::JSON)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16497,"byte_end":16531,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/     .remote(\"127.0.0.1:8000\".parse().unwrap())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16532,"byte_end":16582,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/     .cookie(Cookie::new(\"name\", \"value\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16583,"byte_end":16628,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/     .body(r#\"{ \"value\": 42 }\"#);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16629,"byte_end":16665,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16666,"byte_end":16673,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16674,"byte_end":16677,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Dispatching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16678,"byte_end":16695,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16696,"byte_end":16699,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A `LocalRequest` can be dispatched in one of two ways:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16700,"byte_end":16758,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16759,"byte_end":16762,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   1. [`dispatch`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16763,"byte_end":16784,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16785,"byte_end":16788,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/      This method should always be preferred. The `LocalRequest` is consumed","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16789,"byte_end":16868,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/      and a response is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16869,"byte_end":16905,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16906,"byte_end":16909,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   2. [`mut_dispatch`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16910,"byte_end":16935,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16936,"byte_end":16939,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/      This method should _only_ be used when either it is known that the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":16940,"byte_end":17015,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/      application will not modify the request, or it is desired to see","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17016,"byte_end":17089,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/      modifications to the request. No cloning occurs, and the request is not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17090,"byte_end":17170,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/      consumed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17171,"byte_end":17189,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17190,"byte_end":17193,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Additionally, note that `LocalRequest` implements `Clone`. As such, if the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17194,"byte_end":17272,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ same request needs to be dispatched multiple times, the request can first be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17273,"byte_end":17353,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ cloned and then dispatched: `request.clone().dispatch()`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17354,"byte_end":17415,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17416,"byte_end":17419,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`Client`]: ::local::Client","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17420,"byte_end":17451,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ [`header`]: #method.header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17452,"byte_end":17482,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ [`add_header`]: #method.add_header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17483,"byte_end":17521,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`cookie`]: #method.cookie","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17522,"byte_end":17552,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ [`remote`]: #method.remote","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17553,"byte_end":17583,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/ [`body`]: #method.body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17584,"byte_end":17610,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/ [`set_body`]: #method.set_body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17611,"byte_end":17645,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`dispatch`]: #method.dispatch","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17646,"byte_end":17680,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/ [`mut_dispatch`]: #method.mut_dispatch","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":17681,"byte_end":17723,"line_start":67,"line_end":67,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20937,"byte_end":20942,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"inner","qualname":"<LocalRequest>::inner","value":"fn (&self) -> &Request<'c>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inner `Request` as seen by Rocket.","sig":null,"attributes":[{"value":"/ Retrieves the inner `Request` as seen by Rocket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20607,"byte_end":20659,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20664,"byte_end":20667,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20672,"byte_end":20685,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20690,"byte_end":20693,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20698,"byte_end":20709,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20714,"byte_end":20744,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20749,"byte_end":20752,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20757,"byte_end":20827,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/ let req = client.get(\"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20832,"byte_end":20862,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ let inner_req = req.inner();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20867,"byte_end":20899,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20904,"byte_end":20911,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":20916,"byte_end":20925,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22271,"byte_end":22277,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"header","qualname":"<LocalRequest>::header","value":"fn <H> (mut self, header: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header to this request.","sig":null,"attributes":[{"value":"/ Add a header to this request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21633,"byte_end":21666,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21671,"byte_end":21674,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Any type that implements `Into<Header>` can be used here. Among others,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21679,"byte_end":21754,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ this includes [`ContentType`] and [`Accept`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21759,"byte_end":21808,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21813,"byte_end":21816,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`ContentType`]: ::http::ContentType","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21821,"byte_end":21861,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ [`Accept`]: ::http::Accept","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21866,"byte_end":21896,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21901,"byte_end":21904,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21909,"byte_end":21923,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21928,"byte_end":21931,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Add the Content-Type header:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21936,"byte_end":21968,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21973,"byte_end":21976,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21981,"byte_end":21992,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":21997,"byte_end":22027,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22032,"byte_end":22066,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22071,"byte_end":22074,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22079,"byte_end":22111,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22116,"byte_end":22172,"line_start":175,"line_end":175,"column_start":5,"column_end":61}},{"value":"/ let req = client.get(\"/\").header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22177,"byte_end":22233,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22238,"byte_end":22245,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22250,"byte_end":22259,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22831,"byte_end":22841,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"add_header","qualname":"<LocalRequest>::add_header","value":"fn <H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a header to this request without consuming `self`.","sig":null,"attributes":[{"value":"/ Adds a header to this request without consuming `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22413,"byte_end":22472,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22477,"byte_end":22480,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22485,"byte_end":22499,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22504,"byte_end":22507,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Add the Content-Type header:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22512,"byte_end":22544,"line_start":188,"line_end":188,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22549,"byte_end":22552,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22557,"byte_end":22568,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22573,"byte_end":22603,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22608,"byte_end":22642,"line_start":192,"line_end":192,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22647,"byte_end":22650,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22655,"byte_end":22711,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/ let mut req = client.get(\"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22716,"byte_end":22750,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/ req.add_header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22755,"byte_end":22793,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22798,"byte_end":22805,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22810,"byte_end":22819,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23353,"byte_end":23359,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"remote","qualname":"<LocalRequest>::remote","value":"fn (mut self, address: SocketAddr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the remote address of this request.","sig":null,"attributes":[{"value":"/ Set the remote address of this request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":22957,"byte_end":23000,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23005,"byte_end":23008,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23013,"byte_end":23027,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23032,"byte_end":23035,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Set the remote address to \"8.8.8.8:80\":","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23040,"byte_end":23083,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23088,"byte_end":23091,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23096,"byte_end":23107,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23112,"byte_end":23142,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23147,"byte_end":23150,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23155,"byte_end":23211,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/ let address = \"8.8.8.8:80\".parse().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23216,"byte_end":23264,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ let req = client.get(\"/\").remote(address);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23269,"byte_end":23315,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23320,"byte_end":23327,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23332,"byte_end":23341,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23944,"byte_end":23950,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"cookie","qualname":"<LocalRequest>::cookie","value":"fn (self, cookie: Cookie) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a cookie to this request.","sig":null,"attributes":[{"value":"/ Add a cookie to this request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23473,"byte_end":23506,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23511,"byte_end":23514,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23519,"byte_end":23533,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23538,"byte_end":23541,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Add `user_id` cookie:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23546,"byte_end":23571,"line_start":226,"line_end":226,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23576,"byte_end":23579,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23584,"byte_end":23595,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23600,"byte_end":23630,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::Cookie;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23635,"byte_end":23664,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23669,"byte_end":23672,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23677,"byte_end":23733,"line_start":232,"line_end":232,"column_start":5,"column_end":61}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23738,"byte_end":23770,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/ let req = client.get(\"/\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23775,"byte_end":23804,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/     .cookie(Cookie::new(\"username\", \"sb\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23809,"byte_end":23855,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/     .cookie(Cookie::new(\"user_id\", \"12\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23860,"byte_end":23906,"line_start":236,"line_end":236,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23911,"byte_end":23918,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":23923,"byte_end":23932,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24557,"byte_end":24564,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"cookies","qualname":"<LocalRequest>::cookies","value":"fn (self, cookies: Vec<Cookie>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add all of the cookies in `cookies` to this request.","sig":null,"attributes":[{"value":"/ Add all of the cookies in `cookies` to this request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24073,"byte_end":24129,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24134,"byte_end":24137,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24142,"byte_end":24156,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24161,"byte_end":24164,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Add `user_id` cookie:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24169,"byte_end":24194,"line_start":248,"line_end":248,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24199,"byte_end":24202,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24207,"byte_end":24218,"line_start":250,"line_end":250,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24223,"byte_end":24253,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::Cookie;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24258,"byte_end":24287,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24292,"byte_end":24295,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24300,"byte_end":24356,"line_start":254,"line_end":254,"column_start":5,"column_end":61}},{"value":"/ let cookies = vec![Cookie::new(\"a\", \"b\"), Cookie::new(\"c\", \"d\")];","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24361,"byte_end":24430,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24435,"byte_end":24467,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/ let req = client.get(\"/\").cookies(cookies);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24472,"byte_end":24519,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24524,"byte_end":24531,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24536,"byte_end":24545,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25384,"byte_end":25398,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"private_cookie","qualname":"<LocalRequest>::private_cookie","value":"fn (self, cookie: Cookie<'static>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a [private cookie] to this request.","sig":null,"attributes":[{"value":"/ Add a [private cookie] to this request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24740,"byte_end":24783,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24788,"byte_end":24791,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `private-cookies` feature is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24796,"byte_end":24867,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ enabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24872,"byte_end":24884,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24889,"byte_end":24892,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [private cookie]: ::http::Cookies::add_private()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24897,"byte_end":24949,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24954,"byte_end":24957,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24962,"byte_end":24976,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24981,"byte_end":24984,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Add `user_id` as a private cookie:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":24989,"byte_end":25027,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25032,"byte_end":25035,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25040,"byte_end":25051,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25056,"byte_end":25086,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::Cookie;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25091,"byte_end":25120,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25125,"byte_end":25128,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25133,"byte_end":25189,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25194,"byte_end":25226,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ let req = client.get(\"/\").private_cookie(Cookie::new(\"user_id\", \"sb\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25231,"byte_end":25306,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25311,"byte_end":25318,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25323,"byte_end":25332,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"private-cookies\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25337,"byte_end":25372,"line_start":288,"line_end":288,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26348,"byte_end":26352,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"body","qualname":"<LocalRequest>::body","value":"fn <S> (mut self, body: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request.","sig":null,"attributes":[{"value":"/ Set the body (data) of the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25820,"byte_end":25859,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25864,"byte_end":25867,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25872,"byte_end":25886,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25891,"byte_end":25894,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Set the body to be a JSON structure; also sets the Content-Type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25899,"byte_end":25967,"line_start":303,"line_end":303,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25972,"byte_end":25975,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25980,"byte_end":25991,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":25996,"byte_end":26026,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26031,"byte_end":26065,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26070,"byte_end":26073,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26078,"byte_end":26134,"line_start":309,"line_end":309,"column_start":5,"column_end":61}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26139,"byte_end":26171,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"/ let req = client.post(\"/\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26176,"byte_end":26206,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/     .header(ContentType::JSON)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26211,"byte_end":26245,"line_start":312,"line_end":312,"column_start":5,"column_end":39}},{"value":"/     .body(r#\"{ \"key\": \"value\", \"array\": [1, 2, 3], }\"#);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26250,"byte_end":26310,"line_start":313,"line_end":313,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26315,"byte_end":26322,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26327,"byte_end":26336,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26975,"byte_end":26983,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"set_body","qualname":"<LocalRequest>::set_body","value":"fn <S> (&mut self, body: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request without consuming `self`.","sig":null,"attributes":[{"value":"/ Set the body (data) of the request without consuming `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26464,"byte_end":26528,"line_start":321,"line_end":321,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26533,"byte_end":26536,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26541,"byte_end":26555,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26560,"byte_end":26563,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Set the body to be a JSON structure; also sets the Content-Type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26568,"byte_end":26636,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26641,"byte_end":26644,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26649,"byte_end":26660,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26665,"byte_end":26695,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26700,"byte_end":26734,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26739,"byte_end":26742,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26747,"byte_end":26803,"line_start":331,"line_end":331,"column_start":5,"column_end":61}},{"value":"/ let mut req = client.post(\"/\").header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26808,"byte_end":26869,"line_start":332,"line_end":332,"column_start":5,"column_end":66}},{"value":"/ req.set_body(r#\"{ \"key\": \"value\", \"array\": [1, 2, 3], }\"#);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26874,"byte_end":26937,"line_start":333,"line_end":333,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26942,"byte_end":26949,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":26954,"byte_end":26963,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27477,"byte_end":27485,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<LocalRequest>::dispatch","value":"fn (mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"/ Dispatches the request, returning the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27075,"byte_end":27126,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27131,"byte_end":27134,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` and is the preferred mechanism for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27139,"byte_end":27205,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/ dispatching.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27210,"byte_end":27226,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27231,"byte_end":27234,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27239,"byte_end":27252,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27257,"byte_end":27260,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27265,"byte_end":27276,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27281,"byte_end":27311,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27316,"byte_end":27319,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27324,"byte_end":27380,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/ let response = client.get(\"/\").dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27385,"byte_end":27431,"line_start":351,"line_end":351,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27436,"byte_end":27443,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27448,"byte_end":27465,"line_start":353,"line_end":353,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28703,"byte_end":28715,"line_start":385,"line_end":385,"column_start":12,"column_end":24},"name":"mut_dispatch","qualname":"<LocalRequest>::mut_dispatch","value":"fn (&mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"/ Dispatches the request, returning the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27657,"byte_end":27708,"line_start":359,"line_end":359,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27713,"byte_end":27716,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This method _does not_ consume or clone `self`. Any changes to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27721,"byte_end":27791,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ request that occur during handling will be visible after this method is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27796,"byte_end":27871,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ called. For instance, body data is always consumed after a request is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27876,"byte_end":27949,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ dispatched. As such, only the first call to `mut_dispatch` for a given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":27954,"byte_end":28028,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ `LocalRequest` will contains the original body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28033,"byte_end":28089,"line_start":365,"line_end":365,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28094,"byte_end":28097,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This method should _only_ be used when either it is known that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28102,"byte_end":28168,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ the application will not modify the request, or it is desired to see","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28173,"byte_end":28245,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ modifications to the request. Prefer to use [`dispatch`] instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28250,"byte_end":28319,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28324,"byte_end":28327,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`dispatch`]: #method.dispatch","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28332,"byte_end":28366,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28371,"byte_end":28374,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28379,"byte_end":28392,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28397,"byte_end":28400,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28405,"byte_end":28416,"line_start":375,"line_end":375,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28421,"byte_end":28451,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28456,"byte_end":28459,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28464,"byte_end":28520,"line_start":378,"line_end":378,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28525,"byte_end":28528,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let mut req = client.get(\"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28533,"byte_end":28567,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/ let response_a = req.mut_dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28572,"byte_end":28612,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/ let response_b = req.mut_dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28617,"byte_end":28657,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28662,"byte_end":28669,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":28674,"byte_end":28691,"line_start":384,"line_end":384,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31148,"byte_end":31161,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"LocalResponse","qualname":"::local::request::LocalResponse","value":"LocalResponse {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" A structure representing a response from dispatching a local request.","sig":null,"attributes":[{"value":"/ A structure representing a response from dispatching a local request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30731,"byte_end":30804,"line_start":443,"line_end":443,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30805,"byte_end":30808,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ This structure is a thin wrapper around [`Response`]. It implements no","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30809,"byte_end":30883,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/ methods of its own; all functionality is exposed via the [`Deref`] and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30884,"byte_end":30958,"line_start":446,"line_end":446,"column_start":1,"column_end":75}},{"value":"/ [`DerefMut`] implementations with a target of `Response`. In other words,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30959,"byte_end":31036,"line_start":447,"line_end":447,"column_start":1,"column_end":78}},{"value":"/ when invoking methods, a `LocalResponse` can be treated exactly as if it","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31037,"byte_end":31113,"line_start":448,"line_end":448,"column_start":1,"column_end":77}},{"value":"/ were a `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31114,"byte_end":31136,"line_start":449,"line_end":449,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37461,"byte_end":37467,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Client","qualname":"::local::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" A structure to construct requests for local dispatching.","sig":null,"attributes":[{"value":"/ A structure to construct requests for local dispatching.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34815,"byte_end":34875,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34876,"byte_end":34879,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34880,"byte_end":34891,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34892,"byte_end":34895,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `Client` is constructed via the [`new()`] or [`untracked()`] methods from","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34896,"byte_end":34975,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ an already constructed `Rocket` instance. Once a value of `Client` has been","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":34976,"byte_end":35055,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ constructed, the [`LocalRequest`] constructor methods ([`get()`], [`put()`],","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35056,"byte_end":35136,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ [`post()`], and so on) can be used to create a `LocalRequest` for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35137,"byte_end":35206,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ dispatching.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35207,"byte_end":35223,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35224,"byte_end":35227,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See the [top-level documentation](::local) for more usage information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35228,"byte_end":35302,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35303,"byte_end":35306,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Cookie Tracking","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35307,"byte_end":35329,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35330,"byte_end":35333,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A `Client` constructed using [`new()`] propagates cookie changes made by","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35334,"byte_end":35410,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ responses to previously dispatched requests. In other words, if a previously","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35411,"byte_end":35491,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ dispatched request resulted in a response that adds a cookie, any future","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35492,"byte_end":35568,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ requests will contain that cookie. Similarly, cookies removed by a response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35569,"byte_end":35648,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ won't be propagated further.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35649,"byte_end":35681,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35682,"byte_end":35685,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This is typically the desired mode of operation for a `Client` as it removes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35686,"byte_end":35766,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ the burden of manually tracking cookies. Under some circumstances, however,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35767,"byte_end":35846,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ disabling this tracking may be desired. In these cases, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35847,"byte_end":35914,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ [`untracked()`](Client::untracked()) constructor to create a `Client` that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35915,"byte_end":35993,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ _will not_ track cookies.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":35994,"byte_end":36023,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36024,"byte_end":36027,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ### Synchronization","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36028,"byte_end":36051,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36052,"byte_end":36055,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ While `Client` implements `Sync`, using it in a multithreaded environment","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36056,"byte_end":36133,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ while tracking cookies can result in surprising, non-deterministic behavior.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36134,"byte_end":36214,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ This is because while cookie modifications are serialized, the exact","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36215,"byte_end":36287,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ ordering depends on when requests are dispatched. Specifically, when cookie","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36288,"byte_end":36367,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ tracking is enabled, all request dispatches are serialized, which in-turn","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36368,"byte_end":36445,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ serializes modifications to the internally tracked cookies.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36446,"byte_end":36509,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36510,"byte_end":36513,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If possible, refrain from sharing a single instance of `Client` across","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36514,"byte_end":36588,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ multiple threads. Instead, prefer to create a unique instance of `Client`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36589,"byte_end":36666,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ per thread. If it's not possible, ensure that either you are not depending","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36667,"byte_end":36745,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ on cookies, the ordering of their modifications, or both, or have arranged","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36746,"byte_end":36824,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ for dispatches to occur in a deterministic ordering.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36825,"byte_end":36881,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36882,"byte_end":36885,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36886,"byte_end":36900,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36901,"byte_end":36904,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The following snippet creates a `Client` from a `Rocket` instance and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36905,"byte_end":36978,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ dispatches a local request to `POST /` with a body of `Hello, world!`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":36979,"byte_end":37053,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37054,"byte_end":37057,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37058,"byte_end":37069,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37070,"byte_end":37100,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37101,"byte_end":37104,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37105,"byte_end":37139,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ let client = Client::new(rocket).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37140,"byte_end":37200,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/ let response = client.post(\"/\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37201,"byte_end":37236,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/     .body(\"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37237,"byte_end":37267,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/     .dispatch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37268,"byte_end":37288,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37289,"byte_end":37296,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37297,"byte_end":37300,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`new()`]: #method.new","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37301,"byte_end":37327,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/ [`untracked()`]: #method.untracked","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37328,"byte_end":37366,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/ [`get()`]: #method.get","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37367,"byte_end":37393,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [`put()`]: #method.put","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37394,"byte_end":37420,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ [`post()`]: #method.post","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37421,"byte_end":37449,"line_start":69,"line_end":69,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39212,"byte_end":39215,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"fn (rocket: Rocket) -> Result<Client, LaunchError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Client` from an instance of `Rocket` with cookie\n tracking.","sig":null,"attributes":[{"value":"/ Construct a new `Client` from an instance of `Rocket` with cookie","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38021,"byte_end":38090,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ tracking.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38095,"byte_end":38108,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38113,"byte_end":38116,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Cookie Tracking","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38121,"byte_end":38142,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38147,"byte_end":38150,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ By default, a `Client` propagates cookie changes made by responses to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38155,"byte_end":38228,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ previously dispatched requests. In other words, if a previously","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38233,"byte_end":38300,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ dispatched request resulted in a response that adds a cookie, any future","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38305,"byte_end":38381,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ requests will contain the new cookies. Similarly, cookies removed by a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38386,"byte_end":38460,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ response won't be propagated further.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38465,"byte_end":38506,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38511,"byte_end":38514,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is typically the desired mode of operation for a `Client` as it","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38519,"byte_end":38591,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ removes the burden of manually tracking cookies. Under some","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38596,"byte_end":38659,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/ circumstances, however, disabling this tracking may be desired. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38664,"byte_end":38735,"line_start":101,"line_end":101,"column_start":5,"column_end":76}},{"value":"/ [`untracked()`](Client::untracked()) method creates a `Client` that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38740,"byte_end":38811,"line_start":102,"line_end":102,"column_start":5,"column_end":76}},{"value":"/ _will not_ track cookies.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38816,"byte_end":38845,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38850,"byte_end":38853,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38858,"byte_end":38870,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38875,"byte_end":38878,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If launching the `Rocket` instance would fail, excepting network errors,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38883,"byte_end":38959,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ the `LaunchError` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":38964,"byte_end":38998,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39003,"byte_end":39006,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39011,"byte_end":39024,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39029,"byte_end":39032,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39037,"byte_end":39048,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39053,"byte_end":39083,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39088,"byte_end":39091,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39096,"byte_end":39166,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39171,"byte_end":39178,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39183,"byte_end":39200,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39971,"byte_end":39980,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"untracked","qualname":"<Client>::untracked","value":"fn (rocket: Rocket) -> Result<Client, LaunchError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Client` from an instance of `Rocket` _without_ cookie\n tracking.","sig":null,"attributes":[{"value":"/ Construct a new `Client` from an instance of `Rocket` _without_ cookie","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39311,"byte_end":39385,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ tracking.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39390,"byte_end":39403,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39408,"byte_end":39411,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Cookie Tracking","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39416,"byte_end":39437,"line_start":125,"line_end":125,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39442,"byte_end":39445,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`new()`](Client::new()) constructor, a `Client` returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39450,"byte_end":39522,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ from this method _does not_ automatically propagate cookie changes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39527,"byte_end":39598,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39603,"byte_end":39606,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39611,"byte_end":39623,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39628,"byte_end":39631,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If launching the `Rocket` instance would fail, excepting network errors,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39636,"byte_end":39712,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ the `LaunchError` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39717,"byte_end":39751,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39756,"byte_end":39759,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39764,"byte_end":39777,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39782,"byte_end":39785,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39790,"byte_end":39801,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39806,"byte_end":39836,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39841,"byte_end":39844,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let client = Client::untracked(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39849,"byte_end":39925,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39930,"byte_end":39937,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":39942,"byte_end":39959,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40508,"byte_end":40514,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"rocket","qualname":"<Client>::rocket","value":"fn (&self) -> &Rocket","parent":null,"children":[],"decl_id":null,"docs":" Returns the instance of `Rocket` this client is creating requests for.","sig":null,"attributes":[{"value":"/ Returns the instance of `Rocket` this client is creating requests for.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40077,"byte_end":40151,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40156,"byte_end":40159,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40164,"byte_end":40177,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40182,"byte_end":40185,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40190,"byte_end":40201,"line_start":151,"line_end":151,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40206,"byte_end":40236,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40241,"byte_end":40244,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let my_rocket = rocket::ignite();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40249,"byte_end":40286,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ let client = Client::new(my_rocket).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40291,"byte_end":40354,"line_start":155,"line_end":155,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40359,"byte_end":40362,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // get the instance of `my_rocket` within `client`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40367,"byte_end":40421,"line_start":157,"line_end":157,"column_start":5,"column_end":59}},{"value":"/ let my_rocket = client.rocket();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40426,"byte_end":40462,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40467,"byte_end":40474,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40479,"byte_end":40496,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41134,"byte_end":41137,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `GET` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `GET` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40567,"byte_end":40617,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40622,"byte_end":40625,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40630,"byte_end":40703,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40708,"byte_end":40783,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40788,"byte_end":40863,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40868,"byte_end":40880,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40885,"byte_end":40888,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40893,"byte_end":40906,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40911,"byte_end":40914,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40919,"byte_end":40930,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40935,"byte_end":40965,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40970,"byte_end":40973,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":40978,"byte_end":41048,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ let req = client.get(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41053,"byte_end":41088,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41093,"byte_end":41100,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41105,"byte_end":41122,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41826,"byte_end":41829,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PUT` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `PUT` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41259,"byte_end":41309,"line_start":185,"line_end":185,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41314,"byte_end":41317,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41322,"byte_end":41395,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41400,"byte_end":41475,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41480,"byte_end":41555,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41560,"byte_end":41572,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41577,"byte_end":41580,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41585,"byte_end":41598,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41603,"byte_end":41606,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41611,"byte_end":41622,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41627,"byte_end":41657,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41662,"byte_end":41665,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41670,"byte_end":41740,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ let req = client.put(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41745,"byte_end":41780,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41785,"byte_end":41792,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41797,"byte_end":41814,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42654,"byte_end":42658,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `POST` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `POST` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":41951,"byte_end":42002,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42007,"byte_end":42010,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42015,"byte_end":42088,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42093,"byte_end":42168,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42173,"byte_end":42248,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42253,"byte_end":42265,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42270,"byte_end":42273,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42278,"byte_end":42291,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42296,"byte_end":42299,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42304,"byte_end":42315,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42320,"byte_end":42350,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42355,"byte_end":42389,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42394,"byte_end":42397,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42402,"byte_end":42472,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42477,"byte_end":42480,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let req = client.post(\"/hello\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42485,"byte_end":42520,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     .body(\"field=value&otherField=123\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42525,"byte_end":42568,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/     .header(ContentType::Form);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42573,"byte_end":42608,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42613,"byte_end":42620,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42625,"byte_end":42642,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43354,"byte_end":43360,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `DELETE` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `DELETE` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42781,"byte_end":42834,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42839,"byte_end":42842,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42847,"byte_end":42920,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":42925,"byte_end":43000,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43005,"byte_end":43080,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43085,"byte_end":43097,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43102,"byte_end":43105,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43110,"byte_end":43123,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43128,"byte_end":43131,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43136,"byte_end":43147,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43152,"byte_end":43182,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43187,"byte_end":43190,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43195,"byte_end":43265,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ let req = client.delete(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43270,"byte_end":43308,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43313,"byte_end":43320,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43325,"byte_end":43342,"line_start":244,"line_end":244,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44080,"byte_end":44087,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"options","qualname":"<Client>::options","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `OPTIONS` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `OPTIONS` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43505,"byte_end":43559,"line_start":251,"line_end":251,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43564,"byte_end":43567,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43572,"byte_end":43645,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43650,"byte_end":43725,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43730,"byte_end":43805,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43810,"byte_end":43822,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43827,"byte_end":43830,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43835,"byte_end":43848,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43853,"byte_end":43856,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43861,"byte_end":43872,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43877,"byte_end":43907,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43912,"byte_end":43915,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43920,"byte_end":43990,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ let req = client.options(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":43995,"byte_end":44034,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44039,"byte_end":44046,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44051,"byte_end":44068,"line_start":266,"line_end":266,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44802,"byte_end":44806,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `HEAD` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `HEAD` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44233,"byte_end":44284,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44289,"byte_end":44292,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44297,"byte_end":44370,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44375,"byte_end":44450,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44455,"byte_end":44530,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44535,"byte_end":44547,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44552,"byte_end":44555,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44560,"byte_end":44573,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44578,"byte_end":44581,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44586,"byte_end":44597,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44602,"byte_end":44632,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44637,"byte_end":44640,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44645,"byte_end":44715,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ let req = client.head(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44720,"byte_end":44756,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44761,"byte_end":44768,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44773,"byte_end":44790,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45520,"byte_end":45525,"line_start":311,"line_end":311,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PATCH` request to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local `PATCH` request to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":44949,"byte_end":45001,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45006,"byte_end":45009,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45014,"byte_end":45087,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45092,"byte_end":45167,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45172,"byte_end":45247,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45252,"byte_end":45264,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45269,"byte_end":45272,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45277,"byte_end":45290,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45295,"byte_end":45298,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45303,"byte_end":45314,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45319,"byte_end":45349,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45354,"byte_end":45357,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45362,"byte_end":45432,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ let req = client.patch(\"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45437,"byte_end":45474,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45479,"byte_end":45486,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45491,"byte_end":45508,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46298,"byte_end":46301,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"req","qualname":"<Client>::req","value":"fn <'c, 'u, U> (&'c self, method: Method, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local request with method `method` to the URI `uri`.","sig":null,"attributes":[{"value":"/ Create a local request with method `method` to the URI `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45669,"byte_end":45734,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45739,"byte_end":45742,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ When dispatched, the request will be served by the instance of Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45747,"byte_end":45820,"line_start":319,"line_end":319,"column_start":5,"column_end":78}},{"value":"/ within `self`. The request is not dispatched automatically. To actually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45825,"byte_end":45900,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ dispatch the request, call [`LocalRequest::dispatch()`] on the returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45905,"byte_end":45980,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":45985,"byte_end":45997,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46002,"byte_end":46005,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46010,"byte_end":46023,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46028,"byte_end":46031,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46036,"byte_end":46047,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ use rocket::local::Client;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46052,"byte_end":46082,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46087,"byte_end":46116,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46121,"byte_end":46124,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new(rocket::ignite()).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46129,"byte_end":46199,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ let req = client.req(Method::Get, \"/hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46204,"byte_end":46252,"line_start":331,"line_end":331,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46257,"byte_end":46264,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":46269,"byte_end":46286,"line_start":333,"line_end":333,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":186},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"request","qualname":"::request","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":328},{"krate":0,"index":410},{"krate":0,"index":613},{"krate":0,"index":691},{"krate":0,"index":716},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777}],"decl_id":null,"docs":" Types and traits for request parsing and handling.\n","sig":null,"attributes":[{"value":"! Types and traits for request parsing and handling.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/mod.rs","byte_start":46649,"byte_end":46703,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2226},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48262,"byte_end":48269,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"decl_id":null,"docs":" The type of an incoming web request.","sig":null,"attributes":[{"value":"/ The type of an incoming web request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":47879,"byte_end":47919,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":47920,"byte_end":47923,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This should be used sparingly in Rocket applications. In particular, it","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":47924,"byte_end":47999,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ should likely only be used when writing [`FromRequest`] implementations. It","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48000,"byte_end":48079,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ contains all of the information for a given web request except for the body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48080,"byte_end":48159,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ data. This includes the HTTP method, URI, cookies, headers, and more.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48160,"byte_end":48233,"line_start":28,"line_end":28,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50260,"byte_end":50266,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"fn (&self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the method from `self`.","sig":null,"attributes":[{"value":"/ Retrieve the method from `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49889,"byte_end":49925,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49930,"byte_end":49933,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49938,"byte_end":49951,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49956,"byte_end":49959,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49964,"byte_end":49975,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":49980,"byte_end":50006,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50011,"byte_end":50040,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50045,"byte_end":50048,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50053,"byte_end":50108,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/ request.set_method(Method::Get);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50113,"byte_end":50149,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(request.method(), Method::Get);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50154,"byte_end":50200,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50205,"byte_end":50214,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50219,"byte_end":50226,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50231,"byte_end":50248,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50748,"byte_end":50758,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"set_method","qualname":"<Request>::set_method","value":"fn (&mut self, method: Method) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the method of `self`.","sig":null,"attributes":[{"value":"/ Set the method of `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50323,"byte_end":50352,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50357,"byte_end":50360,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50365,"byte_end":50378,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50383,"byte_end":50386,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50391,"byte_end":50402,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50407,"byte_end":50433,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50438,"byte_end":50467,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50472,"byte_end":50475,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50480,"byte_end":50535,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(request.method(), Method::Get);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50540,"byte_end":50586,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50591,"byte_end":50594,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ request.set_method(Method::Post);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50599,"byte_end":50636,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(request.method(), Method::Post);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50641,"byte_end":50688,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50693,"byte_end":50702,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50707,"byte_end":50714,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50719,"byte_end":50736,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51162,"byte_end":51165,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"uri","qualname":"<Request>::uri","value":"fn (&self) -> &Origin","parent":null,"children":[],"decl_id":null,"docs":" Borrow the [`Origin`] URI from `self`.","sig":null,"attributes":[{"value":"/ Borrow the [`Origin`] URI from `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50833,"byte_end":50875,"line_start":126,"line_end":126,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50880,"byte_end":50883,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50888,"byte_end":50901,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50906,"byte_end":50909,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50914,"byte_end":50925,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50930,"byte_end":50956,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50961,"byte_end":50992,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":50997,"byte_end":51052,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(request.uri().path(), \"/uri\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51057,"byte_end":51102,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51107,"byte_end":51116,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51121,"byte_end":51128,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51133,"byte_end":51150,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51744,"byte_end":51751,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Request>::set_uri","value":"fn <'u> (&mut self, uri: Origin<'u>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the URI in `self` to `uri`.","sig":null,"attributes":[{"value":"/ Set the URI in `self` to `uri`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51215,"byte_end":51250,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51255,"byte_end":51258,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51263,"byte_end":51276,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51281,"byte_end":51284,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51289,"byte_end":51300,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/ use rocket::http::uri::Origin;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51305,"byte_end":51339,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51344,"byte_end":51347,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51352,"byte_end":51378,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51383,"byte_end":51414,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51419,"byte_end":51478,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/ let uri = Origin::parse(\"/hello/Sergio?type=greeting\").unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51483,"byte_end":51551,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ request.set_uri(uri);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51556,"byte_end":51581,"line_start":153,"line_end":153,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(request.uri().path(), \"/hello/Sergio\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51586,"byte_end":51640,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(request.uri().query(), Some(\"type=greeting\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51645,"byte_end":51706,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51711,"byte_end":51720,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51725,"byte_end":51732,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52777,"byte_end":52783,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"remote","qualname":"<Request>::remote","value":"fn (&self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the remote connection that initiated this\n request if the address is known. If the address is not known, `None` is\n returned.","sig":null,"attributes":[{"value":"/ Returns the address of the remote connection that initiated this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51864,"byte_end":51932,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/ request if the address is known. If the address is not known, `None` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":51937,"byte_end":52012,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52017,"byte_end":52030,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52035,"byte_end":52038,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Because it is common for proxies to forward connections for clients, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52043,"byte_end":52119,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ remote address may contain information about the proxy instead of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52124,"byte_end":52197,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ client. For this reason, proxies typically set the \"X-Real-IP\" header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52202,"byte_end":52275,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ with the client's true IP. To extract this IP from the request, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52280,"byte_end":52355,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ [`real_ip()`] or [`client_ip()`] methods.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52360,"byte_end":52405,"line_start":171,"line_end":171,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52410,"byte_end":52413,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`real_ip()`]: #method.real_ip","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52418,"byte_end":52452,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/ [`client_ip()`]: #method.client_ip","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52457,"byte_end":52495,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52500,"byte_end":52503,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52508,"byte_end":52521,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52526,"byte_end":52529,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52534,"byte_end":52545,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52550,"byte_end":52576,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52581,"byte_end":52612,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52617,"byte_end":52672,"line_start":181,"line_end":181,"column_start":5,"column_end":60}},{"value":"/ assert!(request.remote().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52677,"byte_end":52717,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52722,"byte_end":52731,"line_start":183,"line_end":183,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52736,"byte_end":52743,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52748,"byte_end":52765,"line_start":185,"line_end":185,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53488,"byte_end":53498,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"set_remote","qualname":"<Request>::set_remote","value":"fn (&mut self, address: SocketAddr) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the remote address of `self` to `address`.","sig":null,"attributes":[{"value":"/ Sets the remote address of `self` to `address`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52846,"byte_end":52897,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52902,"byte_end":52905,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52910,"byte_end":52923,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52928,"byte_end":52931,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Set the remote address to be 127.0.0.1:8000:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52936,"byte_end":52984,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52989,"byte_end":52992,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":52997,"byte_end":53008,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53013,"byte_end":53039,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53044,"byte_end":53075,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/ use std::net::{SocketAddr, IpAddr, Ipv4Addr};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53080,"byte_end":53129,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53134,"byte_end":53137,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53142,"byte_end":53201,"line_start":201,"line_end":201,"column_start":5,"column_end":64}},{"value":"/ let (ip, port) = (IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8000);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53206,"byte_end":53275,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ let localhost = SocketAddr::new(ip, port);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53280,"byte_end":53326,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ request.set_remote(localhost);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53331,"byte_end":53365,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53370,"byte_end":53373,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(request.remote(), Some(localhost));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53378,"byte_end":53428,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53433,"byte_end":53442,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53447,"byte_end":53454,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53459,"byte_end":53476,"line_start":209,"line_end":209,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54144,"byte_end":54151,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"real_ip","qualname":"<Request>::real_ip","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address in the \"X-Real-IP\" header of the request if such\n a header exists and contains a valid IP address.","sig":null,"attributes":[{"value":"/ Returns the IP address in the \"X-Real-IP\" header of the request if such","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53581,"byte_end":53656,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ a header exists and contains a valid IP address.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53661,"byte_end":53713,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53718,"byte_end":53721,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53726,"byte_end":53739,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53744,"byte_end":53747,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53752,"byte_end":53763,"line_start":219,"line_end":219,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53768,"byte_end":53794,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::{Header, Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53799,"byte_end":53840,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ # use std::net::{SocketAddr, IpAddr, Ipv4Addr};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53845,"byte_end":53896,"line_start":222,"line_end":222,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53901,"byte_end":53904,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53909,"byte_end":53968,"line_start":224,"line_end":224,"column_start":5,"column_end":64}},{"value":"/ request.add_header(Header::new(\"X-Real-IP\", \"8.8.8.8\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":53973,"byte_end":54033,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(request.real_ip(), Some(\"8.8.8.8\".parse().unwrap()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54038,"byte_end":54106,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54111,"byte_end":54120,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54125,"byte_end":54132,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55648,"byte_end":55657,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"client_ip","qualname":"<Request>::client_ip","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return the client's IP address by first inspecting the\n \"X-Real-IP\" header and then using the remote connection's IP address.","sig":null,"attributes":[{"value":"/ Attempts to return the client's IP address by first inspecting the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54428,"byte_end":54498,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ \"X-Real-IP\" header and then using the remote connection's IP address.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54503,"byte_end":54576,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54581,"byte_end":54584,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If the \"X-Real-IP\" header exists and contains a valid IP address, that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54589,"byte_end":54663,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ address is returned. Otherwise, if the address of the remote connection","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54668,"byte_end":54743,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ is known, that address is returned. Otherwise, `None` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54748,"byte_end":54818,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54823,"byte_end":54826,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54831,"byte_end":54844,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54849,"byte_end":54852,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54857,"byte_end":54868,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54873,"byte_end":54899,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::{Header, Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54904,"byte_end":54945,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/ # use std::net::{SocketAddr, IpAddr, Ipv4Addr};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":54950,"byte_end":55001,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55006,"byte_end":55009,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55014,"byte_end":55073,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ // starting without an \"X-Real-IP\" header or remote addresss","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55078,"byte_end":55142,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ assert!(request.client_ip().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55147,"byte_end":55190,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55195,"byte_end":55198,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ // add a remote address; this is done by Rocket automatically","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55203,"byte_end":55268,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ request.set_remote(\"127.0.0.1:8000\".parse().unwrap());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55273,"byte_end":55331,"line_start":258,"line_end":258,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(request.client_ip(), Some(\"127.0.0.1\".parse().unwrap()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55336,"byte_end":55408,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55413,"byte_end":55416,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // now with an X-Real-IP header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55421,"byte_end":55456,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ request.add_header(Header::new(\"X-Real-IP\", \"8.8.8.8\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55461,"byte_end":55521,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(request.client_ip(), Some(\"8.8.8.8\".parse().unwrap()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55526,"byte_end":55596,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55601,"byte_end":55610,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55615,"byte_end":55622,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55627,"byte_end":55636,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56408,"byte_end":56415,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Request>::cookies","value":"fn (&self) -> Cookies","parent":null,"children":[],"decl_id":null,"docs":" Returns a wrapped borrow to the cookies in `self`.","sig":null,"attributes":[{"value":"/ Returns a wrapped borrow to the cookies in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55761,"byte_end":55815,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55820,"byte_end":55823,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`Cookies`] implements internal mutability, so this method allows you to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55828,"byte_end":55904,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ get _and_ add/remove cookies in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55909,"byte_end":55952,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55957,"byte_end":55960,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55965,"byte_end":55978,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55983,"byte_end":55986,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Add a new cookie to a request's cookies:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":55991,"byte_end":56035,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56040,"byte_end":56043,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56048,"byte_end":56059,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56064,"byte_end":56090,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56095,"byte_end":56126,"line_start":282,"line_end":282,"column_start":5,"column_end":36}},{"value":"/ use rocket::http::Cookie;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56131,"byte_end":56160,"line_start":283,"line_end":283,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56165,"byte_end":56168,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56173,"byte_end":56232,"line_start":285,"line_end":285,"column_start":5,"column_end":64}},{"value":"/ request.cookies().add(Cookie::new(\"key\", \"val\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56237,"byte_end":56290,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/ request.cookies().add(Cookie::new(\"ans\", format!(\"life: {}\", 38 + 4)));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56295,"byte_end":56370,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56375,"byte_end":56384,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56389,"byte_end":56396,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57372,"byte_end":57379,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`] of all of the headers in `self`.","sig":null,"attributes":[{"value":"/ Returns a [`HeaderMap`] of all of the headers in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":56991,"byte_end":57051,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57056,"byte_end":57059,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57064,"byte_end":57077,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57082,"byte_end":57085,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57090,"byte_end":57101,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57106,"byte_end":57132,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57137,"byte_end":57168,"line_start":310,"line_end":310,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57173,"byte_end":57228,"line_start":311,"line_end":311,"column_start":5,"column_end":60}},{"value":"/ let header_map = request.headers();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57233,"byte_end":57272,"line_start":312,"line_end":312,"column_start":5,"column_end":44}},{"value":"/ assert!(header_map.is_empty());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57277,"byte_end":57312,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57317,"byte_end":57326,"line_start":314,"line_end":314,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57331,"byte_end":57338,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57343,"byte_end":57360,"line_start":316,"line_end":316,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58138,"byte_end":58148,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"add_header","qualname":"<Request>::add_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add `header` to `self`'s headers. The type of `header` can be any type\n that implements the `Into<Header>` trait. This includes common types\n such as [`ContentType`] and [`Accept`].","sig":null,"attributes":[{"value":"/ Add `header` to `self`'s headers. The type of `header` can be any type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57440,"byte_end":57514,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ that implements the `Into<Header>` trait. This includes common types","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57519,"byte_end":57591,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/ such as [`ContentType`] and [`Accept`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57596,"byte_end":57639,"line_start":323,"line_end":323,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57644,"byte_end":57647,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57652,"byte_end":57665,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57670,"byte_end":57673,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57678,"byte_end":57689,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57694,"byte_end":57720,"line_start":328,"line_end":328,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57725,"byte_end":57756,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57761,"byte_end":57795,"line_start":330,"line_end":330,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57800,"byte_end":57803,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57808,"byte_end":57867,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/ assert!(request.headers().is_empty());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57872,"byte_end":57914,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57919,"byte_end":57922,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ request.add_header(ContentType::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57927,"byte_end":57969,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/ assert!(request.headers().contains(\"Content-Type\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":57974,"byte_end":58030,"line_start":336,"line_end":336,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(request.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58035,"byte_end":58078,"line_start":337,"line_end":337,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58083,"byte_end":58092,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58097,"byte_end":58104,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58109,"byte_end":58126,"line_start":340,"line_end":340,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59023,"byte_end":59037,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"replace_header","qualname":"<Request>::replace_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the value of the header with name `header.name` with\n `header.value`. If no such header exists, `header` is added as a header\n to `self`.","sig":null,"attributes":[{"value":"/ Replaces the value of the header with name `header.name` with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58254,"byte_end":58319,"line_start":345,"line_end":345,"column_start":5,"column_end":70}},{"value":"/ `header.value`. If no such header exists, `header` is added as a header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58324,"byte_end":58399,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ to `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58404,"byte_end":58418,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58423,"byte_end":58426,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58431,"byte_end":58444,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58449,"byte_end":58452,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58457,"byte_end":58468,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58473,"byte_end":58499,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58504,"byte_end":58535,"line_start":353,"line_end":353,"column_start":5,"column_end":36}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58540,"byte_end":58574,"line_start":354,"line_end":354,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58579,"byte_end":58582,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58587,"byte_end":58646,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ assert!(request.headers().is_empty());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58651,"byte_end":58693,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58698,"byte_end":58701,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ request.add_header(ContentType::Any);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58706,"byte_end":58747,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(request.headers().get_one(\"Content-Type\"), Some(\"*/*\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58752,"byte_end":58823,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58828,"byte_end":58831,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ request.replace_header(ContentType::PNG);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58836,"byte_end":58881,"line_start":362,"line_end":362,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(request.headers().get_one(\"Content-Type\"), Some(\"image/png\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58886,"byte_end":58963,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58968,"byte_end":58977,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58982,"byte_end":58989,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":58994,"byte_end":59011,"line_start":366,"line_end":366,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60010,"byte_end":60022,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Request>::content_type","value":"fn (&self) -> Option<&ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present,\n returns `None`. The Content-Type header is cached after the first call\n to this function. As a result, subsequent calls will always return the\n same value.","sig":null,"attributes":[{"value":"/ Returns the Content-Type header of `self`. If the header is not present,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59147,"byte_end":59223,"line_start":371,"line_end":371,"column_start":5,"column_end":81}},{"value":"/ returns `None`. The Content-Type header is cached after the first call","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59228,"byte_end":59302,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ to this function. As a result, subsequent calls will always return the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59307,"byte_end":59381,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ same value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59386,"byte_end":59401,"line_start":374,"line_end":374,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59406,"byte_end":59409,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59414,"byte_end":59427,"line_start":376,"line_end":376,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59432,"byte_end":59435,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59440,"byte_end":59451,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59456,"byte_end":59482,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59487,"byte_end":59518,"line_start":380,"line_end":380,"column_start":5,"column_end":36}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59523,"byte_end":59557,"line_start":381,"line_end":381,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59562,"byte_end":59565,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59570,"byte_end":59629,"line_start":383,"line_end":383,"column_start":5,"column_end":64}},{"value":"/ request.add_header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59634,"byte_end":59676,"line_start":384,"line_end":384,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(request.content_type(), Some(&ContentType::JSON));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59681,"byte_end":59746,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59751,"byte_end":59754,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // The header is cached; it cannot be replaced after first access.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59759,"byte_end":59829,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/ request.replace_header(ContentType::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59834,"byte_end":59880,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(request.content_type(), Some(&ContentType::JSON));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59885,"byte_end":59950,"line_start":389,"line_end":389,"column_start":5,"column_end":70}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59955,"byte_end":59964,"line_start":390,"line_end":390,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59969,"byte_end":59976,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":59981,"byte_end":59998,"line_start":392,"line_end":392,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61029,"byte_end":61035,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"accept","qualname":"<Request>::accept","value":"fn (&self) -> Option<&Accept>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Accept header of `self`. If the header is not present,\n returns `None`. The Accept header is cached after the first call to this\n function. As a result, subsequent calls will always return the same\n value.","sig":null,"attributes":[{"value":"/ Returns the Accept header of `self`. If the header is not present,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60215,"byte_end":60285,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ returns `None`. The Accept header is cached after the first call to this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60290,"byte_end":60366,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ function. As a result, subsequent calls will always return the same","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60371,"byte_end":60442,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60447,"byte_end":60457,"line_start":402,"line_end":402,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60462,"byte_end":60465,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60470,"byte_end":60483,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60488,"byte_end":60491,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60496,"byte_end":60507,"line_start":406,"line_end":406,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60512,"byte_end":60538,"line_start":407,"line_end":407,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60543,"byte_end":60574,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/ use rocket::http::Accept;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60579,"byte_end":60608,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60613,"byte_end":60616,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60621,"byte_end":60680,"line_start":411,"line_end":411,"column_start":5,"column_end":64}},{"value":"/ request.add_header(Accept::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60685,"byte_end":60722,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(request.accept(), Some(&Accept::JSON));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60727,"byte_end":60781,"line_start":413,"line_end":413,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60786,"byte_end":60789,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ // The header is cached; it cannot be replaced after first access.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60794,"byte_end":60864,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/ request.replace_header(Accept::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60869,"byte_end":60910,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(request.accept(), Some(&Accept::JSON));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60915,"byte_end":60969,"line_start":417,"line_end":417,"column_start":5,"column_end":59}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60974,"byte_end":60983,"line_start":418,"line_end":418,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":60988,"byte_end":60995,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61000,"byte_end":61017,"line_start":420,"line_end":420,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62268,"byte_end":62274,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"format","qualname":"<Request>::format","value":"fn (&self) -> Option<&MediaType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the media type \"format\" of the request.","sig":null,"attributes":[{"value":"/ Returns the media type \"format\" of the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61211,"byte_end":61262,"line_start":427,"line_end":427,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61267,"byte_end":61270,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The \"format\" of a request is either the Content-Type, if the request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61275,"byte_end":61347,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ methods indicates support for a payload, or the preferred media type in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61352,"byte_end":61427,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ the Accept header otherwise. If the method indicates no payload and no","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61432,"byte_end":61506,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ Accept header is specified, a media type of `Any` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61511,"byte_end":61577,"line_start":432,"line_end":432,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61582,"byte_end":61585,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The media type returned from this method is used to match against the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61590,"byte_end":61663,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ `format` route attribute.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61668,"byte_end":61697,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61702,"byte_end":61705,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61710,"byte_end":61723,"line_start":437,"line_end":437,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61728,"byte_end":61731,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61736,"byte_end":61747,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61752,"byte_end":61778,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/ use rocket::http::{Method, Accept, ContentType, MediaType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61783,"byte_end":61846,"line_start":441,"line_end":441,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61851,"byte_end":61854,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61859,"byte_end":61918,"line_start":443,"line_end":443,"column_start":5,"column_end":64}},{"value":"/ request.add_header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61923,"byte_end":61965,"line_start":444,"line_end":444,"column_start":5,"column_end":47}},{"value":"/ request.add_header(Accept::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":61970,"byte_end":62007,"line_start":445,"line_end":445,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62012,"byte_end":62015,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ request.set_method(Method::Get);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62020,"byte_end":62056,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(request.format(), Some(&MediaType::HTML));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62061,"byte_end":62118,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62123,"byte_end":62126,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ request.set_method(Method::Post);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62131,"byte_end":62168,"line_start":450,"line_end":450,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(request.format(), Some(&MediaType::JSON));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62173,"byte_end":62230,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62235,"byte_end":62244,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62249,"byte_end":62256,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63155,"byte_end":63161,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"limits","qualname":"<Request>::limits","value":"fn (&self) -> &'r Limits","parent":null,"children":[],"decl_id":null,"docs":" Returns the configured application receive limits.","sig":null,"attributes":[{"value":"/ Returns the configured application receive limits.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62827,"byte_end":62881,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62886,"byte_end":62889,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62894,"byte_end":62907,"line_start":470,"line_end":470,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62912,"byte_end":62915,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62920,"byte_end":62931,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62936,"byte_end":62962,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":62967,"byte_end":62998,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63003,"byte_end":63062,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ let json_limit = request.limits().get(\"json\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63067,"byte_end":63117,"line_start":476,"line_end":476,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63122,"byte_end":63131,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63136,"byte_end":63143,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63748,"byte_end":63753,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"name":"route","qualname":"<Request>::route","value":"fn (&self) -> Option<&'r Route>","parent":null,"children":[],"decl_id":null,"docs":" Get the presently matched route, if any.","sig":null,"attributes":[{"value":"/ Get the presently matched route, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63230,"byte_end":63274,"line_start":483,"line_end":483,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63279,"byte_end":63282,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This method returns `Some` any time a handler or its guards are being","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63287,"byte_end":63360,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ invoked. This method returns `None` _before_ routing has commenced; this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63365,"byte_end":63441,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ includes during request fairing callbacks.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63446,"byte_end":63492,"line_start":487,"line_end":487,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63497,"byte_end":63500,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63505,"byte_end":63518,"line_start":489,"line_end":489,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63523,"byte_end":63526,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63531,"byte_end":63542,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63547,"byte_end":63573,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63578,"byte_end":63609,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/ # Request::example(Method::Get, \"/uri\", |mut request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63614,"byte_end":63673,"line_start":494,"line_end":494,"column_start":5,"column_end":64}},{"value":"/ let route = request.route();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63678,"byte_end":63710,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63715,"byte_end":63724,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63729,"byte_end":63736,"line_start":497,"line_end":497,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64648,"byte_end":64653,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"guard","qualname":"<Request>::guard","value":"fn <'a, T> (&'a self) -> Outcome<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the request guard implementation for `T`, returning its outcome.","sig":null,"attributes":[{"value":"/ Invokes the request guard implementation for `T`, returning its outcome.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63826,"byte_end":63902,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63907,"byte_end":63910,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63915,"byte_end":63928,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63933,"byte_end":63936,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Assuming a `User` request guard exists, invoke it:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":63941,"byte_end":63995,"line_start":506,"line_end":506,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64000,"byte_end":64003,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64008,"byte_end":64019,"line_start":508,"line_end":508,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64024,"byte_end":64050,"line_start":509,"line_end":509,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64055,"byte_end":64086,"line_start":510,"line_end":510,"column_start":5,"column_end":36}},{"value":"/ # type User = Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64091,"byte_end":64116,"line_start":511,"line_end":511,"column_start":5,"column_end":30}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64121,"byte_end":64176,"line_start":512,"line_end":512,"column_start":5,"column_end":60}},{"value":"/ let outcome = request.guard::<User>();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64181,"byte_end":64223,"line_start":513,"line_end":513,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64228,"byte_end":64237,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64242,"byte_end":64249,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64254,"byte_end":64257,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Retrieve managed state inside of a guard implementation:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64262,"byte_end":64322,"line_start":517,"line_end":517,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64327,"byte_end":64330,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64335,"byte_end":64346,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64351,"byte_end":64377,"line_start":520,"line_end":520,"column_start":5,"column_end":31}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64382,"byte_end":64413,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64418,"byte_end":64440,"line_start":522,"line_end":522,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64445,"byte_end":64448,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # type Pool = usize;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64453,"byte_end":64477,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64482,"byte_end":64537,"line_start":525,"line_end":525,"column_start":5,"column_end":60}},{"value":"/ let pool = request.guard::<State<Pool>>();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64542,"byte_end":64588,"line_start":526,"line_end":526,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64593,"byte_end":64602,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64607,"byte_end":64614,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64619,"byte_end":64636,"line_start":529,"line_end":529,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65455,"byte_end":65466,"line_start":553,"line_end":553,"column_start":12,"column_end":23},"name":"local_cache","qualname":"<Request>::local_cache","value":"fn <T, F> (&self, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the cached value for type `T` from the request-local cached\n state of `self`. If no such value has previously been cached for this\n request, `f` is called to produce the value which is subsequently\n returned.","sig":null,"attributes":[{"value":"/ Retrieves the cached value for type `T` from the request-local cached","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64759,"byte_end":64832,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ state of `self`. If no such value has previously been cached for this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64837,"byte_end":64910,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/ request, `f` is called to produce the value which is subsequently","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64915,"byte_end":64984,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":64989,"byte_end":65002,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65007,"byte_end":65010,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65015,"byte_end":65028,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65033,"byte_end":65036,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65041,"byte_end":65052,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65057,"byte_end":65088,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/ # use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65093,"byte_end":65119,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/ # type User = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65124,"byte_end":65145,"line_start":544,"line_end":544,"column_start":5,"column_end":26}},{"value":"/ fn current_user(request: &Request) -> User {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65150,"byte_end":65198,"line_start":545,"line_end":545,"column_start":5,"column_end":53}},{"value":"/     // Validate request for a given user, load from database, etc.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65203,"byte_end":65273,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65278,"byte_end":65283,"line_start":547,"line_end":547,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65288,"byte_end":65291,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/uri\", |request| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65296,"byte_end":65351,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/ let user = request.local_cache(|| current_user(request));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65356,"byte_end":65417,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65422,"byte_end":65431,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65436,"byte_end":65443,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67130,"byte_end":67139,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"get_param","qualname":"<Request>::get_param","value":"fn <'a, T> (&'a self, n: usize) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` the 0-indexed `n`th segment from the\n request. Returns `None` if `n` is greater than the number of segments.\n Returns `Some(Err(T::Error))` if the parameter type `T` failed to be\n parsed from the `n`th dynamic parameter.","sig":null,"attributes":[{"value":"/ Retrieves and parses into `T` the 0-indexed `n`th segment from the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65745,"byte_end":65815,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/ request. Returns `None` if `n` is greater than the number of segments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65820,"byte_end":65894,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ Returns `Some(Err(T::Error))` if the parameter type `T` failed to be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65899,"byte_end":65971,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ parsed from the `n`th dynamic parameter.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":65976,"byte_end":66020,"line_start":567,"line_end":567,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66025,"byte_end":66028,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method exists only to be used by manual routing. To retrieve","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66033,"byte_end":66102,"line_start":569,"line_end":569,"column_start":5,"column_end":74}},{"value":"/ parameters from a request, use Rocket's code generation facilities.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66107,"byte_end":66178,"line_start":570,"line_end":570,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66183,"byte_end":66186,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66191,"byte_end":66204,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66209,"byte_end":66212,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66217,"byte_end":66228,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/ # use rocket::{Request, http::Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66233,"byte_end":66275,"line_start":575,"line_end":575,"column_start":5,"column_end":47}},{"value":"/ use rocket::http::{RawStr, uri::Origin};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66280,"byte_end":66324,"line_start":576,"line_end":576,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66329,"byte_end":66332,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/\", |req| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66337,"byte_end":66385,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"/ fn string<'s>(req: &'s mut Request, uri: &'static str, n: usize) -> &'s RawStr {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66390,"byte_end":66474,"line_start":579,"line_end":579,"column_start":5,"column_end":89}},{"value":"/     req.set_uri(Origin::parse(uri).unwrap());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66479,"byte_end":66528,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66533,"byte_end":66536,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     req.get_param(n)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66541,"byte_end":66565,"line_start":582,"line_end":582,"column_start":5,"column_end":29}},{"value":"/         .and_then(|r| r.ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66570,"byte_end":66603,"line_start":583,"line_end":583,"column_start":5,"column_end":38}},{"value":"/         .unwrap_or(\"unnamed\".into())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66608,"byte_end":66648,"line_start":584,"line_end":584,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66653,"byte_end":66658,"line_start":585,"line_end":585,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66663,"byte_end":66666,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string(req, \"/\", 0).as_str(), \"unnamed\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66671,"byte_end":66727,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(string(req, \"/a/b/this_one\", 0).as_str(), \"a\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66732,"byte_end":66794,"line_start":588,"line_end":588,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(string(req, \"/a/b/this_one\", 1).as_str(), \"b\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66799,"byte_end":66861,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(string(req, \"/a/b/this_one\", 2).as_str(), \"this_one\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66866,"byte_end":66935,"line_start":590,"line_end":590,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(string(req, \"/a/b/this_one\", 3).as_str(), \"unnamed\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":66940,"byte_end":67008,"line_start":591,"line_end":591,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(string(req, \"/a/b/c/d/e/f/g/h\", 7).as_str(), \"h\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67013,"byte_end":67078,"line_start":592,"line_end":592,"column_start":5,"column_end":70}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67083,"byte_end":67092,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67097,"byte_end":67104,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67109,"byte_end":67118,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68827,"byte_end":68839,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"get_segments","qualname":"<Request>::get_segments","value":"fn <'a, T> (&'a self, n: usize) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` all of the path segments in the request\n URI beginning and including the 0-indexed `n`th non-empty segment. `T`\n must implement [`FromSegments`], which is used to parse the segments.","sig":null,"attributes":[{"value":"/ Retrieves and parses into `T` all of the path segments in the request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67300,"byte_end":67373,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ URI beginning and including the 0-indexed `n`th non-empty segment. `T`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67378,"byte_end":67452,"line_start":603,"line_end":603,"column_start":5,"column_end":79}},{"value":"/ must implement [`FromSegments`], which is used to parse the segments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67457,"byte_end":67530,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67535,"byte_end":67538,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ This method exists only to be used by manual routing. To retrieve","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67543,"byte_end":67612,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"/ segments from a request, use Rocket's code generation facilities.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67617,"byte_end":67686,"line_start":607,"line_end":607,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67691,"byte_end":67694,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67699,"byte_end":67710,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67715,"byte_end":67718,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ If there are fewer than `n` non-empty segments, returns `None`. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67723,"byte_end":67793,"line_start":611,"line_end":611,"column_start":5,"column_end":75}},{"value":"/ parsing the segments failed, returns `Some(Err(T:Error))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67798,"byte_end":67860,"line_start":612,"line_end":612,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67865,"byte_end":67868,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67873,"byte_end":67886,"line_start":614,"line_end":614,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67891,"byte_end":67894,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67899,"byte_end":67910,"line_start":616,"line_end":616,"column_start":5,"column_end":16}},{"value":"/ # use rocket::{Request, http::Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67915,"byte_end":67957,"line_start":617,"line_end":617,"column_start":5,"column_end":47}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67962,"byte_end":67989,"line_start":618,"line_end":618,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":67994,"byte_end":67997,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ use rocket::http::uri::Origin;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68002,"byte_end":68036,"line_start":620,"line_end":620,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68041,"byte_end":68044,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/\", |req| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68049,"byte_end":68097,"line_start":622,"line_end":622,"column_start":5,"column_end":53}},{"value":"/ fn path<'s>(req: &'s mut Request, uri: &'static str, n: usize) -> PathBuf {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68102,"byte_end":68181,"line_start":623,"line_end":623,"column_start":5,"column_end":84}},{"value":"/     req.set_uri(Origin::parse(uri).unwrap());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68186,"byte_end":68235,"line_start":624,"line_end":624,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68240,"byte_end":68243,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/     req.get_segments(n)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68248,"byte_end":68275,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/         .and_then(|r| r.ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68280,"byte_end":68313,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/         .unwrap_or_else(|| \"whoops\".into())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68318,"byte_end":68365,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68370,"byte_end":68375,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68380,"byte_end":68383,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path(req, \"/\", 0), PathBuf::from(\"whoops\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68388,"byte_end":68447,"line_start":631,"line_end":631,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(path(req, \"/a/\", 0), PathBuf::from(\"a\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68452,"byte_end":68508,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(path(req, \"/a/b/c\", 0), PathBuf::from(\"a/b/c\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68513,"byte_end":68576,"line_start":633,"line_end":633,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(path(req, \"/a/b/c\", 1), PathBuf::from(\"b/c\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68581,"byte_end":68642,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(path(req, \"/a/b/c\", 2), PathBuf::from(\"c\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68647,"byte_end":68706,"line_start":635,"line_end":635,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(path(req, \"/a/b/c\", 6), PathBuf::from(\"whoops\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68711,"byte_end":68775,"line_start":636,"line_end":636,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68780,"byte_end":68789,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68794,"byte_end":68801,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":68806,"byte_end":68815,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70655,"byte_end":70670,"line_start":684,"line_end":684,"column_start":12,"column_end":27},"name":"get_query_value","qualname":"<Request>::get_query_value","value":"fn <'a, T> (&'a self, key: &str) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` the query value with key `key`. `T` must\n implement [`FromFormValue`], which is used to parse the query's value.\n Key matching is performed case-sensitively. If there are multiple pairs\n with key `key`, the _last_ one is returned.","sig":null,"attributes":[{"value":"/ Retrieves and parses into `T` the query value with key `key`. `T` must","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69003,"byte_end":69077,"line_start":646,"line_end":646,"column_start":5,"column_end":79}},{"value":"/ implement [`FromFormValue`], which is used to parse the query's value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69082,"byte_end":69156,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ Key matching is performed case-sensitively. If there are multiple pairs","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69161,"byte_end":69236,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ with key `key`, the _last_ one is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69241,"byte_end":69288,"line_start":649,"line_end":649,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69293,"byte_end":69296,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method exists only to be used by manual routing. To retrieve","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69301,"byte_end":69370,"line_start":651,"line_end":651,"column_start":5,"column_end":74}},{"value":"/ query values from a request, use Rocket's code generation facilities.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69375,"byte_end":69448,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69453,"byte_end":69456,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69461,"byte_end":69472,"line_start":654,"line_end":654,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69477,"byte_end":69480,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If a query segment with key `key` isn't present, returns `None`. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69485,"byte_end":69556,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/ parsing the value fails, returns `Some(Err(T:Error))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69561,"byte_end":69619,"line_start":657,"line_end":657,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69624,"byte_end":69627,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69632,"byte_end":69645,"line_start":659,"line_end":659,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69650,"byte_end":69653,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69658,"byte_end":69669,"line_start":661,"line_end":661,"column_start":5,"column_end":16}},{"value":"/ # use rocket::{Request, http::Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69674,"byte_end":69716,"line_start":662,"line_end":662,"column_start":5,"column_end":47}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69721,"byte_end":69748,"line_start":663,"line_end":663,"column_start":5,"column_end":32}},{"value":"/ use rocket::http::{RawStr, uri::Origin};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69753,"byte_end":69797,"line_start":664,"line_end":664,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69802,"byte_end":69805,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Request::example(Method::Get, \"/\", |req| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69810,"byte_end":69858,"line_start":666,"line_end":666,"column_start":5,"column_end":53}},{"value":"/ fn value<'s>(req: &'s mut Request, uri: &'static str, key: &str) -> &'s RawStr {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69863,"byte_end":69947,"line_start":667,"line_end":667,"column_start":5,"column_end":89}},{"value":"/     req.set_uri(Origin::parse(uri).unwrap());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":69952,"byte_end":70001,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70006,"byte_end":70009,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     req.get_query_value(key)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70014,"byte_end":70046,"line_start":670,"line_end":670,"column_start":5,"column_end":37}},{"value":"/         .and_then(|r| r.ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70051,"byte_end":70084,"line_start":671,"line_end":671,"column_start":5,"column_end":38}},{"value":"/         .unwrap_or(\"n/a\".into())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70089,"byte_end":70125,"line_start":672,"line_end":672,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70130,"byte_end":70135,"line_start":673,"line_end":673,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70140,"byte_end":70143,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(value(req, \"/?a=apple&z=zebra\", \"a\").as_str(), \"apple\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70148,"byte_end":70219,"line_start":675,"line_end":675,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(value(req, \"/?a=apple&z=zebra\", \"z\").as_str(), \"zebra\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70224,"byte_end":70295,"line_start":676,"line_end":676,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(value(req, \"/?a=apple&z=zebra\", \"A\").as_str(), \"n/a\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70300,"byte_end":70369,"line_start":677,"line_end":677,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(value(req, \"/?a=apple&z=zebra&a=argon\", \"a\").as_str(), \"argon\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70374,"byte_end":70453,"line_start":678,"line_end":678,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(value(req, \"/?a=1&a=2&a=3&b=4\", \"a\").as_str(), \"3\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70458,"byte_end":70525,"line_start":679,"line_end":679,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(value(req, \"/?a=apple&z=zebra\", \"apple\").as_str(), \"n/a\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70530,"byte_end":70603,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70608,"byte_end":70617,"line_start":681,"line_end":681,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70622,"byte_end":70629,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":70634,"byte_end":70643,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":71187,"byte_end":71194,"line_start":699,"line_end":699,"column_start":12,"column_end":19},"name":"example","qualname":"<Request>::example","value":"fn <F> (method: Method, uri: &str, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72293,"byte_end":72308,"line_start":727,"line_end":727,"column_start":12,"column_end":27},"name":"raw_segment_str","qualname":"<Request>::raw_segment_str","value":"fn (&self, n: usize) -> Option<&RawStr>","parent":null,"children":[],"decl_id":null,"docs":" Get the `n`th path segment, 0-indexed, after the mount point for the\n currently matched route, as a string, if it exists. Used by codegen.\n","sig":null,"attributes":[{"value":"/ Get the `n`th path segment, 0-indexed, after the mount point for the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72118,"byte_end":72190,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ currently matched route, as a string, if it exists. Used by codegen.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72195,"byte_end":72267,"line_start":725,"line_end":725,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72272,"byte_end":72281,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72626,"byte_end":72638,"line_start":735,"line_end":735,"column_start":12,"column_end":24},"name":"raw_segments","qualname":"<Request>::raw_segments","value":"fn (&self, n: usize) -> Option<Segments>","parent":null,"children":[],"decl_id":null,"docs":" Get the segments beginning at the `n`th, 0-indexed, after the mount\n point for the currently matched route, if they exist. Used by codegen.\n","sig":null,"attributes":[{"value":"/ Get the segments beginning at the `n`th, 0-indexed, after the mount","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72450,"byte_end":72521,"line_start":732,"line_end":732,"column_start":5,"column_end":76}},{"value":"/ point for the currently matched route, if they exist. Used by codegen.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72526,"byte_end":72600,"line_start":733,"line_end":733,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":72605,"byte_end":72614,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":73546,"byte_end":73561,"line_start":760,"line_end":760,"column_start":12,"column_end":27},"name":"raw_query_items","qualname":"<Request>::raw_query_items","value":"fn (&self) -> Option<impl Iterator<Item = FormItem> + DoubleEndedIterator + Clone>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":73525,"byte_end":73534,"line_start":759,"line_end":759,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":338},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84816,"byte_end":84825,"line_start":198,"line_end":198,"column_start":11,"column_end":20},"name":"FromParam","qualname":"::request::param::FromParam","value":"FromParam<'a>: Sized","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"decl_id":null,"docs":" Trait to convert a dynamic path segment string to a concrete value.","sig":null,"attributes":[{"value":"/ Trait to convert a dynamic path segment string to a concrete value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78401,"byte_end":78472,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78473,"byte_end":78476,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used by Rocket's code generation facilities to parse dynamic","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78477,"byte_end":78555,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ path segment string values into a given type. That is, when a path contains","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78556,"byte_end":78635,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ a dynamic segment `<param>` where `param` has some type `T` that implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78636,"byte_end":78715,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ `FromParam`, `T::from_param` will be called.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78716,"byte_end":78764,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78765,"byte_end":78768,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Forwarding","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78769,"byte_end":78785,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78786,"byte_end":78789,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the conversion fails, the incoming request will be forwarded to the next","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78790,"byte_end":78869,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ matching route, if any. For instance, consider the following route and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78870,"byte_end":78944,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ handler for the dynamic `\"/<id>\"` path:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78945,"byte_end":78988,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78989,"byte_end":78992,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":78993,"byte_end":79004,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79005,"byte_end":79054,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79055,"byte_end":79094,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ #[get(\"/<id>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79095,"byte_end":79114,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/ fn hello(id: usize) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79115,"byte_end":79150,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ # let _id = id;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79151,"byte_end":79170,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/ # /*","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79171,"byte_end":79179,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/     ...","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79180,"byte_end":79191,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # */","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79192,"byte_end":79200,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ # \"\".to_string()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79201,"byte_end":79221,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79222,"byte_end":79227,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79228,"byte_end":79248,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79249,"byte_end":79256,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79257,"byte_end":79260,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If `usize::from_param` returns an `Ok(usize)` variant, the encapsulated","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79261,"byte_end":79336,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ value is used as the `id` function parameter. If not, the request is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79337,"byte_end":79409,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ forwarded to the next matching route. Since there are no additional matching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79410,"byte_end":79490,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ routes, this example will result in a 404 error for requests with invalid","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79491,"byte_end":79568,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ `id` values.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79569,"byte_end":79585,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79586,"byte_end":79589,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Catching Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79590,"byte_end":79611,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79612,"byte_end":79615,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Sometimes, a forward is not desired, and instead, we simply want to know","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79616,"byte_end":79692,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ that the dynamic path segment could not be parsed into some desired type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79693,"byte_end":79769,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ `T`. In these cases, types of `Option<T>` or `Result<T, T::Error>` can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79770,"byte_end":79847,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ used. These types implement `FromParam` themselves. Their implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79848,"byte_end":79925,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ always return successfully, so they never forward. They can be used to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":79926,"byte_end":80000,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ determine if the `FromParam` call failed and to retrieve the error value","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80001,"byte_end":80077,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ from the failed `from_param` call.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80078,"byte_end":80116,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80117,"byte_end":80120,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ For instance, imagine you've asked for an `<id>` as a `usize`. To determine","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80121,"byte_end":80200,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ when the `<id>` was not a valid `usize` and retrieve the string that failed","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80201,"byte_end":80280,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ to parse, you can use a `Result<usize, &RawStr>` type for the `<id>`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80281,"byte_end":80353,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ parameter as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80354,"byte_end":80379,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80380,"byte_end":80383,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80384,"byte_end":80395,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80396,"byte_end":80445,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80446,"byte_end":80485,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/ # use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80486,"byte_end":80517,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ #[get(\"/<id>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80518,"byte_end":80537,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ fn hello(id: Result<usize, &RawStr>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80538,"byte_end":80590,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/     match id {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80591,"byte_end":80609,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/         Ok(id_num) => format!(\"usize: {}\", id_num),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80610,"byte_end":80665,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/         Err(string) => format!(\"Not a usize: {}\", string)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80666,"byte_end":80727,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80728,"byte_end":80737,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80738,"byte_end":80743,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80744,"byte_end":80764,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80765,"byte_end":80772,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80773,"byte_end":80776,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80777,"byte_end":80807,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80808,"byte_end":80811,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `FromParam` for several standard library types. Their","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80812,"byte_end":80887,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ behavior is documented here.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80888,"byte_end":80920,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80921,"byte_end":80924,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/   *","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80925,"byte_end":80932,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/       * Primitive types: **f32, f64, isize, i8, i16, i32, i64, i128,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":80933,"byte_end":81005,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/         usize, u8, u16, u32, u64, u128, bool**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81006,"byte_end":81056,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/       * `IpAddr` and `SocketAddr` types: **IpAddr, Ipv4Addr, Ipv6Addr,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81057,"byte_end":81131,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/         SocketAddrV4, SocketAddrV6, SocketAddr**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81132,"byte_end":81184,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/       * `NonZero*` types: **NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81185,"byte_end":81263,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/         NonZeroI128, NonZeroIsize, NonZeroU8, NonZeroU16, NonZeroU32,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81264,"byte_end":81337,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/         NonZeroU64, NonZeroU128, NonZeroUsize**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81338,"byte_end":81389,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81390,"byte_end":81393,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     A value is parsed successfully if the `from_str` method from the given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81394,"byte_end":81472,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/     type returns successfully. Otherwise, the raw path segment is returned","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81473,"byte_end":81551,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/     in the `Err` value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81552,"byte_end":81579,"line_start":86,"line_end":86,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81580,"byte_end":81583,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/   * **[`&RawStr`](RawStr)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81584,"byte_end":81615,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81616,"byte_end":81619,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81620,"byte_end":81678,"line_start":90,"line_end":90,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81679,"byte_end":81682,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     The path segment is passed directly with no modification.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81683,"byte_end":81748,"line_start":92,"line_end":92,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81749,"byte_end":81752,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/   * **String**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81753,"byte_end":81771,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81772,"byte_end":81775,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     Percent decodes the path segment. If the decode is successful, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81776,"byte_end":81850,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/     decoded string is returned. Otherwise, an `Err` with the original path","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81851,"byte_end":81929,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/     segment is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81930,"byte_end":81958,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81959,"byte_end":81962,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/   * **Cow<str>**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81963,"byte_end":81983,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81984,"byte_end":81987,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     Percent decodes the path segment, allocating only when necessary. If the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":81988,"byte_end":82068,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/     decode is successful, the decoded string is returned. Otherwise, an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82069,"byte_end":82144,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/     `Err` with the original path segment is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82145,"byte_end":82202,"line_start":104,"line_end":104,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82203,"byte_end":82206,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>** _where_ **T: FromParam**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82207,"byte_end":82256,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82257,"byte_end":82260,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82261,"byte_end":82319,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82320,"byte_end":82323,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/     The path segment is parsed by `T`'s `FromParam` implementation. If the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82324,"byte_end":82402,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/     parse succeeds, a `Some(parsed_value)` is returned. Otherwise, a `None`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82403,"byte_end":82482,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/     is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82483,"byte_end":82503,"line_start":112,"line_end":112,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82504,"byte_end":82507,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, T::Error>** _where_ **T: FromParam**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82508,"byte_end":82567,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82568,"byte_end":82571,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82572,"byte_end":82630,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82631,"byte_end":82634,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     The path segment is parsed by `T`'s `FromParam` implementation. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82635,"byte_end":82710,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/     returned `Result` value is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82711,"byte_end":82755,"line_start":119,"line_end":119,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82756,"byte_end":82759,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82760,"byte_end":82773,"line_start":121,"line_end":121,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82774,"byte_end":82777,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Say you want to parse a segment of the form:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82778,"byte_end":82826,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82827,"byte_end":82830,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82831,"byte_end":82842,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ [a-zA-Z]+:[0-9]+","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82843,"byte_end":82863,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82864,"byte_end":82871,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82872,"byte_end":82875,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ into the following structure, where the string before the `:` is stored in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82876,"byte_end":82954,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ `key` and the number after the colon is stored in `value`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":82955,"byte_end":83017,"line_start":130,"line_end":130,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83018,"byte_end":83021,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83022,"byte_end":83033,"line_start":132,"line_end":132,"column_start":1,"column_end":12}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83034,"byte_end":83059,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/ struct MyParam<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83060,"byte_end":83084,"line_start":134,"line_end":134,"column_start":1,"column_end":25}},{"value":"/     key: &'r str,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83085,"byte_end":83106,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/     value: usize","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83107,"byte_end":83127,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83128,"byte_end":83133,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83134,"byte_end":83141,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83142,"byte_end":83145,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The following implementation accomplishes this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83146,"byte_end":83197,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83198,"byte_end":83201,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83202,"byte_end":83213,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::FromParam;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83214,"byte_end":83249,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/ use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83250,"byte_end":83279,"line_start":144,"line_end":144,"column_start":1,"column_end":30}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83280,"byte_end":83305,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/ # struct MyParam<'r> { key: &'r str, value: usize }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83306,"byte_end":83361,"line_start":146,"line_end":146,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83362,"byte_end":83365,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ impl<'r> FromParam<'r> for MyParam<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83366,"byte_end":83410,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/     type Error = &'r RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83411,"byte_end":83443,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83444,"byte_end":83447,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     fn from_param(param: &'r RawStr) -> Result<Self, Self::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83448,"byte_end":83519,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/         let (key, val_str) = match param.find(':') {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83520,"byte_end":83576,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/             Some(i) if i > 0 => (&param[..i], &param[(i + 1)..]),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83577,"byte_end":83646,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/             _ => return Err(param)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83647,"byte_end":83685,"line_start":154,"line_end":154,"column_start":1,"column_end":39}},{"value":"/         };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83686,"byte_end":83700,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83701,"byte_end":83704,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/         if !key.chars().all(|c| (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83705,"byte_end":83792,"line_start":157,"line_end":157,"column_start":1,"column_end":88}},{"value":"/             return Err(param);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83793,"byte_end":83827,"line_start":158,"line_end":158,"column_start":1,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83828,"byte_end":83841,"line_start":159,"line_end":159,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83842,"byte_end":83845,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/         val_str.parse().map(|value| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83846,"byte_end":83887,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/             MyParam {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83888,"byte_end":83913,"line_start":162,"line_end":162,"column_start":1,"column_end":26}},{"value":"/                 key: key,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83914,"byte_end":83943,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/                 value: value","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83944,"byte_end":83976,"line_start":164,"line_end":164,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83977,"byte_end":83994,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/         }).map_err(|_| param)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":83995,"byte_end":84028,"line_start":166,"line_end":166,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84029,"byte_end":84038,"line_start":167,"line_end":167,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84039,"byte_end":84044,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84045,"byte_end":84052,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84053,"byte_end":84056,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ With the implementation, the `MyParam` type can be used as the target of a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84057,"byte_end":84135,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ dynamic path segment:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84136,"byte_end":84161,"line_start":172,"line_end":172,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84162,"byte_end":84165,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84166,"byte_end":84177,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84178,"byte_end":84227,"line_start":175,"line_end":175,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84228,"byte_end":84267,"line_start":176,"line_end":176,"column_start":1,"column_end":40}},{"value":"/ # use rocket::request::FromParam;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84268,"byte_end":84305,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ # use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84306,"byte_end":84337,"line_start":178,"line_end":178,"column_start":1,"column_end":32}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84338,"byte_end":84363,"line_start":179,"line_end":179,"column_start":1,"column_end":26}},{"value":"/ # struct MyParam<'r> { key: &'r str, value: usize }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84364,"byte_end":84419,"line_start":180,"line_end":180,"column_start":1,"column_end":56}},{"value":"/ # impl<'r> FromParam<'r> for MyParam<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84420,"byte_end":84466,"line_start":181,"line_end":181,"column_start":1,"column_end":47}},{"value":"/ #     type Error = &'r RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84467,"byte_end":84501,"line_start":182,"line_end":182,"column_start":1,"column_end":35}},{"value":"/ #     fn from_param(param: &'r RawStr) -> Result<Self, Self::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84502,"byte_end":84575,"line_start":183,"line_end":183,"column_start":1,"column_end":74}},{"value":"/ #         Err(param)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84576,"byte_end":84600,"line_start":184,"line_end":184,"column_start":1,"column_end":25}},{"value":"/ #     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84601,"byte_end":84612,"line_start":185,"line_end":185,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84613,"byte_end":84620,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84621,"byte_end":84626,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ #[get(\"/<key_val>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84627,"byte_end":84651,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/ fn hello(key_val: MyParam) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84652,"byte_end":84694,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/ # let _kv = key_val;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84695,"byte_end":84719,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ # /*","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84720,"byte_end":84728,"line_start":191,"line_end":191,"column_start":1,"column_end":9}},{"value":"/     ...","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84729,"byte_end":84740,"line_start":192,"line_end":192,"column_start":1,"column_end":12}},{"value":"/ # */","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84741,"byte_end":84749,"line_start":193,"line_end":193,"column_start":1,"column_end":9}},{"value":"/ # \"\".to_string()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84750,"byte_end":84770,"line_start":194,"line_end":194,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84771,"byte_end":84776,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84777,"byte_end":84797,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84798,"byte_end":84805,"line_start":197,"line_end":197,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":340},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84921,"byte_end":84926,"line_start":200,"line_end":200,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromParam::Error","value":"type Error: Debug;","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" The associated error to be returned if parsing/validation fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned if parsing/validation fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84843,"byte_end":84911,"line_start":199,"line_end":199,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85085,"byte_end":85095,"line_start":204,"line_end":204,"column_start":8,"column_end":18},"name":"from_param","qualname":"::request::param::FromParam::from_param","value":"fn (param: &'a RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Parses and validates an instance of `Self` from a path parameter string\n or returns an `Error` if parsing or validation fails.\n","sig":null,"attributes":[{"value":"/ Parses and validates an instance of `Self` from a path parameter string","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84940,"byte_end":85015,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ or returns an `Error` if parsing or validation fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85020,"byte_end":85077,"line_start":203,"line_end":203,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":388},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88269,"byte_end":88281,"line_start":302,"line_end":302,"column_start":11,"column_end":23},"name":"FromSegments","qualname":"::request::param::FromSegments","value":"FromSegments<'a>: Sized","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" Trait to convert _many_ dynamic path segment strings to a concrete value.","sig":null,"attributes":[{"value":"/ Trait to convert _many_ dynamic path segment strings to a concrete value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87335,"byte_end":87412,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87413,"byte_end":87416,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This is the `..` analog to [`FromParam`], and its functionality is identical","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87417,"byte_end":87497,"line_start":286,"line_end":286,"column_start":1,"column_end":81}},{"value":"/ to it with one exception: this trait applies to segment parameters of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87498,"byte_end":87575,"line_start":287,"line_end":287,"column_start":1,"column_end":78}},{"value":"/ form `<param..>`, where `param` is of some type `T` that implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87576,"byte_end":87647,"line_start":288,"line_end":288,"column_start":1,"column_end":72}},{"value":"/ `FromSegments`. `T::from_segments` is called to convert the matched segments","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87648,"byte_end":87728,"line_start":289,"line_end":289,"column_start":1,"column_end":81}},{"value":"/ (via the [`Segments`] iterator) into the implementing type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87729,"byte_end":87792,"line_start":290,"line_end":290,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87793,"byte_end":87796,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87797,"byte_end":87827,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87828,"byte_end":87831,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ **`PathBuf`**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87832,"byte_end":87849,"line_start":294,"line_end":294,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87850,"byte_end":87853,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ The `PathBuf` implementation constructs a path from the segments iterator.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87854,"byte_end":87932,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ Each segment is percent-decoded. If a segment equals \"..\" before or after","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87933,"byte_end":88010,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ decoding, the previous segment (if any) is omitted. For security purposes,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88011,"byte_end":88089,"line_start":298,"line_end":298,"column_start":1,"column_end":79}},{"value":"/ any other segments that begin with \"*\" or \".\" are ignored.  If a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88090,"byte_end":88158,"line_start":299,"line_end":299,"column_start":1,"column_end":69}},{"value":"/ percent-decoded segment results in invalid UTF8, an `Err` is returned with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88159,"byte_end":88237,"line_start":300,"line_end":300,"column_start":1,"column_end":79}},{"value":"/ the `Utf8Error`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88238,"byte_end":88258,"line_start":301,"line_end":301,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":390},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88368,"byte_end":88373,"line_start":304,"line_end":304,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromSegments::Error","value":"type Error: Debug;","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned when parsing fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88299,"byte_end":88358,"line_start":303,"line_end":303,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88523,"byte_end":88536,"line_start":308,"line_end":308,"column_start":8,"column_end":21},"name":"from_segments","qualname":"::request::param::FromSegments::from_segments","value":"fn (segments: Segments<'a>) -> Result<Self, Self::Error>","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from many dynamic path parameter strings or\n returns an `Error` if one cannot be parsed.\n","sig":null,"attributes":[{"value":"/ Parses an instance of `Self` from many dynamic path parameter strings or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88387,"byte_end":88463,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ returns an `Error` if one cannot be parsed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88468,"byte_end":88515,"line_start":307,"line_end":307,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":2425},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94678,"byte_end":94681,"line_start":108,"line_end":108,"column_start":5,"column_end":8},"name":"Raw","qualname":"::request::form::form_items::FormItems::Raw","value":"FormItems::Raw { string, next_index }","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2428},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94768,"byte_end":94774,"line_start":113,"line_end":113,"column_start":5,"column_end":11},"name":"Cooked","qualname":"::request::form::form_items::FormItems::Cooked","value":"FormItems::Cooked { items, next_index }","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2423},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94639,"byte_end":94648,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"FormItems","qualname":"::request::form::form_items::FormItems","value":"FormItems::{Raw, Cooked}","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2428}],"decl_id":null,"docs":" Iterator over the key/value pairs of a given HTTP form string.","sig":null,"attributes":[{"value":"/ Iterator over the key/value pairs of a given HTTP form string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90814,"byte_end":90880,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90881,"byte_end":90884,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90885,"byte_end":90896,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::{FormItems, FromFormValue};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90897,"byte_end":90949,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90950,"byte_end":90953,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Using the `key_value_decoded` method of `FormItem`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":90954,"byte_end":91012,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ let form_string = \"greeting=Hello%2C+Mark%21&username=jake%2Fother\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91013,"byte_end":91085,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ for (key, value) in FormItems::from(form_string).map(|i| i.key_value_decoded()) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91086,"byte_end":91171,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/     match &*key {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91172,"byte_end":91193,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/         \"greeting\" => assert_eq!(value, \"Hello, Mark!\".to_string()),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91194,"byte_end":91266,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/         \"username\" => assert_eq!(value, \"jake/other\".to_string()),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91267,"byte_end":91337,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/         _ => unreachable!()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91338,"byte_end":91369,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91370,"byte_end":91379,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91380,"byte_end":91385,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91386,"byte_end":91389,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Accessing the fields of `FormItem` directly, including `raw`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91390,"byte_end":91458,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ for item in FormItems::from(form_string) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91459,"byte_end":91505,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/     match item.key.as_str() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91506,"byte_end":91539,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/         \"greeting\" => {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91540,"byte_end":91567,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/             assert_eq!(item.raw, \"greeting=Hello%2C+Mark%21\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91568,"byte_end":91634,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/             assert_eq!(item.value, \"Hello%2C+Mark%21\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91635,"byte_end":91694,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/             assert_eq!(item.value.url_decode(), Ok(\"Hello, Mark!\".into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91695,"byte_end":91774,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91775,"byte_end":91788,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/         \"username\" => {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91789,"byte_end":91816,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/             assert_eq!(item.raw, \"username=jake%2Fother\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91817,"byte_end":91879,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/             assert_eq!(item.value, \"jake%2Fother\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91880,"byte_end":91935,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/             assert_eq!(item.value.url_decode(), Ok(\"jake/other\".into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":91936,"byte_end":92013,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92014,"byte_end":92027,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         _ => unreachable!()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92028,"byte_end":92059,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92060,"byte_end":92069,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92070,"byte_end":92075,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92076,"byte_end":92083,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92084,"byte_end":92087,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Form Items via. `FormItem`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92088,"byte_end":92120,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92121,"byte_end":92124,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This iterator returns values of the type [`FormItem`]. To access the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92125,"byte_end":92197,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ associated key/value pairs of the form item, either directly access them via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92198,"byte_end":92278,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ the [`key`](FormItem::key) and [`value`](FormItem::value) fields, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92279,"byte_end":92356,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`FormItem::key_value()`] method to get a tuple of the _raw_ `(key, value)`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92357,"byte_end":92437,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ or use the [`key_value_decoded()`](FormItem::key_value_decoded()) method to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92438,"byte_end":92517,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ get a tuple of the decoded (`key`, `value`).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92518,"byte_end":92566,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92567,"byte_end":92570,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Completion","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92571,"byte_end":92587,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92588,"byte_end":92591,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The iterator keeps track of whether the form string was parsed to completion","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92592,"byte_end":92672,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ to determine if the form string was malformed. The iterator can be queried","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92673,"byte_end":92751,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ for completion via the [`completed()`](#method.completed) method, which","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92752,"byte_end":92827,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ returns `true` if the iterator parsed the entire string that was passed to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92828,"byte_end":92906,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ it. The iterator can also attempt to parse any remaining contents via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92907,"byte_end":92980,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ [`exhaust()`](#method.exhaust); this method returns `true` if exhaustion","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":92981,"byte_end":93057,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ succeeded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93058,"byte_end":93072,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93073,"byte_end":93076,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This iterator guarantees that all valid form strings are parsed to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93077,"byte_end":93147,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ completion. The iterator attempts to be lenient. In particular, it allows","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93148,"byte_end":93225,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ the following oddball behavior:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93226,"byte_end":93261,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93262,"byte_end":93265,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/   * Trailing and consecutive `&` characters are allowed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93266,"byte_end":93326,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/   * Empty keys and/or values are allowed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93327,"byte_end":93372,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93373,"byte_end":93376,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Additionally, the iterator skips items with both an empty key _and_ an empty","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93377,"byte_end":93457,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ value: at least one of the two must be non-empty to be returned from this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93458,"byte_end":93535,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ iterator.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93536,"byte_end":93549,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93550,"byte_end":93553,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93554,"byte_end":93568,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93569,"byte_end":93572,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ `FormItems` can be used directly as an iterator:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93573,"byte_end":93625,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93626,"byte_end":93629,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93630,"byte_end":93641,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93642,"byte_end":93677,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93678,"byte_end":93681,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // prints \"greeting = hello\", \"username = jake\", and \"done = \"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93682,"byte_end":93748,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/ let form_string = \"greeting=hello&username=jake&done\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93749,"byte_end":93807,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/ for (key, value) in FormItems::from(form_string).map(|item| item.key_value()) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93808,"byte_end":93891,"line_start":77,"line_end":77,"column_start":1,"column_end":84}},{"value":"/     println!(\"{} = {}\", key, value);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93892,"byte_end":93932,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93933,"byte_end":93938,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93939,"byte_end":93946,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93947,"byte_end":93950,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This is the same example as above, but the iterator is used explicitly.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":93951,"byte_end":94026,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94027,"byte_end":94030,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94031,"byte_end":94042,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94043,"byte_end":94078,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94079,"byte_end":94082,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let form_string = \"greeting=hello&username=jake&done\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94083,"byte_end":94141,"line_start":87,"line_end":87,"column_start":1,"column_end":59}},{"value":"/ let mut items = FormItems::from(form_string);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94142,"byte_end":94191,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94192,"byte_end":94195,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let next = items.next().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94196,"byte_end":94233,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(next.key, \"greeting\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94234,"byte_end":94271,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(next.value, \"hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94272,"byte_end":94308,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94309,"byte_end":94312,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let next = items.next().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94313,"byte_end":94350,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(next.key, \"username\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94351,"byte_end":94388,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(next.value, \"jake\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94389,"byte_end":94424,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94425,"byte_end":94428,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let next = items.next().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94429,"byte_end":94466,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(next.key, \"done\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94467,"byte_end":94500,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(next.value, \"\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94501,"byte_end":94532,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94533,"byte_end":94536,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(items.next(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94537,"byte_end":94572,"line_start":102,"line_end":102,"column_start":1,"column_end":36}},{"value":"/ assert!(items.completed());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94573,"byte_end":94604,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94605,"byte_end":94612,"line_start":104,"line_end":104,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2434},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94960,"byte_end":94968,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"FormItem","qualname":"::request::form::form_items::FormItem","value":"FormItem { raw, key, value }","parent":null,"children":[{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438}],"decl_id":null,"docs":" A form items returned by the [`FormItems`] iterator.\n","sig":null,"attributes":[{"value":"/ A form items returned by the [`FormItems`] iterator.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94847,"byte_end":94903,"line_start":119,"line_end":119,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2436},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95061,"byte_end":95064,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"raw","qualname":"::request::form::form_items::FormItem::raw","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2434},"children":[],"decl_id":null,"docs":" The full, nonempty string for the item, not including `&` delimiters.\n","sig":null,"attributes":[{"value":"/ The full, nonempty string for the item, not including `&` delimiters.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":94979,"byte_end":95052,"line_start":122,"line_end":122,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2437},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95389,"byte_end":95392,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"name":"key","qualname":"::request::form::form_items::FormItem::key","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2434},"children":[],"decl_id":null,"docs":" The key for the item, which may be empty if `value` is nonempty.","sig":null,"attributes":[{"value":"/ The key for the item, which may be empty if `value` is nonempty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95082,"byte_end":95150,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95155,"byte_end":95158,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ **Note:** The key is _not_ URL decoded. To URL decode the raw strings,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95163,"byte_end":95237,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ use the [`RawStr::url_decode()`] method or access key-value pairs with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95242,"byte_end":95316,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ [`key_value_decoded()`](FormItem::key_value_decoded()).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95321,"byte_end":95380,"line_start":128,"line_end":128,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2438},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95719,"byte_end":95724,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"value","qualname":"::request::form::form_items::FormItem::value","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2434},"children":[],"decl_id":null,"docs":" The value for the item, which may be empty if `key` is nonempty.","sig":null,"attributes":[{"value":"/ The value for the item, which may be empty if `key` is nonempty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95410,"byte_end":95478,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95483,"byte_end":95486,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Note:** The value is _not_ URL decoded. To URL decode the raw strings,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95491,"byte_end":95567,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ use the [`RawStr::url_decode()`] method or access key-value pairs with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95572,"byte_end":95646,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ [`key_value_decoded()`](FormItem::key_value_decoded()).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95651,"byte_end":95710,"line_start":134,"line_end":134,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96317,"byte_end":96326,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"key_value","qualname":"<FormItem>::key_value","value":"fn (&self) -> (&'f RawStr, &'f RawStr)","parent":null,"children":[],"decl_id":null,"docs":" Extracts the raw `key` and `value` as a tuple.","sig":null,"attributes":[{"value":"/ Extracts the raw `key` and `value` as a tuple.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95768,"byte_end":95818,"line_start":139,"line_end":139,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95823,"byte_end":95826,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `(item.key, item.value)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95831,"byte_end":95882,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95887,"byte_end":95890,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95895,"byte_end":95908,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95913,"byte_end":95916,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95921,"byte_end":95932,"line_start":145,"line_end":145,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItem;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95937,"byte_end":95971,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95976,"byte_end":95979,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let item = FormItem {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95984,"byte_end":96009,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/     raw: \"hello=%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96014,"byte_end":96055,"line_start":149,"line_end":149,"column_start":5,"column_end":46}},{"value":"/     key: \"hello\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96060,"byte_end":96088,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/     value: \"%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96093,"byte_end":96130,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96135,"byte_end":96141,"line_start":152,"line_end":152,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96146,"byte_end":96149,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let (key, value) = item.key_value();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96154,"byte_end":96194,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(key, \"hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96199,"byte_end":96228,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value, \"%2C+world%21\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96233,"byte_end":96271,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96276,"byte_end":96283,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96288,"byte_end":96305,"line_start":158,"line_end":158,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97021,"byte_end":97038,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"key_value_decoded","qualname":"<FormItem>::key_value_decoded","value":"fn (&self) -> (String, String)","parent":null,"children":[],"decl_id":null,"docs":" Extracts and lossy URL decodes the `key` and `value` as a tuple.","sig":null,"attributes":[{"value":"/ Extracts and lossy URL decodes the `key` and `value` as a tuple.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96406,"byte_end":96474,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96479,"byte_end":96482,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `(item.key.url_decode_lossy(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96487,"byte_end":96543,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"/ item.value.url_decode_lossy)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96548,"byte_end":96582,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96587,"byte_end":96590,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96595,"byte_end":96608,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96613,"byte_end":96616,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96621,"byte_end":96632,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItem;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96637,"byte_end":96671,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96676,"byte_end":96679,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let item = FormItem {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96684,"byte_end":96709,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/     raw: \"hello=%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96714,"byte_end":96755,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/     key: \"hello\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96760,"byte_end":96788,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/     value: \"%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96793,"byte_end":96830,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96835,"byte_end":96841,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96846,"byte_end":96849,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let (key, value) = item.key_value_decoded();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96854,"byte_end":96902,"line_start":179,"line_end":179,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(key, \"hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96907,"byte_end":96936,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value, \", world!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96941,"byte_end":96975,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96980,"byte_end":96987,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":96992,"byte_end":97009,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97768,"byte_end":97775,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"explode","qualname":"<FormItem>::explode","value":"fn (&self) -> (&'f RawStr, &'f RawStr, &'f RawStr)","parent":null,"children":[],"decl_id":null,"docs":" Extracts `raw` and the raw `key` and `value` as a triple.","sig":null,"attributes":[{"value":"/ Extracts `raw` and the raw `key` and `value` as a triple.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97148,"byte_end":97209,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97214,"byte_end":97217,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `(item.raw, item.key, item.value)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97222,"byte_end":97283,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97288,"byte_end":97291,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97296,"byte_end":97309,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97314,"byte_end":97317,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97322,"byte_end":97333,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItem;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97338,"byte_end":97372,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97377,"byte_end":97380,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let item = FormItem {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97385,"byte_end":97410,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/     raw: \"hello=%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97415,"byte_end":97456,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/     key: \"hello\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97461,"byte_end":97489,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/     value: \"%2C+world%21\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97494,"byte_end":97531,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97536,"byte_end":97542,"line_start":201,"line_end":201,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97547,"byte_end":97550,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let (raw, key, value) = item.explode();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97555,"byte_end":97598,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(raw, \"hello=%2C+world%21\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97603,"byte_end":97645,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(key, \"hello\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97650,"byte_end":97679,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value, \"%2C+world%21\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97684,"byte_end":97722,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97727,"byte_end":97734,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97739,"byte_end":97756,"line_start":208,"line_end":208,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98854,"byte_end":98863,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"completed","qualname":"<FormItems>::completed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the form string was parsed to completion. Returns\n `false` otherwise. All valid form strings will parse to completion,\n while invalid form strings will not.","sig":null,"attributes":[{"value":"/ Returns `true` if the form string was parsed to completion. Returns","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97904,"byte_end":97975,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ `false` otherwise. All valid form strings will parse to completion,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97980,"byte_end":98051,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ while invalid form strings will not.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98056,"byte_end":98096,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98101,"byte_end":98104,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98109,"byte_end":98122,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98127,"byte_end":98130,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ A valid form string parses to completion:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98135,"byte_end":98180,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98185,"byte_end":98188,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98193,"byte_end":98204,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98209,"byte_end":98244,"line_start":224,"line_end":224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98249,"byte_end":98252,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut items = FormItems::from(\"a=b&c=d\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98257,"byte_end":98304,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ let key_values: Vec<_> = items.by_ref().collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98309,"byte_end":98363,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98368,"byte_end":98371,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(key_values.len(), 2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98376,"byte_end":98412,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(items.completed(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98417,"byte_end":98457,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98462,"byte_end":98469,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98474,"byte_end":98477,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ In invalid form string does not parse to completion:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98482,"byte_end":98538,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98543,"byte_end":98546,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98551,"byte_end":98562,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98567,"byte_end":98602,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98607,"byte_end":98610,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mut items = FormItems::from(\"a=b&==d\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98615,"byte_end":98662,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ let key_values: Vec<_> = items.by_ref().collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98667,"byte_end":98721,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98726,"byte_end":98729,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(key_values.len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98734,"byte_end":98770,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(items.completed(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98775,"byte_end":98816,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98821,"byte_end":98828,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":98833,"byte_end":98842,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100126,"byte_end":100133,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"exhaust","qualname":"<FormItems>::exhaust","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parses all remaining key/value pairs and returns `true` if parsing ran\n to completion. All valid form strings will parse to completion, while\n invalid form strings will not.","sig":null,"attributes":[{"value":"/ Parses all remaining key/value pairs and returns `true` if parsing ran","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99088,"byte_end":99162,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ to completion. All valid form strings will parse to completion, while","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99167,"byte_end":99240,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ invalid form strings will not.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99245,"byte_end":99279,"line_start":254,"line_end":254,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99284,"byte_end":99287,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99292,"byte_end":99305,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99310,"byte_end":99313,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ A valid form string can be exhausted:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99318,"byte_end":99359,"line_start":258,"line_end":258,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99364,"byte_end":99367,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99372,"byte_end":99383,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99388,"byte_end":99423,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99428,"byte_end":99431,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut items = FormItems::from(\"a=b&c=d\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99436,"byte_end":99483,"line_start":263,"line_end":263,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99488,"byte_end":99491,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ assert!(items.next().is_some());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99496,"byte_end":99532,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(items.completed(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99537,"byte_end":99578,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(items.exhaust(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99583,"byte_end":99621,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(items.completed(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99626,"byte_end":99666,"line_start":268,"line_end":268,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99671,"byte_end":99678,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99683,"byte_end":99686,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ An invalid form string cannot be exhausted:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99691,"byte_end":99738,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99743,"byte_end":99746,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99751,"byte_end":99762,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/ use rocket::request::FormItems;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99767,"byte_end":99802,"line_start":274,"line_end":274,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99807,"byte_end":99810,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let mut items = FormItems::from(\"a=b&=d=\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99815,"byte_end":99862,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99867,"byte_end":99870,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ assert!(items.next().is_some());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99875,"byte_end":99911,"line_start":278,"line_end":278,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(items.completed(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99916,"byte_end":99957,"line_start":279,"line_end":279,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(items.exhaust(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":99962,"byte_end":100001,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(items.completed(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100006,"byte_end":100047,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ assert!(items.next().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100052,"byte_end":100088,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100093,"byte_end":100100,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100105,"byte_end":100114,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100276,"byte_end":100289,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"mark_complete","qualname":"<FormItems>::mark_complete","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100236,"byte_end":100245,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":441},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110686,"byte_end":110694,"line_start":94,"line_end":94,"column_start":11,"column_end":19},"name":"FromForm","qualname":"::request::form::from_form::FromForm","value":"FromForm<'f>: Sized","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"decl_id":null,"docs":" Trait to create an instance of some type from an HTTP form.\n [`Form`](::request::Form) requires its generic type to implement this trait.","sig":null,"attributes":[{"value":"/ Trait to create an instance of some type from an HTTP form.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107479,"byte_end":107542,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ [`Form`](::request::Form) requires its generic type to implement this trait.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107543,"byte_end":107623,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107624,"byte_end":107627,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Deriving","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107628,"byte_end":107642,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107643,"byte_end":107646,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait can be automatically derived. When deriving `FromForm`, every","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107647,"byte_end":107723,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ field in the structure must implement","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107724,"byte_end":107765,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ [`FromFormValue`](::request::FromFormValue). Rocket validates each field in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107766,"byte_end":107845,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the structure by calling its `FromFormValue` implementation. You may wish to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107846,"byte_end":107926,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ implement `FromFormValue` for your own types for custom, automatic","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107927,"byte_end":107997,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ validation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":107998,"byte_end":108013,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108014,"byte_end":108017,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108018,"byte_end":108029,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108030,"byte_end":108079,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # #![allow(deprecated, dead_code, unused_attributes)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108080,"byte_end":108137,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108138,"byte_end":108177,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108178,"byte_end":108201,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ struct TodoTask {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108202,"byte_end":108223,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/     description: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108224,"byte_end":108252,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/     completed: bool","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108253,"byte_end":108276,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108277,"byte_end":108282,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108283,"byte_end":108303,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108304,"byte_end":108311,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108312,"byte_end":108315,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Data Guard","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108316,"byte_end":108332,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108333,"byte_end":108336,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Types that implement `FromForm` can be parsed directly from incoming form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108337,"byte_end":108414,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ data via the `data` parameter and `Form` type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108415,"byte_end":108465,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108466,"byte_end":108469,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108470,"byte_end":108481,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108482,"byte_end":108531,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #![allow(deprecated, dead_code, unused_attributes)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108532,"byte_end":108589,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108590,"byte_end":108629,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ # use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108630,"byte_end":108662,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ # #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108663,"byte_end":108688,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ # struct TodoTask { description: String, completed: bool }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108689,"byte_end":108751,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/ #[post(\"/submit\", data = \"<task>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108752,"byte_end":108791,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ fn submit_task(task: Form<TodoTask>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108792,"byte_end":108844,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/     format!(\"New task: {}\", task.description)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108845,"byte_end":108894,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108895,"byte_end":108900,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108901,"byte_end":108921,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108922,"byte_end":108929,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108930,"byte_end":108933,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108934,"byte_end":108952,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108953,"byte_end":108956,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromForm` should be a rare occurrence. Prefer instead to use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":108957,"byte_end":109035,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ Rocket's built-in derivation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109036,"byte_end":109069,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109070,"byte_end":109073,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When implementing `FromForm`, use the [`FormItems`] iterator to iterate","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109074,"byte_end":109149,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ through the raw form key/value pairs. Be aware that form fields that are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109150,"byte_end":109226,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ typically hidden from your application, such as `_method`, will be present","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109227,"byte_end":109305,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ while iterating. Ensure that you adhere to the properties of the `strict`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109306,"byte_end":109383,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ parameter, as detailed in the documentation below.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109384,"byte_end":109438,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109439,"byte_end":109442,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109443,"byte_end":109457,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109458,"byte_end":109461,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Consider the following scenario: we have a struct `Item` with field name","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109462,"byte_end":109538,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ `field`. We'd like to parse any form that has a field named either `balloon`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109539,"byte_end":109619,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ _or_ `space`, and we'd like that field's value to be the value for our","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109620,"byte_end":109694,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ structure's `field`. The following snippet shows how this would be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109695,"byte_end":109765,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ implemented:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109766,"byte_end":109782,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109783,"byte_end":109786,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109787,"byte_end":109798,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::{FromForm, FormItems};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109799,"byte_end":109846,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109847,"byte_end":109850,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Item {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109851,"byte_end":109868,"line_start":68,"line_end":68,"column_start":1,"column_end":18}},{"value":"/     field: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109869,"byte_end":109890,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109891,"byte_end":109896,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109897,"byte_end":109900,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ impl<'f> FromForm<'f> for Item {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109901,"byte_end":109937,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/     // In practice, we'd use a more descriptive error type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":109938,"byte_end":110001,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110002,"byte_end":110026,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110027,"byte_end":110030,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     fn from_form(items: &mut FormItems<'f>, strict: bool) -> Result<Item, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110031,"byte_end":110114,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/         let mut field = None;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110115,"byte_end":110148,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110149,"byte_end":110152,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         for item in items {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110153,"byte_end":110184,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/             match item.key.as_str() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110185,"byte_end":110226,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 \"balloon\" | \"space\" if field.is_none() => {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110227,"byte_end":110290,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/                     let decoded = item.value.url_decode().map_err(|_| ())?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110291,"byte_end":110370,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/                     field = Some(decoded);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110371,"byte_end":110417,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110418,"byte_end":110439,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/                 _ if strict => return Err(()),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110440,"byte_end":110490,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"/                 _ => { /* allow extra value when not strict */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110491,"byte_end":110559,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/             }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110560,"byte_end":110577,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110578,"byte_end":110591,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110592,"byte_end":110595,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         field.map(|field| Item { field }).ok_or(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110596,"byte_end":110651,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110652,"byte_end":110661,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110662,"byte_end":110667,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110668,"byte_end":110675,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":443},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110781,"byte_end":110786,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form::FromForm::Error","value":"type Error;","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned when parsing fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110712,"byte_end":110771,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111284,"byte_end":111293,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"from_form","qualname":"::request::form::from_form::FromForm::from_form","value":"fn (it: &mut FormItems<'f>, strict: bool) -> Result<Self, Self::Error>","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from the iterator of form items `it`.","sig":null,"attributes":[{"value":"/ Parses an instance of `Self` from the iterator of form items `it`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110793,"byte_end":110863,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110868,"byte_end":110871,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Extra form field are allowed when `strict` is `false` and disallowed","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110876,"byte_end":110948,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/ when `strict` is `true`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110953,"byte_end":110981,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110986,"byte_end":110989,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110994,"byte_end":111006,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111011,"byte_end":111014,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If `Self` cannot be parsed from the given form items, an instance of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111019,"byte_end":111091,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ `Self::Error` will be returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111096,"byte_end":111131,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111136,"byte_end":111139,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ When `strict` is `true` and unexpected, extra fields are present in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111144,"byte_end":111215,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ `it`, an instance of `Self::Error` will be returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111220,"byte_end":111276,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":478},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117910,"byte_end":117923,"line_start":173,"line_end":173,"column_start":11,"column_end":24},"name":"FromFormValue","qualname":"::request::form::from_form_value::FromFormValue","value":"FromFormValue<'v>: Sized","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" Trait to parse a typed value from a form value.","sig":null,"attributes":[{"value":"/ Trait to parse a typed value from a form value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112123,"byte_end":112174,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112175,"byte_end":112178,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is used by Rocket's code generation in two places:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112179,"byte_end":112244,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112245,"byte_end":112248,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/   1. Fields in structs deriving [`FromForm`](::request::FromForm) are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112249,"byte_end":112322,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/      required to implement this trait.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112323,"byte_end":112365,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/   2. Types of dynamic query parameters (`?<param>`) are required to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112366,"byte_end":112437,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/      implement this trait.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112438,"byte_end":112468,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112469,"byte_end":112472,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # `FromForm` Fields","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112473,"byte_end":112496,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112497,"byte_end":112500,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When deriving the `FromForm` trait, Rocket uses the `FromFormValue`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112501,"byte_end":112572,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ implementation of each field's type to validate the form input. To","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112573,"byte_end":112643,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ illustrate, consider the following structure:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112644,"byte_end":112693,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112694,"byte_end":112697,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112698,"byte_end":112709,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112710,"byte_end":112749,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112750,"byte_end":112773,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ struct Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112774,"byte_end":112793,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112794,"byte_end":112815,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     age: u16","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112816,"byte_end":112832,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112833,"byte_end":112838,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112839,"byte_end":112846,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112847,"byte_end":112850,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `FromForm` implementation generated by Rocket will call","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112851,"byte_end":112914,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/ `String::from_form_value` for the `name` field, and `u16::from_form_value`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112915,"byte_end":112993,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ for the `age` field. The `Person` structure can only be created from a form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":112994,"byte_end":113073,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ if both calls return successfully.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113074,"byte_end":113112,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113113,"byte_end":113116,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Dynamic Query Parameters","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113117,"byte_end":113147,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113148,"byte_end":113151,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Types of dynamic query parameters are required to implement this trait. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113152,"byte_end":113231,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ `FromFormValue` implementation is used to parse and validate each parameter","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113232,"byte_end":113311,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ according to its target type:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113312,"byte_end":113345,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113346,"byte_end":113349,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113350,"byte_end":113361,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113362,"byte_end":113411,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113412,"byte_end":113451,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ # type Size = String;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113452,"byte_end":113477,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ #[get(\"/item?<id>&<size>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113478,"byte_end":113509,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ fn item(id: usize, size: Size) { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113510,"byte_end":113558,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113559,"byte_end":113578,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113579,"byte_end":113586,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113587,"byte_end":113590,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ To generate values for `id` and `size`, Rocket calls","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113591,"byte_end":113647,"line_start":54,"line_end":54,"column_start":1,"column_end":57}},{"value":"/ `usize::from_form_value()` and `Size::from_form_value()`, respectively.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113648,"byte_end":113723,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113724,"byte_end":113727,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Validation Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113728,"byte_end":113751,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113752,"byte_end":113755,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It is sometimes desired to prevent a validation error from forwarding a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113756,"byte_end":113831,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ request to another route. The `FromFormValue` implementation for `Option<T>`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113832,"byte_end":113912,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ and `Result<T, T::Error>` make this possible. Their implementations always","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113913,"byte_end":113991,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ return successfully, effectively \"catching\" the error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":113992,"byte_end":114050,"line_start":62,"line_end":62,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114051,"byte_end":114054,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ For instance, if we wanted to know if a user entered an invalid `age` in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114055,"byte_end":114135,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ form corresponding to the `Person` structure in the first example, we could","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114136,"byte_end":114215,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ use the following structure:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114216,"byte_end":114248,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114249,"byte_end":114252,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114253,"byte_end":114264,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114265,"byte_end":114296,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/ struct Person<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114297,"byte_end":114320,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114321,"byte_end":114342,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     age: Result<u16, &'r RawStr>","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114343,"byte_end":114379,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114380,"byte_end":114385,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114386,"byte_end":114393,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114394,"byte_end":114397,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The `Err` value in this case is `&RawStr` since `u16::from_form_value`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114398,"byte_end":114472,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ returns a `Result<u16, &RawStr>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114473,"byte_end":114510,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114511,"byte_end":114514,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114515,"byte_end":114545,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114546,"byte_end":114549,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `FromFormValue` for many standard library types. Their","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114550,"byte_end":114626,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ behavior is documented here.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114627,"byte_end":114659,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114660,"byte_end":114663,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/   *","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114664,"byte_end":114671,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/       * Primitive types: **f32, f64, isize, i8, i16, i32, i64, i128,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114672,"byte_end":114744,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/         usize, u8, u16, u32, u64, u128**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114745,"byte_end":114789,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/       * `IpAddr` and `SocketAddr` types: **IpAddr, Ipv4Addr, Ipv6Addr,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114790,"byte_end":114864,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/         SocketAddrV4, SocketAddrV6, SocketAddr**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114865,"byte_end":114917,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/       * `NonZero*` types: **NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114918,"byte_end":114996,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/         NonZeroI128, NonZeroIsize, NonZeroU8, NonZeroU16, NonZeroU32,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":114997,"byte_end":115070,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/         NonZeroU64, NonZeroU128, NonZeroUsize**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115071,"byte_end":115122,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115123,"byte_end":115126,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     A value is validated successfully if the `from_str` method for the given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115127,"byte_end":115207,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/     type returns successfully. Otherwise, the raw form value is returned as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115208,"byte_end":115287,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/     the `Err` value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115288,"byte_end":115312,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115313,"byte_end":115316,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/   * **bool**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115317,"byte_end":115333,"line_start":97,"line_end":97,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115334,"byte_end":115337,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/     A value is validated successfully as `true` if the the form value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115338,"byte_end":115414,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/     `\"true\"` or `\"on\"`, and as a `false` value if the form value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115415,"byte_end":115486,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/     `\"false\"`, `\"off\"`, or not present. In any other case, the raw form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115487,"byte_end":115562,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/     value is returned in the `Err` value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115563,"byte_end":115608,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115609,"byte_end":115612,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/   * **[`&RawStr`](RawStr)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115613,"byte_end":115644,"line_start":104,"line_end":104,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115645,"byte_end":115648,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115649,"byte_end":115707,"line_start":106,"line_end":106,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115708,"byte_end":115711,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     The raw, undecoded string is returned directly without modification.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115712,"byte_end":115788,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115789,"byte_end":115792,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/   * **String**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115793,"byte_end":115811,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115812,"byte_end":115815,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     URL decodes the form value. If the decode is successful, the decoded","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115816,"byte_end":115892,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/     string is returned. Otherwise, an `Err` with the original form value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115893,"byte_end":115972,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/     returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115973,"byte_end":115990,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115991,"byte_end":115994,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>** _where_ **T: FromFormValue**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":115995,"byte_end":116048,"line_start":116,"line_end":116,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116049,"byte_end":116052,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116053,"byte_end":116111,"line_start":118,"line_end":118,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116112,"byte_end":116115,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     The form value is validated by `T`'s `FromFormValue` implementation. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116116,"byte_end":116195,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/     the validation succeeds, a `Some(validated_value)` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116196,"byte_end":116267,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/     Otherwise, a `None` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116268,"byte_end":116308,"line_start":122,"line_end":122,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116309,"byte_end":116312,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, T::Error>** _where_ **T: FromFormValue**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116313,"byte_end":116376,"line_start":124,"line_end":124,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116377,"byte_end":116380,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116381,"byte_end":116439,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116440,"byte_end":116443,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     The from value is validated by `T`'s `FromFormvalue` implementation. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116444,"byte_end":116524,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/     returned `Result` value is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116525,"byte_end":116569,"line_start":129,"line_end":129,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116570,"byte_end":116573,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116574,"byte_end":116587,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116588,"byte_end":116591,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This trait is generally implemented to parse and validate form values. While","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116592,"byte_end":116672,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/ Rocket provides parsing and validation for many of the standard library","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116673,"byte_end":116748,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ types such as `u16` and `String`, you can implement `FromFormValue` for a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116749,"byte_end":116826,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ custom type to get custom validation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116827,"byte_end":116868,"line_start":136,"line_end":136,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116869,"byte_end":116872,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Imagine you'd like to verify that some user is over some age in a form. You","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116873,"byte_end":116952,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ might define a new type and implement `FromFormValue` as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":116953,"byte_end":117022,"line_start":139,"line_end":139,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117023,"byte_end":117026,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117027,"byte_end":117038,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::FromFormValue;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117039,"byte_end":117078,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117079,"byte_end":117108,"line_start":143,"line_end":143,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117109,"byte_end":117112,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ struct AdultAge(usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117113,"byte_end":117140,"line_start":145,"line_end":145,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117141,"byte_end":117144,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ impl<'v> FromFormValue<'v> for AdultAge {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117145,"byte_end":117190,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"/     type Error = &'v RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117191,"byte_end":117223,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117224,"byte_end":117227,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     fn from_form_value(form_value: &'v RawStr) -> Result<AdultAge, &'v RawStr> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117228,"byte_end":117312,"line_start":150,"line_end":150,"column_start":1,"column_end":85}},{"value":"/         match form_value.parse::<usize>() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117313,"byte_end":117360,"line_start":151,"line_end":151,"column_start":1,"column_end":48}},{"value":"/             Ok(age) if age >= 21 => Ok(AdultAge(age)),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117361,"byte_end":117419,"line_start":152,"line_end":152,"column_start":1,"column_end":59}},{"value":"/             _ => Err(form_value),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117420,"byte_end":117457,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117458,"byte_end":117471,"line_start":154,"line_end":154,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117472,"byte_end":117481,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117482,"byte_end":117487,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117488,"byte_end":117495,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117496,"byte_end":117499,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The type can then be used in a `FromForm` struct as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117500,"byte_end":117564,"line_start":159,"line_end":159,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117565,"byte_end":117568,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117569,"byte_end":117580,"line_start":161,"line_end":161,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117581,"byte_end":117620,"line_start":162,"line_end":162,"column_start":1,"column_end":40}},{"value":"/ # type AdultAge = usize;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117621,"byte_end":117649,"line_start":163,"line_end":163,"column_start":1,"column_end":29}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117650,"byte_end":117673,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/ struct Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117674,"byte_end":117693,"line_start":165,"line_end":165,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117694,"byte_end":117715,"line_start":166,"line_end":166,"column_start":1,"column_end":22}},{"value":"/     age: AdultAge","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117716,"byte_end":117737,"line_start":167,"line_end":167,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117738,"byte_end":117743,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117744,"byte_end":117751,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117752,"byte_end":117755,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ A form using the `Person` structure as its target will only parse and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117756,"byte_end":117829,"line_start":171,"line_end":171,"column_start":1,"column_end":74}},{"value":"/ validate if the `age` field contains a `usize` greater than `21`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117830,"byte_end":117899,"line_start":172,"line_end":172,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":480},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118162,"byte_end":118167,"line_start":177,"line_end":177,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form_value::FromFormValue::Error","value":"type Error;","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" The associated error which can be returned from parsing. It is a good\n idea to have the return type be or contain an `&'v str` so that the\n unparseable string can be examined after a bad parse.\n","sig":null,"attributes":[{"value":"/ The associated error which can be returned from parsing. It is a good","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117941,"byte_end":118014,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ idea to have the return type be or contain an `&'v str` so that the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118019,"byte_end":118090,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ unparseable string can be examined after a bad parse.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118095,"byte_end":118152,"line_start":176,"line_end":176,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118299,"byte_end":118314,"line_start":181,"line_end":181,"column_start":8,"column_end":23},"name":"from_form_value","qualname":"::request::form::from_form_value::FromFormValue::from_form_value","value":"fn (form_value: &'v RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from an HTTP form field value or returns an\n `Error` if one cannot be parsed.\n","sig":null,"attributes":[{"value":"/ Parses an instance of `Self` from an HTTP form field value or returns an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118174,"byte_end":118250,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ `Error` if one cannot be parsed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118255,"byte_end":118291,"line_start":180,"line_end":180,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118657,"byte_end":118664,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"default","qualname":"::request::form::from_form_value::FromFormValue::default","value":"fn () -> Option<Self>","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Returns a default value to be used when the form field does not exist.\n If this returns `None`, then the field is required. Otherwise, this\n should return `Some(default_value)`. The default implementation simply\n returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns a default value to be used when the form field does not exist.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118374,"byte_end":118448,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ If this returns `None`, then the field is required. Otherwise, this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118453,"byte_end":118524,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ should return `Some(default_value)`. The default implementation simply","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118529,"byte_end":118603,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118608,"byte_end":118627,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118632,"byte_end":118649,"line_start":187,"line_end":187,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2618},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123288,"byte_end":123299,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"LenientForm","qualname":"::request::form::lenient::LenientForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A data guard for parsing [`FromForm`] types leniently.","sig":null,"attributes":[{"value":"/ A data guard for parsing [`FromForm`] types leniently.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121186,"byte_end":121244,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121245,"byte_end":121248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type implements the [`FromData`] trait, and like [`Form`], provides a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121249,"byte_end":121327,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ generic means to parse arbitrary structures from incoming form data. Unlike","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121328,"byte_end":121407,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ `Form`, this type uses a _lenient_ parsing strategy: forms that contains a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121408,"byte_end":121486,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ superset of the expected fields (i.e, extra fields) will parse successfully.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121487,"byte_end":121567,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121568,"byte_end":121571,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Leniency","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121572,"byte_end":121586,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121587,"byte_end":121590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A `LenientForm<T>` will parse successfully from an incoming form if the form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121591,"byte_end":121671,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ contains a superset of the fields in `T`. Said another way, a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121672,"byte_end":121737,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ `LenientForm<T>` automatically discards extra fields without error. For","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121738,"byte_end":121813,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ instance, if an incoming form contains the fields \"a\", \"b\", and \"c\" while","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121814,"byte_end":121891,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ `T` only contains \"a\" and \"c\", the form _will_ parse as `LenientForm<T>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121892,"byte_end":121969,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121970,"byte_end":121973,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121974,"byte_end":121985,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121986,"byte_end":121989,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The usage of a `LenientForm` type is equivalent to that of [`Form`], so we","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":121990,"byte_end":122068,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ defer details to its documentation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122069,"byte_end":122108,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122109,"byte_end":122112,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `LenientForm` implements `FromData`, so it can be used directly as a target","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122113,"byte_end":122192,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ of the `data = \"<param>\"` route parameter. For instance, if some structure","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122193,"byte_end":122271,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ of type `T` implements the `FromForm` trait, an incoming form can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122272,"byte_end":122344,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ automatically parsed into the `T` structure with the following route and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122345,"byte_end":122421,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ handler:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122422,"byte_end":122434,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122435,"byte_end":122438,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122439,"byte_end":122450,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122451,"byte_end":122500,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122501,"byte_end":122540,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ use rocket::request::LenientForm;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122541,"byte_end":122578,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122579,"byte_end":122582,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122583,"byte_end":122606,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ struct UserInput {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122607,"byte_end":122629,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     value: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122630,"byte_end":122651,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122652,"byte_end":122657,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122658,"byte_end":122661,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[post(\"/submit\", data = \"<user_input>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122662,"byte_end":122707,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ fn submit_task(user_input: LenientForm<UserInput>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122708,"byte_end":122774,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     format!(\"Your value: {}\", user_input.value)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122775,"byte_end":122826,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122827,"byte_end":122832,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122833,"byte_end":122853,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122854,"byte_end":122861,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122862,"byte_end":122865,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Incoming Data Limits","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122866,"byte_end":122893,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122894,"byte_end":122897,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `LenientForm` obeys the same data limits as a `Form` and defaults to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122898,"byte_end":122972,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ 32KiB. The limit can be increased by setting the `limits.forms`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":122973,"byte_end":123040,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/ configuration parameter. For instance, to increase the forms limit to 512KiB","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123041,"byte_end":123121,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ for all environments, you may add the following to your `Rocket.toml`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123122,"byte_end":123196,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123197,"byte_end":123200,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123201,"byte_end":123212,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ [global.limits]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123213,"byte_end":123232,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ forms = 524288","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123233,"byte_end":123251,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123252,"byte_end":123259,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123890,"byte_end":123900,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<LenientForm<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value.","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the parsed value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123341,"byte_end":123390,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123395,"byte_end":123398,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123403,"byte_end":123416,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123421,"byte_end":123424,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123429,"byte_end":123440,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123445,"byte_end":123494,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123499,"byte_end":123538,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ use rocket::request::LenientForm;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123543,"byte_end":123580,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123585,"byte_end":123588,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123593,"byte_end":123616,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"/ struct MyForm {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123621,"byte_end":123640,"line_start":75,"line_end":75,"column_start":5,"column_end":24}},{"value":"/     field: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123645,"byte_end":123667,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123672,"byte_end":123677,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123682,"byte_end":123685,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[post(\"/submit\", data = \"<form>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123690,"byte_end":123729,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ fn submit(form: LenientForm<MyForm>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123734,"byte_end":123786,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/     form.into_inner().field","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123791,"byte_end":123822,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123827,"byte_end":123832,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123837,"byte_end":123856,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123861,"byte_end":123878,"line_start":84,"line_end":84,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2627},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125283,"byte_end":125291,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"BadValue","qualname":"::request::form::error::FormParseError::BadValue","value":"FormParseError::BadValue(&'f RawStr, &'f RawStr)","parent":{"krate":0,"index":2625},"children":[],"decl_id":null,"docs":" The field named `.0` with value `.1` failed to parse or validate.\n","sig":null,"attributes":[{"value":"/ The field named `.0` with value `.1` failed to parse or validate.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125209,"byte_end":125278,"line_start":14,"line_end":14,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2631},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125521,"byte_end":125528,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::request::form::error::FormParseError::Unknown","value":"FormParseError::Unknown(&'f RawStr, &'f RawStr)","parent":{"krate":0,"index":2625},"children":[],"decl_id":null,"docs":" The parse was strict and the field named `.0` with value `.1` appeared\n in the incoming form string but was unexpected.","sig":null,"attributes":[{"value":"/ The parse was strict and the field named `.0` with value `.1` appeared","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125321,"byte_end":125395,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ in the incoming form string but was unexpected.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125400,"byte_end":125451,"line_start":17,"line_end":17,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125456,"byte_end":125459,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This error cannot occur when parsing is lenient.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125464,"byte_end":125516,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2635},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125637,"byte_end":125644,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Missing","qualname":"::request::form::error::FormParseError::Missing","value":"FormParseError::Missing(&'f RawStr)","parent":{"krate":0,"index":2625},"children":[],"decl_id":null,"docs":" The field named `.0` was expected but is missing in the incoming form.\n","sig":null,"attributes":[{"value":"/ The field named `.0` was expected but is missing in the incoming form.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125558,"byte_end":125632,"line_start":21,"line_end":21,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":2625},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125184,"byte_end":125198,"line_start":13,"line_end":13,"column_start":10,"column_end":24},"name":"FormParseError","qualname":"::request::form::error::FormParseError","value":"FormParseError::{BadValue, Unknown, Missing}","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2631},{"krate":0,"index":2635}],"decl_id":null,"docs":" Error returned by the [`FromForm`](::request::FromForm) derive on form\n parsing errors.","sig":null,"attributes":[{"value":"/ Error returned by the [`FromForm`](::request::FromForm) derive on form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":124775,"byte_end":124849,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ parsing errors.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":124850,"byte_end":124869,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":124870,"byte_end":124873,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ If multiple errors occur while parsing a form, the first error in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":124874,"byte_end":124947,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ following precedence, from highest to lowest, is returned:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":124948,"byte_end":125010,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125011,"byte_end":125014,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/   * `BadValue` or `Unknown` in incoming form string field order","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125015,"byte_end":125082,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/   * `Missing` in lexical field order","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125083,"byte_end":125123,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2664},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126000,"byte_end":126002,"line_start":31,"line_end":31,"column_start":5,"column_end":7},"name":"Io","qualname":"::request::form::error::FormDataError::Io","value":"FormDataError::Io(io::Error)","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading reading the data stream. This can\n also mean that the form contained invalid UTF-8.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred while reading reading the data stream. This can","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125865,"byte_end":125938,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ also mean that the form contained invalid UTF-8.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125943,"byte_end":125995,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2667},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126152,"byte_end":126161,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::request::form::error::FormDataError::Malformed","value":"FormDataError::Malformed(&'f str)","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" The form string (in `.0`) is malformed and was unable to be parsed as\n HTTP `application/x-www-form-urlencoded` data.\n","sig":null,"attributes":[{"value":"/ The form string (in `.0`) is malformed and was unable to be parsed as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126019,"byte_end":126092,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ HTTP `application/x-www-form-urlencoded` data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126097,"byte_end":126147,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126310,"byte_end":126315,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Parse","qualname":"::request::form::error::FormDataError::Parse","value":"FormDataError::Parse(E, &'f str)","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" The form string (in `.1`) failed to parse as the intended structure. The\n error type in `.0` contains further details.\n","sig":null,"attributes":[{"value":"/ The form string (in `.1`) failed to parse as the intended structure. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126176,"byte_end":126252,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ error type in `.0` contains further details.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126257,"byte_end":126305,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2661},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125838,"byte_end":125851,"line_start":28,"line_end":28,"column_start":10,"column_end":23},"name":"FormDataError","qualname":"::request::form::error::FormDataError","value":"FormDataError::{Io, Malformed, Parse}","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670}],"decl_id":null,"docs":" Error returned by the [`FromData`](::data::FromData) implementations of\n [`Form`](::request::Form) and [`LenientForm`](::request::LenientForm).\n","sig":null,"attributes":[{"value":"/ Error returned by the [`FromData`](::data::FromData) implementations of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125661,"byte_end":125736,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ [`Form`](::request::Form) and [`LenientForm`](::request::LenientForm).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":125737,"byte_end":125811,"line_start":26,"line_end":26,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":550},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127381,"byte_end":127390,"line_start":74,"line_end":74,"column_start":10,"column_end":19},"name":"FormError","qualname":"::request::form::error::FormError","value":"FormDataError<'f, FormParseError<'f>>","parent":null,"children":[],"decl_id":null,"docs":" Alias to the type of form errors returned by the [`FromData`]\n implementations of [`Form<T>`] where the [`FromForm`] implementation for `T`\n was derived.","sig":null,"attributes":[{"value":"/ Alias to the type of form errors returned by the [`FromData`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126331,"byte_end":126396,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ implementations of [`Form<T>`] where the [`FromForm`] implementation for `T`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126397,"byte_end":126477,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ was derived.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126478,"byte_end":126494,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126495,"byte_end":126498,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This alias is particularly useful when \"catching\" form errors in routes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126499,"byte_end":126575,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126576,"byte_end":126579,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`FromData`]: ::data::FromData","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126580,"byte_end":126614,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/ [`Form<T>`]: ::request::Form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126615,"byte_end":126647,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ [`FromForm`]: ::request::FromForm","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126648,"byte_end":126685,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126686,"byte_end":126689,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126690,"byte_end":126703,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126704,"byte_end":126707,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126708,"byte_end":126719,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126720,"byte_end":126769,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126770,"byte_end":126809,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/ use rocket::request::{Form, FormError, FormDataError};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126810,"byte_end":126868,"line_start":55,"line_end":55,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126869,"byte_end":126872,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126873,"byte_end":126896,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/ struct Input {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126897,"byte_end":126915,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/     value: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126916,"byte_end":126938,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126939,"byte_end":126944,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126945,"byte_end":126948,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[post(\"/\", data = \"<sink>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126949,"byte_end":126982,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/ fn submit(sink: Result<Form<Input>, FormError>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":126983,"byte_end":127046,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/     match sink {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127047,"byte_end":127067,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/         Ok(form) => form.into_inner().value,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127068,"byte_end":127116,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/         Err(FormDataError::Io(_)) => \"I/O error\".into(),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127117,"byte_end":127177,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/         Err(FormDataError::Malformed(f)) | Err(FormDataError::Parse(_, f)) => {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127178,"byte_end":127261,"line_start":67,"line_end":67,"column_start":1,"column_end":84}},{"value":"/             format!(\"invalid form input: {}\", f)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127262,"byte_end":127314,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127315,"byte_end":127328,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127329,"byte_end":127338,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127339,"byte_end":127344,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127345,"byte_end":127363,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/error.rs","byte_start":127364,"byte_end":127371,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2678},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131803,"byte_end":131807,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"Form","qualname":"::request::form::form::Form","value":"","parent":null,"children":[],"decl_id":null,"docs":" A data guard for parsing [`FromForm`] types strictly.","sig":null,"attributes":[{"value":"/ A data guard for parsing [`FromForm`] types strictly.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127662,"byte_end":127719,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127720,"byte_end":127723,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type implements the [`FromData`] trait. It provides a generic means to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127724,"byte_end":127803,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ parse arbitrary structures from incoming form data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127804,"byte_end":127859,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127860,"byte_end":127863,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Strictness","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127864,"byte_end":127880,"line_start":13,"line_end":13,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127881,"byte_end":127884,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A `Form<T>` will parse successfully from an incoming form only if the form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127885,"byte_end":127963,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ contains the exact set of fields in `T`. Said another way, a `Form<T>` will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":127964,"byte_end":128043,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ error on missing and/or extra fields. For instance, if an incoming form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128044,"byte_end":128119,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ contains the fields \"a\", \"b\", and \"c\" while `T` only contains \"a\" and \"c\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128120,"byte_end":128198,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the form _will not_ parse as `Form<T>`. If you would like to admit extra","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128199,"byte_end":128275,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ fields without error, see [`LenientForm`](::request::LenientForm).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128276,"byte_end":128346,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128347,"byte_end":128350,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128351,"byte_end":128362,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128363,"byte_end":128366,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type can be used with any type that implements the `FromForm` trait.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128367,"byte_end":128444,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ The trait can be automatically derived; see the [`FromForm`] documentation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128445,"byte_end":128523,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ for more information on deriving or implementing the trait.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128524,"byte_end":128587,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128588,"byte_end":128591,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Because `Form` implements `FromData`, it can be used directly as a target of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128592,"byte_end":128672,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ the `data = \"<param>\"` route parameter as long as its generic type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128673,"byte_end":128743,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ implements the `FromForm` trait:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128744,"byte_end":128780,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128781,"byte_end":128784,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128785,"byte_end":128796,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128797,"byte_end":128846,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128847,"byte_end":128886,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128887,"byte_end":128917,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128918,"byte_end":128947,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128948,"byte_end":128951,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128952,"byte_end":128975,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ struct UserInput<'f> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":128976,"byte_end":129002,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/     // The raw, undecoded value. You _probably_ want `String` instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129003,"byte_end":129077,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     value: &'f RawStr","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129078,"byte_end":129103,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129104,"byte_end":129109,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129110,"byte_end":129113,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[post(\"/submit\", data = \"<user_input>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129114,"byte_end":129159,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ fn submit_task(user_input: Form<UserInput>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129160,"byte_end":129219,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     format!(\"Your value: {}\", user_input.value)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129220,"byte_end":129271,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129272,"byte_end":129277,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129278,"byte_end":129298,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129299,"byte_end":129306,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129307,"byte_end":129310,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ A type of `Form<T>` automatically dereferences into an `&T`, though you can","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129311,"byte_end":129390,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ also transform a `Form<T>` into a `T` by calling","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129391,"byte_end":129443,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/ [`into_inner()`](Form::into_inner()). Thanks to automatic dereferencing, you","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129444,"byte_end":129524,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ can access fields of `T` transparently through a `Form<T>`, as seen above","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129525,"byte_end":129602,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ with `user_input.value`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129603,"byte_end":129631,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129632,"byte_end":129635,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ For posterity, the owned analog of the `UserInput` type above is:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129636,"byte_end":129705,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129706,"byte_end":129709,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129710,"byte_end":129721,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ struct OwnedUserInput {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129722,"byte_end":129749,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/     // The decoded value. You _probably_ want this.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129750,"byte_end":129805,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/     value: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129806,"byte_end":129827,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129828,"byte_end":129833,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129834,"byte_end":129841,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129842,"byte_end":129845,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ A handler that handles a form of this type can similarly by written:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129846,"byte_end":129918,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129919,"byte_end":129922,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129923,"byte_end":129934,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129935,"byte_end":129984,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/ # #![allow(deprecated, unused_attributes)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":129985,"byte_end":130031,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130032,"byte_end":130071,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ # use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130072,"byte_end":130104,"line_start":72,"line_end":72,"column_start":1,"column_end":33}},{"value":"/ # #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130105,"byte_end":130130,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ # struct OwnedUserInput {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130131,"byte_end":130160,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ #     value: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130161,"byte_end":130184,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130185,"byte_end":130192,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ #[post(\"/submit\", data = \"<user_input>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130193,"byte_end":130238,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ fn submit_task(user_input: Form<OwnedUserInput>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130239,"byte_end":130303,"line_start":78,"line_end":78,"column_start":1,"column_end":65}},{"value":"/     format!(\"Your value: {}\", user_input.value)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130304,"byte_end":130355,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130356,"byte_end":130361,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130362,"byte_end":130382,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130383,"byte_end":130390,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130391,"byte_end":130394,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Note that no lifetime annotations are required in either case.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130395,"byte_end":130461,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130462,"byte_end":130465,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## `&RawStr` vs. `String`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130466,"byte_end":130495,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130496,"byte_end":130499,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Whether you should use a `&RawStr` or `String` in your `FromForm` type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130500,"byte_end":130574,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ depends on your use case. The primary question to answer is: _Can the input","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130575,"byte_end":130654,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ contain characters that must be URL encoded?_ Note that this includes common","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130655,"byte_end":130735,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ characters such as spaces. If so, then you must use `String`, whose","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130736,"byte_end":130807,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/ [`FromFormValue`](::request::FromFormValue) implementation automatically URL","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130808,"byte_end":130888,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ decodes the value. Because the `&RawStr` references will refer directly to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130889,"byte_end":130967,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ the underlying form data, they will be raw and URL encoded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":130968,"byte_end":131031,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131032,"byte_end":131035,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ If it is known that string values will not contain URL encoded characters,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131036,"byte_end":131114,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ or you wish to handle decoding and validation yourself, using `&RawStr` will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131115,"byte_end":131195,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ result in fewer allocation and is thus preferred.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131196,"byte_end":131249,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131250,"byte_end":131253,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Incoming Data Limits","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131254,"byte_end":131281,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131282,"byte_end":131285,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The default size limit for incoming form data is 32KiB. Setting a limit","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131286,"byte_end":131361,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ protects your application from denial of service (DOS) attacks and from","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131362,"byte_end":131437,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ resource exhaustion through high memory consumption. The limit can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131438,"byte_end":131511,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ increased by setting the `limits.forms` configuration parameter. For","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131512,"byte_end":131584,"line_start":105,"line_end":105,"column_start":1,"column_end":73}},{"value":"/ instance, to increase the forms limit to 512KiB for all environments, you","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131585,"byte_end":131662,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ may add the following to your `Rocket.toml`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131663,"byte_end":131711,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131712,"byte_end":131715,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131716,"byte_end":131727,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ [global.limits]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131728,"byte_end":131747,"line_start":110,"line_end":110,"column_start":1,"column_end":20}},{"value":"/ forms = 524288","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131748,"byte_end":131766,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131767,"byte_end":131774,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132377,"byte_end":132387,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Form<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value.","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the parsed value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131842,"byte_end":131891,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131896,"byte_end":131899,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131904,"byte_end":131917,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131922,"byte_end":131925,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131930,"byte_end":131941,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131946,"byte_end":131995,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132000,"byte_end":132039,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/ use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132044,"byte_end":132074,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132079,"byte_end":132082,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132087,"byte_end":132110,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"/ struct MyForm {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132115,"byte_end":132134,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/     field: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132139,"byte_end":132161,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132166,"byte_end":132171,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132176,"byte_end":132179,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ #[post(\"/submit\", data = \"<form>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132184,"byte_end":132223,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/ fn submit(form: Form<MyForm>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132228,"byte_end":132273,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     form.into_inner().field","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132278,"byte_end":132309,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132314,"byte_end":132319,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132324,"byte_end":132343,"line_start":135,"line_end":135,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132348,"byte_end":132365,"line_start":136,"line_end":136,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":629},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":135641,"byte_end":135648,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::request::from_request::Outcome","value":"outcome::Outcome<S, (Status, E), ()>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromRequest` conversion.\n","sig":null,"attributes":[{"value":"/ Type alias for the `Outcome` of a `FromRequest` conversion.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":135568,"byte_end":135631,"line_start":11,"line_end":11,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":639},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147333,"byte_end":147344,"line_start":347,"line_end":347,"column_start":11,"column_end":22},"name":"FromRequest","qualname":"::request::from_request::FromRequest","value":"FromRequest<'a, 'r>: Sized","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"decl_id":null,"docs":" Trait implemented by request guards to derive a value from incoming\n requests.","sig":null,"attributes":[{"value":"/ Trait implemented by request guards to derive a value from incoming","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136181,"byte_end":136252,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ requests.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136253,"byte_end":136266,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136267,"byte_end":136270,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Request Guards","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136271,"byte_end":136291,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136292,"byte_end":136295,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ A request guard is a type that represents an arbitrary validation policy.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136296,"byte_end":136373,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ The validation policy is implemented through `FromRequest`. In other words,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136374,"byte_end":136453,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ every type that implements `FromRequest` is a request guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136454,"byte_end":136518,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136519,"byte_end":136522,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Request guards appear as inputs to handlers. An arbitrary number of request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136523,"byte_end":136602,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ guards can appear as arguments in a route handler. Rocket will automatically","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136603,"byte_end":136683,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ invoke the `FromRequest` implementation for request guards before calling","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136684,"byte_end":136761,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ the handler. Rocket only dispatches requests to a handler when all of its","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136762,"byte_end":136839,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ guards pass.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136840,"byte_end":136856,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136857,"byte_end":136860,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136861,"byte_end":136875,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136876,"byte_end":136879,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The following dummy handler makes use of three request guards, `A`, `B`, and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136880,"byte_end":136960,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ `C`. An input type can be identified as a request guard if it is not named","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":136961,"byte_end":137039,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ in the route attribute. This is why, for instance, `param` is not a request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137040,"byte_end":137119,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137120,"byte_end":137130,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137131,"byte_end":137134,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137135,"byte_end":137146,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137147,"byte_end":137196,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137197,"byte_end":137236,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/ # use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137237,"byte_end":137268,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # type A = Method; type B = Method; type C = Method; type T = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137269,"byte_end":137338,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ #[get(\"/<param>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137339,"byte_end":137361,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/ fn index(param: isize, a: A, b: B, c: C) -> T { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137362,"byte_end":137425,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # fn main() {}","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137426,"byte_end":137444,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137445,"byte_end":137452,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137453,"byte_end":137456,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Request guards always fire in left-to-right declaration order. In the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137457,"byte_end":137530,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ example above, the order is `a` followed by `b` followed by `c`. Failure is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137531,"byte_end":137610,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ short-circuiting; if one guard fails, the remaining are not attempted.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137611,"byte_end":137685,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137686,"byte_end":137689,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Outcomes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137690,"byte_end":137704,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137705,"byte_end":137708,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The returned [`Outcome`] of a `from_request` call determines how the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137709,"byte_end":137781,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ incoming request will be processed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137782,"byte_end":137821,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137822,"byte_end":137825,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * **Success**(S)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137826,"byte_end":137846,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137847,"byte_end":137850,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Success`], then the `Success` value will be used as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137851,"byte_end":137930,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/   the value for the corresponding parameter.  As long as all other guards","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":137931,"byte_end":138008,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/   succeed, the request will be handled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138009,"byte_end":138052,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138053,"byte_end":138056,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ * **Failure**(Status, E)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138057,"byte_end":138085,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138086,"byte_end":138089,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Failure`], the request will fail with the given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138090,"byte_end":138165,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/   status code and error. The designated error [`Catcher`](::Catcher) will be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138166,"byte_end":138246,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/   used to respond to the request. Note that users can request types of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138247,"byte_end":138321,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/   `Result<S, E>` and `Option<S>` to catch `Failure`s and retrieve the error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138322,"byte_end":138401,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/   value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138402,"byte_end":138414,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138415,"byte_end":138418,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ * **Forward**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138419,"byte_end":138436,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138437,"byte_end":138440,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Forward`], the request will be forwarded to the next","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138441,"byte_end":138521,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/   matching request. Note that users can request an `Option<S>` to catch","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138522,"byte_end":138597,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/   `Forward`s.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138598,"byte_end":138615,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138616,"byte_end":138619,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138620,"byte_end":138650,"line_start":96,"line_end":96,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138651,"byte_end":138654,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `FromRequest` for several built-in types. Their behavior","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138655,"byte_end":138733,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ is documented here.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138734,"byte_end":138757,"line_start":99,"line_end":99,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138758,"byte_end":138761,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/   * **Method**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138762,"byte_end":138780,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138781,"byte_end":138784,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     Extracts the [`Method`] from the incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138785,"byte_end":138843,"line_start":103,"line_end":103,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138844,"byte_end":138847,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138848,"byte_end":138906,"line_start":105,"line_end":105,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138907,"byte_end":138910,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/   * **&Origin**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138911,"byte_end":138930,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138931,"byte_end":138934,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/     Extracts the [`Origin`] URI from the incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138935,"byte_end":138997,"line_start":109,"line_end":109,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":138998,"byte_end":139001,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139002,"byte_end":139060,"line_start":111,"line_end":111,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139061,"byte_end":139064,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/   * **&Route**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139065,"byte_end":139083,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139084,"byte_end":139087,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     Extracts the [`Route`] from the request if one is available. If a route","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139088,"byte_end":139167,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/     is not available, the request is forwarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139168,"byte_end":139219,"line_start":116,"line_end":116,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139220,"byte_end":139223,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     For information on when an `&Route` is available, see","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139224,"byte_end":139285,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/     [`Request::route()`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139286,"byte_end":139315,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139316,"byte_end":139319,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/   * **Cookies**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139320,"byte_end":139339,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139340,"byte_end":139343,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     Returns a borrow to the [`Cookies`] in the incoming request. Note that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139344,"byte_end":139422,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/     `Cookies` implements internal mutability, so a handle to `Cookies`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139423,"byte_end":139497,"line_start":124,"line_end":124,"column_start":1,"column_end":75}},{"value":"/     allows you to get _and_ set cookies in the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139498,"byte_end":139557,"line_start":125,"line_end":125,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139558,"byte_end":139561,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139562,"byte_end":139620,"line_start":127,"line_end":127,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139621,"byte_end":139624,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/   * **ContentType**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139625,"byte_end":139648,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139649,"byte_end":139652,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/     Extracts the [`ContentType`] from the incoming request. If the request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139653,"byte_end":139731,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/     didn't specify a Content-Type, the request is forwarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139732,"byte_end":139796,"line_start":132,"line_end":132,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139797,"byte_end":139800,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/   * **SocketAddr**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139801,"byte_end":139823,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139824,"byte_end":139827,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     Extracts the remote address of the incoming request as a [`SocketAddr`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139828,"byte_end":139908,"line_start":136,"line_end":136,"column_start":1,"column_end":81}},{"value":"/     If the remote address is not known, the request is forwarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139909,"byte_end":139978,"line_start":137,"line_end":137,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139979,"byte_end":139982,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":139983,"byte_end":140041,"line_start":139,"line_end":139,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140042,"byte_end":140045,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>** _where_ **T: FromRequest**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140046,"byte_end":140097,"line_start":141,"line_end":141,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140098,"byte_end":140101,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/     The type `T` is derived from the incoming request using `T`'s","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140102,"byte_end":140171,"line_start":143,"line_end":143,"column_start":1,"column_end":70}},{"value":"/     `FromRequest` implementation. If the derivation is a `Success`, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140172,"byte_end":140247,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/     derived value is returned in `Some`. Otherwise, a `None` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140248,"byte_end":140325,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140326,"byte_end":140329,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140330,"byte_end":140388,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140389,"byte_end":140392,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, T::Error>** _where_ **T: FromRequest**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140393,"byte_end":140454,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140455,"byte_end":140458,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     The type `T` is derived from the incoming request using `T`'s","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140459,"byte_end":140528,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/     `FromRequest` implementation. If derivation is a `Success`, the value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140529,"byte_end":140609,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/     returned in `Ok`. If the derivation is a `Failure`, the error value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140610,"byte_end":140688,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/     returned in `Err`. If the derivation is a `Forward`, the request is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140689,"byte_end":140764,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/     forwarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140765,"byte_end":140783,"line_start":155,"line_end":155,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140784,"byte_end":140787,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140788,"byte_end":140801,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140802,"byte_end":140805,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Imagine you're running an authenticated API service that requires that some","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140806,"byte_end":140885,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ requests be sent along with a valid API key in a header field. You want to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140886,"byte_end":140964,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ ensure that the handlers corresponding to these requests don't get called","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":140965,"byte_end":141042,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ unless there is an API key in the request and the key is valid. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141043,"byte_end":141114,"line_start":162,"line_end":162,"column_start":1,"column_end":72}},{"value":"/ following example implements this using an `ApiKey` type and a `FromRequest`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141115,"byte_end":141195,"line_start":163,"line_end":163,"column_start":1,"column_end":81}},{"value":"/ implementation for that type. The `ApiKey` type is then used in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141196,"byte_end":141267,"line_start":164,"line_end":164,"column_start":1,"column_end":72}},{"value":"/ `sensitive` handler.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141268,"byte_end":141292,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141293,"byte_end":141296,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141297,"byte_end":141308,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141309,"byte_end":141358,"line_start":168,"line_end":168,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141359,"byte_end":141398,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141399,"byte_end":141404,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ use rocket::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141405,"byte_end":141429,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141430,"byte_end":141459,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/ use rocket::request::{self, Request, FromRequest};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141460,"byte_end":141514,"line_start":173,"line_end":173,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141515,"byte_end":141518,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ struct ApiKey(String);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141519,"byte_end":141545,"line_start":175,"line_end":175,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141546,"byte_end":141549,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ /// Returns true if `key` is a valid API key string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141550,"byte_end":141606,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/ fn is_valid(key: &str) -> bool {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141607,"byte_end":141643,"line_start":178,"line_end":178,"column_start":1,"column_end":37}},{"value":"/     key == \"valid_api_key\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141644,"byte_end":141674,"line_start":179,"line_end":179,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141675,"byte_end":141680,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141681,"byte_end":141684,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141685,"byte_end":141705,"line_start":182,"line_end":182,"column_start":1,"column_end":21}},{"value":"/ enum ApiKeyError {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141706,"byte_end":141728,"line_start":183,"line_end":183,"column_start":1,"column_end":23}},{"value":"/     BadCount,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141729,"byte_end":141746,"line_start":184,"line_end":184,"column_start":1,"column_end":18}},{"value":"/     Missing,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141747,"byte_end":141763,"line_start":185,"line_end":185,"column_start":1,"column_end":17}},{"value":"/     Invalid,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141764,"byte_end":141780,"line_start":186,"line_end":186,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141781,"byte_end":141786,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141787,"byte_end":141790,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for ApiKey {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141791,"byte_end":141840,"line_start":189,"line_end":189,"column_start":1,"column_end":50}},{"value":"/     type Error = ApiKeyError;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141841,"byte_end":141874,"line_start":190,"line_end":190,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141875,"byte_end":141878,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<Self, Self::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141879,"byte_end":141969,"line_start":192,"line_end":192,"column_start":1,"column_end":91}},{"value":"/         let keys: Vec<_> = request.headers().get(\"x-api-key\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":141970,"byte_end":142046,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/         match keys.len() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142047,"byte_end":142077,"line_start":194,"line_end":194,"column_start":1,"column_end":31}},{"value":"/             0 => Outcome::Failure((Status::BadRequest, ApiKeyError::Missing)),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142078,"byte_end":142160,"line_start":195,"line_end":195,"column_start":1,"column_end":83}},{"value":"/             1 if is_valid(keys[0]) => Outcome::Success(ApiKey(keys[0].to_string())),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142161,"byte_end":142249,"line_start":196,"line_end":196,"column_start":1,"column_end":89}},{"value":"/             1 => Outcome::Failure((Status::BadRequest, ApiKeyError::Invalid)),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142250,"byte_end":142332,"line_start":197,"line_end":197,"column_start":1,"column_end":83}},{"value":"/             _ => Outcome::Failure((Status::BadRequest, ApiKeyError::BadCount)),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142333,"byte_end":142416,"line_start":198,"line_end":198,"column_start":1,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142417,"byte_end":142430,"line_start":199,"line_end":199,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142431,"byte_end":142440,"line_start":200,"line_end":200,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142441,"byte_end":142446,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142447,"byte_end":142450,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/sensitive\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142451,"byte_end":142475,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/ fn sensitive(key: ApiKey) -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142476,"byte_end":142523,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ #   let _key = key;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142524,"byte_end":142547,"line_start":205,"line_end":205,"column_start":1,"column_end":24}},{"value":"/     \"Sensitive data.\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142548,"byte_end":142573,"line_start":206,"line_end":206,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142574,"byte_end":142579,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142580,"byte_end":142583,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142584,"byte_end":142603,"line_start":209,"line_end":209,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142604,"byte_end":142611,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142612,"byte_end":142615,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Request-Local State","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142616,"byte_end":142641,"line_start":212,"line_end":212,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142642,"byte_end":142645,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Request guards that perform expensive operations, such as those that query a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142646,"byte_end":142726,"line_start":214,"line_end":214,"column_start":1,"column_end":81}},{"value":"/ database or an external service, should use the [request-local state] cache","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142727,"byte_end":142806,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ to store results if they might be invoked multiple times during the routing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142807,"byte_end":142886,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ of a single request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142887,"byte_end":142911,"line_start":217,"line_end":217,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142912,"byte_end":142915,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ For example, consider a pair of `User` and `Admin` guards and a pair of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142916,"byte_end":142991,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"/ routes (`admin_dashboard` and `user_dashboard`):","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":142992,"byte_end":143044,"line_start":220,"line_end":220,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143045,"byte_end":143048,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143049,"byte_end":143060,"line_start":222,"line_end":222,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143061,"byte_end":143110,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143111,"byte_end":143150,"line_start":224,"line_end":224,"column_start":1,"column_end":40}},{"value":"/ # #[cfg(feature = \"private-cookies\")] mod inner {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143151,"byte_end":143204,"line_start":225,"line_end":225,"column_start":1,"column_end":54}},{"value":"/ # use rocket::outcome::{IntoOutcome, Outcome};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143205,"byte_end":143255,"line_start":226,"line_end":226,"column_start":1,"column_end":51}},{"value":"/ # use rocket::request::{self, FromRequest, Request};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143256,"byte_end":143312,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ # struct User { id: String, is_admin: bool }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143313,"byte_end":143361,"line_start":228,"line_end":228,"column_start":1,"column_end":49}},{"value":"/ # struct Database;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143362,"byte_end":143384,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"/ # impl Database {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143385,"byte_end":143406,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ #     fn get_user(&self, id: String) -> Result<User, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143407,"byte_end":143469,"line_start":231,"line_end":231,"column_start":1,"column_end":63}},{"value":"/ #         Ok(User { id, is_admin: false })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143470,"byte_end":143516,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"/ #     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143517,"byte_end":143528,"line_start":233,"line_end":233,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143529,"byte_end":143536,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ # impl<'a, 'r> FromRequest<'a, 'r> for Database {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143537,"byte_end":143590,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"/ #     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143591,"byte_end":143617,"line_start":236,"line_end":236,"column_start":1,"column_end":27}},{"value":"/ #     fn from_request(request: &'a Request<'r>) -> request::Outcome<Database, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143618,"byte_end":143705,"line_start":237,"line_end":237,"column_start":1,"column_end":88}},{"value":"/ #         Outcome::Success(Database)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143706,"byte_end":143746,"line_start":238,"line_end":238,"column_start":1,"column_end":41}},{"value":"/ #     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143747,"byte_end":143758,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143759,"byte_end":143766,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143767,"byte_end":143772,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"/ # struct Admin { user: User }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143773,"byte_end":143806,"line_start":242,"line_end":242,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143807,"byte_end":143812,"line_start":243,"line_end":243,"column_start":1,"column_end":6}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for User {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143813,"byte_end":143860,"line_start":244,"line_end":244,"column_start":1,"column_end":48}},{"value":"/     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143861,"byte_end":143885,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143886,"byte_end":143889,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<User, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143890,"byte_end":143971,"line_start":247,"line_end":247,"column_start":1,"column_end":82}},{"value":"/         let db = request.guard::<Database>()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":143972,"byte_end":144022,"line_start":248,"line_end":248,"column_start":1,"column_end":51}},{"value":"/         request.cookies()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144023,"byte_end":144052,"line_start":249,"line_end":249,"column_start":1,"column_end":30}},{"value":"/             .get_private(\"user_id\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144053,"byte_end":144092,"line_start":250,"line_end":250,"column_start":1,"column_end":40}},{"value":"/             .and_then(|cookie| cookie.value().parse().ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144093,"byte_end":144156,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/             .and_then(|id| db.get_user(id).ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144157,"byte_end":144209,"line_start":252,"line_end":252,"column_start":1,"column_end":53}},{"value":"/             .or_forward(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144210,"byte_end":144241,"line_start":253,"line_end":253,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144242,"byte_end":144251,"line_start":254,"line_end":254,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144252,"byte_end":144257,"line_start":255,"line_end":255,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144258,"byte_end":144261,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for Admin {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144262,"byte_end":144310,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144311,"byte_end":144335,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144336,"byte_end":144339,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<Admin, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144340,"byte_end":144422,"line_start":260,"line_end":260,"column_start":1,"column_end":83}},{"value":"/         // This will unconditionally query the database!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144423,"byte_end":144483,"line_start":261,"line_end":261,"column_start":1,"column_end":61}},{"value":"/         let user = request.guard::<User>()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144484,"byte_end":144532,"line_start":262,"line_end":262,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144533,"byte_end":144536,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/         if user.is_admin {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144537,"byte_end":144567,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/             Outcome::Success(Admin { user })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144568,"byte_end":144616,"line_start":265,"line_end":265,"column_start":1,"column_end":49}},{"value":"/         } else {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144617,"byte_end":144637,"line_start":266,"line_end":266,"column_start":1,"column_end":21}},{"value":"/             Outcome::Forward(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144638,"byte_end":144674,"line_start":267,"line_end":267,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144675,"byte_end":144688,"line_start":268,"line_end":268,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144689,"byte_end":144698,"line_start":269,"line_end":269,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144699,"byte_end":144704,"line_start":270,"line_end":270,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144705,"byte_end":144708,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/dashboard\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144709,"byte_end":144733,"line_start":272,"line_end":272,"column_start":1,"column_end":25}},{"value":"/ fn admin_dashboard(admin: Admin) { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144734,"byte_end":144774,"line_start":273,"line_end":273,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144775,"byte_end":144778,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/dashboard\", rank = 2)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144779,"byte_end":144813,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/ fn user_dashboard(user: User) { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144814,"byte_end":144851,"line_start":276,"line_end":276,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144852,"byte_end":144859,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144860,"byte_end":144867,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144868,"byte_end":144871,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ When a non-admin user is logged in, the database will be queried twice: once","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144872,"byte_end":144952,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/ via the `Admin` guard invoking the `User` guard, and a second time via the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":144953,"byte_end":145031,"line_start":281,"line_end":281,"column_start":1,"column_end":79}},{"value":"/ `User` guard directly. For cases like these, request-local state should be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145032,"byte_end":145110,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/ used, as illustrated below:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145111,"byte_end":145142,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145143,"byte_end":145146,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145147,"byte_end":145158,"line_start":285,"line_end":285,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145159,"byte_end":145208,"line_start":286,"line_end":286,"column_start":1,"column_end":50}},{"value":"/ # #![feature(never_type)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145209,"byte_end":145238,"line_start":287,"line_end":287,"column_start":1,"column_end":30}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145239,"byte_end":145278,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ # #[cfg(feature = \"private-cookies\")] mod inner {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145279,"byte_end":145332,"line_start":289,"line_end":289,"column_start":1,"column_end":54}},{"value":"/ # use rocket::outcome::{IntoOutcome, Outcome};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145333,"byte_end":145383,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/ # use rocket::request::{self, FromRequest, Request};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145384,"byte_end":145440,"line_start":291,"line_end":291,"column_start":1,"column_end":57}},{"value":"/ # struct User { id: String, is_admin: bool }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145441,"byte_end":145489,"line_start":292,"line_end":292,"column_start":1,"column_end":49}},{"value":"/ # struct Database;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145490,"byte_end":145512,"line_start":293,"line_end":293,"column_start":1,"column_end":23}},{"value":"/ # impl Database {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145513,"byte_end":145534,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"/ #     fn get_user(&self, id: String) -> Result<User, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145535,"byte_end":145597,"line_start":295,"line_end":295,"column_start":1,"column_end":63}},{"value":"/ #         Ok(User { id, is_admin: false })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145598,"byte_end":145644,"line_start":296,"line_end":296,"column_start":1,"column_end":47}},{"value":"/ #     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145645,"byte_end":145656,"line_start":297,"line_end":297,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145657,"byte_end":145664,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/ # impl<'a, 'r> FromRequest<'a, 'r> for Database {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145665,"byte_end":145718,"line_start":299,"line_end":299,"column_start":1,"column_end":54}},{"value":"/ #     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145719,"byte_end":145745,"line_start":300,"line_end":300,"column_start":1,"column_end":27}},{"value":"/ #     fn from_request(request: &'a Request<'r>) -> request::Outcome<Database, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145746,"byte_end":145833,"line_start":301,"line_end":301,"column_start":1,"column_end":88}},{"value":"/ #         Outcome::Success(Database)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145834,"byte_end":145874,"line_start":302,"line_end":302,"column_start":1,"column_end":41}},{"value":"/ #     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145875,"byte_end":145886,"line_start":303,"line_end":303,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145887,"byte_end":145894,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145895,"byte_end":145900,"line_start":305,"line_end":305,"column_start":1,"column_end":6}},{"value":"/ # struct Admin<'a> { user: &'a User }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145901,"byte_end":145942,"line_start":306,"line_end":306,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145943,"byte_end":145948,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for &'a User {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":145949,"byte_end":146000,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/     type Error = !;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146001,"byte_end":146024,"line_start":309,"line_end":309,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146025,"byte_end":146028,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<&'a User, !> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146029,"byte_end":146113,"line_start":311,"line_end":311,"column_start":1,"column_end":85}},{"value":"/         // This closure will execute at most once per request, regardless of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146114,"byte_end":146194,"line_start":312,"line_end":312,"column_start":1,"column_end":81}},{"value":"/         // the number of times the `User` guard is executed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146195,"byte_end":146259,"line_start":313,"line_end":313,"column_start":1,"column_end":65}},{"value":"/         let user_result = request.local_cache(|| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146260,"byte_end":146314,"line_start":314,"line_end":314,"column_start":1,"column_end":55}},{"value":"/             let db = request.guard::<Database>().succeeded()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146315,"byte_end":146381,"line_start":315,"line_end":315,"column_start":1,"column_end":67}},{"value":"/             request.cookies()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146382,"byte_end":146415,"line_start":316,"line_end":316,"column_start":1,"column_end":34}},{"value":"/                 .get_private(\"user_id\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146416,"byte_end":146459,"line_start":317,"line_end":317,"column_start":1,"column_end":44}},{"value":"/                 .and_then(|cookie| cookie.value().parse().ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146460,"byte_end":146527,"line_start":318,"line_end":318,"column_start":1,"column_end":68}},{"value":"/                 .and_then(|id| db.get_user(id).ok())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146528,"byte_end":146584,"line_start":319,"line_end":319,"column_start":1,"column_end":57}},{"value":"/         });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146585,"byte_end":146600,"line_start":320,"line_end":320,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146601,"byte_end":146604,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/         user_result.as_ref().or_forward(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146605,"byte_end":146652,"line_start":322,"line_end":322,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146653,"byte_end":146662,"line_start":323,"line_end":323,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146663,"byte_end":146668,"line_start":324,"line_end":324,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146669,"byte_end":146672,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for Admin<'a> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146673,"byte_end":146725,"line_start":326,"line_end":326,"column_start":1,"column_end":53}},{"value":"/     type Error = !;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146726,"byte_end":146749,"line_start":327,"line_end":327,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146750,"byte_end":146753,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<Admin<'a>, !> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146754,"byte_end":146839,"line_start":329,"line_end":329,"column_start":1,"column_end":86}},{"value":"/         let user = request.guard::<&User>()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146840,"byte_end":146889,"line_start":330,"line_end":330,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146890,"byte_end":146893,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/         if user.is_admin {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146894,"byte_end":146924,"line_start":332,"line_end":332,"column_start":1,"column_end":31}},{"value":"/             Outcome::Success(Admin { user })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146925,"byte_end":146973,"line_start":333,"line_end":333,"column_start":1,"column_end":49}},{"value":"/         } else {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146974,"byte_end":146994,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/             Outcome::Forward(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":146995,"byte_end":147031,"line_start":335,"line_end":335,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147032,"byte_end":147045,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147046,"byte_end":147055,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147056,"byte_end":147061,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147062,"byte_end":147069,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147070,"byte_end":147077,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147078,"byte_end":147081,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ Notice that these request guards provide access to *borrowed* data (`&'a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147082,"byte_end":147158,"line_start":342,"line_end":342,"column_start":1,"column_end":77}},{"value":"/ User` and `Admin<'a>`) as the data is now owned by the request's cache.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147159,"byte_end":147234,"line_start":343,"line_end":343,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147235,"byte_end":147238,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ [request-local state]: https://rocket.rs/v0.4/guide/state/#request-local-state","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147239,"byte_end":147321,"line_start":345,"line_end":345,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":642},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147436,"byte_end":147441,"line_start":349,"line_end":349,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::from_request::FromRequest::Error","value":"type Error: Debug;","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" The associated error to be returned if derivation fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned if derivation fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147366,"byte_end":147426,"line_start":348,"line_end":348,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147823,"byte_end":147835,"line_start":357,"line_end":357,"column_start":8,"column_end":20},"name":"from_request","qualname":"::request::from_request::FromRequest::from_request","value":"fn (request: &'a Request<'r>) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" Derives an instance of `Self` from the incoming request metadata.","sig":null,"attributes":[{"value":"/ Derives an instance of `Self` from the incoming request metadata.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147455,"byte_end":147524,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147529,"byte_end":147532,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If the derivation is successful, an outcome of `Success` is returned. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147537,"byte_end":147613,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ the derivation fails in an unrecoverable fashion, `Failure` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147618,"byte_end":147694,"line_start":354,"line_end":354,"column_start":5,"column_end":81}},{"value":"/ `Forward` is returned to indicate that the request should be forwarded","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147699,"byte_end":147773,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ to other matching routes, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147778,"byte_end":147815,"line_start":356,"line_end":356,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153670,"byte_end":153675,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"State","qualname":"::request::state::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" Request guard to retrieve managed state.","sig":null,"attributes":[{"value":"/ Request guard to retrieve managed state.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150426,"byte_end":150470,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150471,"byte_end":150474,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type can be used as a request guard to retrieve the state Rocket is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150475,"byte_end":150551,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ managing for some type `T`. This allows for the sharing of state across any","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150552,"byte_end":150631,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ number of handlers. A value for the given type must previously have been","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150632,"byte_end":150708,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ registered to be managed by Rocket via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150709,"byte_end":150751,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`Rocket::manage()`](::Rocket::manage()). The type being managed must be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150752,"byte_end":150828,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ thread safe and sendable across thread boundaries. In other words, it must","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150829,"byte_end":150907,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ implement [`Send`] + [`Sync`] + 'static`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150908,"byte_end":150953,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150954,"byte_end":150957,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150958,"byte_end":150971,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150972,"byte_end":150975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Imagine you have some configuration struct of the type `MyConfig` that you'd","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":150976,"byte_end":151056,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ like to initialize at start-up and later access it in several handlers. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151057,"byte_end":151136,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ following example does just this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151137,"byte_end":151174,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151175,"byte_end":151178,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151179,"byte_end":151190,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151191,"byte_end":151240,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151241,"byte_end":151280,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151281,"byte_end":151303,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151304,"byte_end":151307,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // In a real application, this would likely be more complex.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151308,"byte_end":151372,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ struct MyConfig {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151373,"byte_end":151394,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     user_val: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151395,"byte_end":151419,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151420,"byte_end":151425,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151426,"byte_end":151429,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151430,"byte_end":151445,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ fn index(state: State<MyConfig>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151446,"byte_end":151494,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     format!(\"The config value is: {}\", state.user_val)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151495,"byte_end":151553,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151554,"byte_end":151559,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151560,"byte_end":151563,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/raw\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151564,"byte_end":151582,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ fn raw_config_value<'r>(state: State<'r, MyConfig>) -> &'r str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151583,"byte_end":151651,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/     // use `inner()` to get a lifetime longer than `deref` gives us","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151652,"byte_end":151723,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/     state.inner().user_val.as_str()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151724,"byte_end":151763,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151764,"byte_end":151769,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151770,"byte_end":151773,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151774,"byte_end":151789,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/     let config = MyConfig {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151790,"byte_end":151821,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/         user_val: \"user input\".to_string()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151822,"byte_end":151868,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/     };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151869,"byte_end":151879,"line_start":48,"line_end":48,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151880,"byte_end":151883,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151884,"byte_end":151962,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151963,"byte_end":151987,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/         .mount(\"/\", routes![index, raw_config_value])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":151988,"byte_end":152045,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/         .manage(config)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152046,"byte_end":152073,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152074,"byte_end":152096,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152097,"byte_end":152104,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152105,"byte_end":152110,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152111,"byte_end":152118,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152119,"byte_end":152122,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Within Request Guards","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152123,"byte_end":152150,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152151,"byte_end":152154,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Because `State` is itself a request guard, managed state can be retrieved","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152155,"byte_end":152232,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ from another request guard's implementation. In the following code example,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152233,"byte_end":152312,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ `Item` retrieves the `MyConfig` managed state in its [`FromRequest`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152313,"byte_end":152385,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ implementation using the [`Request::guard()`] method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152386,"byte_end":152443,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152444,"byte_end":152447,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152448,"byte_end":152459,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152460,"byte_end":152482,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/ use rocket::request::{self, Request, FromRequest};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152483,"byte_end":152537,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152538,"byte_end":152541,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # struct MyConfig{ user_val: String };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152542,"byte_end":152584,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/ struct Item(String);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152585,"byte_end":152609,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152610,"byte_end":152613,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for Item {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152614,"byte_end":152661,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152662,"byte_end":152686,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152687,"byte_end":152690,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<Item, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152691,"byte_end":152772,"line_start":76,"line_end":76,"column_start":1,"column_end":82}},{"value":"/         request.guard::<State<MyConfig>>()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152773,"byte_end":152819,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/             .map(|my_config| Item(my_config.user_val.clone()))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152820,"byte_end":152886,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152887,"byte_end":152896,"line_start":79,"line_end":79,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152897,"byte_end":152902,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152903,"byte_end":152910,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152911,"byte_end":152914,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Testing with `State`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152915,"byte_end":152941,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152942,"byte_end":152945,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ When unit testing your application, you may find it necessary to manually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":152946,"byte_end":153023,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ construct a type of `State` to pass to your functions. To do so, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153024,"byte_end":153100,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ [`State::from()`] static method:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153101,"byte_end":153137,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153138,"byte_end":153141,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153142,"byte_end":153153,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153154,"byte_end":153203,"line_start":90,"line_end":90,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153204,"byte_end":153243,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153244,"byte_end":153266,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153267,"byte_end":153270,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ struct MyManagedState(usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153271,"byte_end":153304,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153305,"byte_end":153308,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153309,"byte_end":153324,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/ fn handler(state: State<MyManagedState>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153325,"byte_end":153381,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/     state.0.to_string()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153382,"byte_end":153409,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153410,"byte_end":153415,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153416,"byte_end":153419,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let rocket = rocket::ignite().manage(MyManagedState(127));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153420,"byte_end":153482,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/ let state = State::from(&rocket).expect(\"managing `MyManagedState`\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153483,"byte_end":153556,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(handler(state), \"127\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153557,"byte_end":153595,"line_start":103,"line_end":103,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153596,"byte_end":153603,"line_start":104,"line_end":104,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154682,"byte_end":154687,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"inner","qualname":"<State>::inner","value":"fn (&self) -> &'r T","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a borrow to the underlying value with a lifetime of `'r`.","sig":null,"attributes":[{"value":"/ Retrieve a borrow to the underlying value with a lifetime of `'r`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153769,"byte_end":153839,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153844,"byte_end":153847,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Using this method is typically unnecessary as `State` implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153852,"byte_end":153920,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/ [`Deref`] with a [`Deref::Target`] of `T`. This means Rocket will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153925,"byte_end":153994,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ automatically coerce a `State<T>` to an `&T` as required. This method","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153999,"byte_end":154072,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ should only be used when a longer lifetime is required.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154077,"byte_end":154136,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154141,"byte_end":154144,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154149,"byte_end":154162,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154167,"byte_end":154170,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154175,"byte_end":154186,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154191,"byte_end":154213,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154218,"byte_end":154221,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ struct MyConfig {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154226,"byte_end":154247,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     user_val: String","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154252,"byte_end":154276,"line_start":122,"line_end":122,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154281,"byte_end":154286,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154291,"byte_end":154294,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ // Use `inner()` to get a lifetime of `'r`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154299,"byte_end":154345,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/ fn handler1<'r>(config: State<'r, MyConfig>) -> &'r str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154350,"byte_end":154411,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/     &config.inner().user_val","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154416,"byte_end":154448,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154453,"byte_end":154458,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154463,"byte_end":154466,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ // Use the `Deref` implementation which coerces implicitly","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154471,"byte_end":154533,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ fn handler2(config: State<MyConfig>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154538,"byte_end":154590,"line_start":131,"line_end":131,"column_start":5,"column_end":57}},{"value":"/     config.user_val.clone()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154595,"byte_end":154626,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154631,"byte_end":154636,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154641,"byte_end":154648,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154653,"byte_end":154670,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155456,"byte_end":155460,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"from","qualname":"<State>::from","value":"fn (rocket: &'r Rocket) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the managed state value in `rocket` for the type `T` if it is\n being managed by `rocket`. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ Returns the managed state value in `rocket` for the type `T` if it is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154732,"byte_end":154805,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ being managed by `rocket`. Otherwise, returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154810,"byte_end":154867,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154872,"byte_end":154875,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154880,"byte_end":154893,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154898,"byte_end":154901,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154906,"byte_end":154917,"line_start":145,"line_end":145,"column_start":5,"column_end":16}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154922,"byte_end":154944,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154949,"byte_end":154952,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154957,"byte_end":154988,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/ struct Managed(usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":154993,"byte_end":155019,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155024,"byte_end":155027,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155032,"byte_end":155063,"line_start":151,"line_end":151,"column_start":5,"column_end":36}},{"value":"/ struct Unmanaged(usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155068,"byte_end":155096,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155101,"byte_end":155104,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let rocket = rocket::ignite().manage(Managed(7));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155109,"byte_end":155162,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155167,"byte_end":155170,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let state: Option<State<Managed>> = State::from(&rocket);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155175,"byte_end":155236,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(state.map(|s| s.inner()), Some(&Managed(7)));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155241,"byte_end":155301,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155306,"byte_end":155309,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let state: Option<State<Unmanaged>> = State::from(&rocket);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155314,"byte_end":155377,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(state, None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155382,"byte_end":155410,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155415,"byte_end":155422,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155427,"byte_end":155444,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2726},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157721,"byte_end":157726,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Query","qualname":"::request::query::Query","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over form items in a query string.","sig":null,"attributes":[{"value":"/ Iterator over form items in a query string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156279,"byte_end":156326,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156327,"byte_end":156330,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The `Query` type exists to separate, at the type level, _form_ form items","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156331,"byte_end":156408,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ ([`FormItems`]) from _query_ form items (`Query`). A value of type `Query`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156409,"byte_end":156487,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ is passed in to implementations of the [`FromQuery`] trait by Rocket's code","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156488,"byte_end":156567,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ generation for every trailing query parameter, `<params..>` below:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156568,"byte_end":156638,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156639,"byte_end":156642,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156643,"byte_end":156654,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156655,"byte_end":156704,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156705,"byte_end":156744,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156745,"byte_end":156750,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ # use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156751,"byte_end":156783,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/ # #[derive(FromForm)] struct Q { foo: usize }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156784,"byte_end":156833,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ # type T = Form<Q>;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156834,"byte_end":156857,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156858,"byte_end":156863,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ #[get(\"/user?<params..>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156864,"byte_end":156894,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ fn user(params: T) { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156895,"byte_end":156931,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156932,"byte_end":156951,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156952,"byte_end":156959,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156960,"byte_end":156963,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156964,"byte_end":156975,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156976,"byte_end":156979,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A value of type `Query` can only be used as an iterator over values of type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":156980,"byte_end":157059,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ [`FormItem`]. As such, its usage is equivalent to that of [`FormItems`], and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157060,"byte_end":157140,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ we refer you to its documentation for further details.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157141,"byte_end":157199,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157200,"byte_end":157203,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157204,"byte_end":157218,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157219,"byte_end":157222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157223,"byte_end":157234,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use rocket::request::Query;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157235,"byte_end":157266,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157267,"byte_end":157270,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # use rocket::request::FromQuery;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157271,"byte_end":157308,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157309,"byte_end":157314,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # struct MyType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157315,"byte_end":157335,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ # type Result = ::std::result::Result<MyType, ()>;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157336,"byte_end":157390,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157391,"byte_end":157396,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ # impl<'q> FromQuery<'q> for MyType {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157397,"byte_end":157438,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ #    type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157439,"byte_end":157464,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157465,"byte_end":157470,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ fn from_query(query: Query) -> Result {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157471,"byte_end":157514,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/     for item in query {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157515,"byte_end":157542,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/         println!(\"query key/value: ({}, {})\", item.key, item.value);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157543,"byte_end":157615,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157616,"byte_end":157625,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157626,"byte_end":157629,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157630,"byte_end":157644,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ #   Ok(MyType)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157645,"byte_end":157663,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157664,"byte_end":157669,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157670,"byte_end":157677,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157678,"byte_end":157685,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":727},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162932,"byte_end":162941,"line_start":194,"line_end":194,"column_start":11,"column_end":20},"name":"FromQuery","qualname":"::request::query::FromQuery","value":"FromQuery<'q>: Sized","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"decl_id":null,"docs":" Trait implemented by query guards to derive a value from a query string.","sig":null,"attributes":[{"value":"/ Trait implemented by query guards to derive a value from a query string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158062,"byte_end":158138,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158139,"byte_end":158142,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Query Guards","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158143,"byte_end":158161,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158162,"byte_end":158165,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ A query guard operates on multiple items of a request's query string. It","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158166,"byte_end":158242,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ validates and optionally converts a query string into another value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158243,"byte_end":158315,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/ Validation and parsing/conversion is implemented through `FromQuery`. In","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158316,"byte_end":158392,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ other words, every type that implements `FromQuery` is a query guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158393,"byte_end":158466,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158467,"byte_end":158470,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Query guards are used as the target of trailing query parameters, which","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158471,"byte_end":158546,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ syntactically take the form `<param..>` after a `?` in a route's path. For","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158547,"byte_end":158625,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ example, the parameter `user` is a trailing query parameter in the following","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158626,"byte_end":158706,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/ route:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158707,"byte_end":158717,"line_start":82,"line_end":82,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158718,"byte_end":158721,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158722,"byte_end":158733,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158734,"byte_end":158783,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158784,"byte_end":158823,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/ use rocket::request::Form;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158824,"byte_end":158854,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158855,"byte_end":158858,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromForm)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158859,"byte_end":158882,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ struct User {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158883,"byte_end":158900,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158901,"byte_end":158922,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     account: usize,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158923,"byte_end":158946,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158947,"byte_end":158952,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158953,"byte_end":158956,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/item?<id>&<user..>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158957,"byte_end":158990,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/ fn item(id: usize, user: Form<User>) { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":158991,"byte_end":159045,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159046,"byte_end":159065,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159066,"byte_end":159073,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159074,"byte_end":159077,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The `FromQuery` implementation of `Form<User>` will be passed in a [`Query`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159078,"byte_end":159158,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/ that iterates over all of the query items that don't have the key `id`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159159,"byte_end":159233,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ (because of the `<id>` dynamic query parameter). For posterity, note that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159234,"byte_end":159311,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ the `value` of an `id=value` item in a query string will be parsed as a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159312,"byte_end":159387,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ `usize` and passed in to `item` as `id`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159388,"byte_end":159432,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159433,"byte_end":159436,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Forwarding","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159437,"byte_end":159453,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159454,"byte_end":159457,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ If the conversion fails, signaled by returning an `Err` from a `FromQuery`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159458,"byte_end":159536,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ implementation, the incoming request will be forwarded to the next matching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159537,"byte_end":159616,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ route, if any. For instance, in the `item` route above, if a query string is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159617,"byte_end":159697,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ missing either a `name` or `account` key/value pair, or there is a query","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159698,"byte_end":159774,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ item with a key that is not `id`, `name`, or `account`, the request will be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159775,"byte_end":159854,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ forwarded. Note that this strictness is imposed by the [`Form`] type. As an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159855,"byte_end":159934,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/ example, using the [`LenientForm`] type instead would allow extra form items","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":159935,"byte_end":160015,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ to be ignored without forwarding. Alternatively, _not_ having a trailing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160016,"byte_end":160092,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ parameter at all would result in the same.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160093,"byte_end":160139,"line_start":116,"line_end":116,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160140,"byte_end":160143,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160144,"byte_end":160174,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160175,"byte_end":160178,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `FromQuery` for several standard types. Their behavior is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160179,"byte_end":160258,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ documented here.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160259,"byte_end":160279,"line_start":121,"line_end":121,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160280,"byte_end":160283,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/   * **Form&lt;T>** _where_ **T: FromForm**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160284,"byte_end":160330,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160331,"byte_end":160334,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     Parses the query as a strict form, where each key is mapped to a field","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160335,"byte_end":160413,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/     in `T`. See [`Form`] for more information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160414,"byte_end":160464,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160465,"byte_end":160468,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/   * **LenientForm&lt;T>** _where_ **T: FromForm**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160469,"byte_end":160522,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160523,"byte_end":160526,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/     Parses the query as a lenient form, where each key is mapped to a field","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160527,"byte_end":160606,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/     in `T`. See [`LenientForm`] for more information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160607,"byte_end":160664,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160665,"byte_end":160668,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>** _where_ **T: FromQuery**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160669,"byte_end":160718,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160719,"byte_end":160722,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160723,"byte_end":160781,"line_start":135,"line_end":135,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160782,"byte_end":160785,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/     The query is parsed by `T`'s `FromQuery` implementation. If the parse","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160786,"byte_end":160863,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/     succeeds, a `Some(parsed_value)` is returned. Otherwise, a `None` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160864,"byte_end":160940,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/     returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160941,"byte_end":160958,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160959,"byte_end":160962,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, T::Error>** _where_ **T: FromQuery**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":160963,"byte_end":161022,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161023,"byte_end":161026,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161027,"byte_end":161085,"line_start":143,"line_end":143,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161086,"byte_end":161089,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     The path segment is parsed by `T`'s `FromQuery` mplementation. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161090,"byte_end":161164,"line_start":145,"line_end":145,"column_start":1,"column_end":75}},{"value":"/     returned `Result` value is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161165,"byte_end":161209,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161210,"byte_end":161213,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161214,"byte_end":161227,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161228,"byte_end":161231,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Explicitly implementing `FromQuery` should be rare. For most use-cases, a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161232,"byte_end":161309,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ query guard of `Form<T>` or `LenientForm<T>`, coupled with deriving","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161310,"byte_end":161381,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ `FromForm` (as in the previous example) will suffice. For special cases","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161382,"byte_end":161457,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/ however, an implementation of `FromQuery` may be warranted.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161458,"byte_end":161521,"line_start":153,"line_end":153,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161522,"byte_end":161525,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Consider a contrived scheme where we expect to recieve one query key, `key`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161526,"byte_end":161606,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"/ three times and wish to take the middle value. For instance, consider the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161607,"byte_end":161684,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ query:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161685,"byte_end":161695,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161696,"byte_end":161699,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161700,"byte_end":161711,"line_start":159,"line_end":159,"column_start":1,"column_end":12}},{"value":"/ key=first_value&key=second_value&key=third_value","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161712,"byte_end":161764,"line_start":160,"line_end":160,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161765,"byte_end":161772,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161773,"byte_end":161776,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ We wish to extract `second_value` from this query into a `Contrived` struct.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161777,"byte_end":161857,"line_start":163,"line_end":163,"column_start":1,"column_end":81}},{"value":"/ Because `Form` and `LenientForm` will take the _last_ value (`third_value`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161858,"byte_end":161936,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"/ here) and don't check that there are exactly three keys named `key`, we","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":161937,"byte_end":162012,"line_start":165,"line_end":165,"column_start":1,"column_end":76}},{"value":"/ cannot make use of them and must implement `FromQuery` manually. Such an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162013,"byte_end":162089,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ implementation might look like:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162090,"byte_end":162125,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162126,"byte_end":162129,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162130,"byte_end":162141,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162142,"byte_end":162171,"line_start":170,"line_end":170,"column_start":1,"column_end":30}},{"value":"/ use rocket::request::{Query, FromQuery};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162172,"byte_end":162216,"line_start":171,"line_end":171,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162217,"byte_end":162220,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ /// Our custom query guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162221,"byte_end":162252,"line_start":173,"line_end":173,"column_start":1,"column_end":32}},{"value":"/ struct Contrived<'q>(&'q RawStr);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162253,"byte_end":162290,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162291,"byte_end":162294,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ impl<'q> FromQuery<'q> for Contrived<'q> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162295,"byte_end":162341,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/     /// The number of `key`s we actually saw.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162342,"byte_end":162391,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     type Error = usize;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162392,"byte_end":162419,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162420,"byte_end":162423,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     fn from_query(query: Query<'q>) -> Result<Self, Self::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162424,"byte_end":162494,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/         let mut key_items = query.filter(|i| i.key == \"key\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162495,"byte_end":162560,"line_start":181,"line_end":181,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162561,"byte_end":162564,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/         // This is cloning an iterator, which is cheap.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162565,"byte_end":162624,"line_start":183,"line_end":183,"column_start":1,"column_end":60}},{"value":"/         let count = key_items.clone().count();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162625,"byte_end":162675,"line_start":184,"line_end":184,"column_start":1,"column_end":51}},{"value":"/         if count != 3 {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162676,"byte_end":162703,"line_start":185,"line_end":185,"column_start":1,"column_end":28}},{"value":"/             return Err(count);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162704,"byte_end":162738,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162739,"byte_end":162752,"line_start":187,"line_end":187,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162753,"byte_end":162756,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/         // The `ok_or` gets us a `Result`. We will never see `Err(0)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162757,"byte_end":162831,"line_start":189,"line_end":189,"column_start":1,"column_end":75}},{"value":"/         key_items.map(|i| Contrived(i.value)).nth(1).ok_or(0)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162832,"byte_end":162897,"line_start":190,"line_end":190,"column_start":1,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162898,"byte_end":162907,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162908,"byte_end":162913,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162914,"byte_end":162921,"line_start":193,"line_end":193,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":729},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163037,"byte_end":163042,"line_start":196,"line_end":196,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::query::FromQuery::Error","value":"type Error;","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" The associated error to be returned if parsing/validation fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned if parsing/validation fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162959,"byte_end":163027,"line_start":195,"line_end":195,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163178,"byte_end":163188,"line_start":200,"line_end":200,"column_start":8,"column_end":18},"name":"from_query","qualname":"::request::query::FromQuery::from_query","value":"fn (query: Query<'q>) -> Result<Self, Self::Error>","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Parses and validates an instance of `Self` from a query or returns an\n `Error` if parsing or validation fails.\n","sig":null,"attributes":[{"value":"/ Parses and validates an instance of `Self` from a query or returns an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163049,"byte_end":163122,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ `Error` if parsing or validation fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163127,"byte_end":163170,"line_start":199,"line_end":199,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":778},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response","qualname":"::response","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":836},{"krate":0,"index":858},{"krate":0,"index":906},{"krate":0,"index":935},{"krate":0,"index":1054},{"krate":0,"index":1069},{"krate":0,"index":1121},{"krate":0,"index":1134},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":" Types and traits to build and send responses.","sig":null,"attributes":[{"value":"! Types and traits to build and send responses.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164138,"byte_end":164187,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164188,"byte_end":164191,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The return type of a Rocket handler can be any type that implements the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164192,"byte_end":164267,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! [`Responder`](::response::Responder) trait, which means that the type knows","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164268,"byte_end":164347,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! how to generate a [`Response`]. Among other things, this module contains","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164348,"byte_end":164424,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! several such types.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164425,"byte_end":164448,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164449,"byte_end":164452,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Composing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164453,"byte_end":164468,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164469,"byte_end":164472,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Many of the built-in `Responder` types _chain_ responses: they take in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164473,"byte_end":164547,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! another `Responder` and add, remove, or change information in the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164548,"byte_end":164627,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! In other words, many `Responder` types are built to compose well. As a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164628,"byte_end":164702,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"! result, you'll often have types of the form `A<B<C>>` consisting of three","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164703,"byte_end":164780,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! `Responder`s `A`, `B`, and `C`. This is normal and encouraged as the type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164781,"byte_end":164858,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"! names typically illustrate the intended response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164859,"byte_end":164912,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164913,"byte_end":164916,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Contrib","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164917,"byte_end":164930,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164931,"byte_end":164934,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The [`contrib` crate] contains several useful `Responder`s including","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":164935,"byte_end":165007,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"! [`Template`] and [`Json`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165008,"byte_end":165038,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165039,"byte_end":165042,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! [`contrib` crate]: ../../rocket_contrib","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165043,"byte_end":165086,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"! [`Template`]: ../../rocket_contrib/templates/struct.Template.html","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165087,"byte_end":165156,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"! [`Json`]: ../../rocket_contrib/json/struct.Json.html","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165157,"byte_end":165213,"line_start":24,"line_end":24,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":794},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172408,"byte_end":172417,"line_start":183,"line_end":183,"column_start":11,"column_end":20},"name":"Responder","qualname":"::response::responder::Responder","value":"Responder<'r>","parent":null,"children":[{"krate":0,"index":796}],"decl_id":null,"docs":" Trait implemented by types that generate responses for clients.","sig":null,"attributes":[{"value":"/ Trait implemented by types that generate responses for clients.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166042,"byte_end":166109,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166110,"byte_end":166113,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait can be used as the return type of a handler,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166114,"byte_end":166194,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ as illustrated below with `T`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166195,"byte_end":166229,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166230,"byte_end":166233,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166234,"byte_end":166245,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166246,"byte_end":166295,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166296,"byte_end":166335,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ # type T = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166336,"byte_end":166354,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166355,"byte_end":166360,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166361,"byte_end":166376,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/ fn index() -> T { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166377,"byte_end":166410,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166411,"byte_end":166418,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166419,"byte_end":166422,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In this example, `T` can be any type, as long as it implements `Responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166423,"byte_end":166502,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166503,"byte_end":166506,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Return Value","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166507,"byte_end":166525,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166526,"byte_end":166529,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A `Responder` returns an `Ok(Response)` or an `Err(Status)`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166530,"byte_end":166594,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166595,"byte_end":166598,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/   * An `Ok` variant means that the `Responder` was successful in generating","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166599,"byte_end":166678,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/     a `Response`. The `Response` will be written out to the client.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166679,"byte_end":166750,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166751,"byte_end":166754,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/   * An `Err` variant means that the `Responder` could not or did not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166755,"byte_end":166827,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/     generate a `Response`. The contained `Status` will be used to find the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166828,"byte_end":166906,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/     relevant error catcher which then generates an error response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166907,"byte_end":166977,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166978,"byte_end":166981,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":166982,"byte_end":167012,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167013,"byte_end":167016,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `Responder` for several standard library types. Their","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167017,"byte_end":167092,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ behavior is documented here. Note that the `Result` implementation is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167093,"byte_end":167166,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ overloaded, allowing for two `Responder`s to be used at once, depending on","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167167,"byte_end":167245,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ the variant.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167246,"byte_end":167262,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167263,"byte_end":167266,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   * **&str**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167267,"byte_end":167283,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167284,"byte_end":167287,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     Sets the `Content-Type` to `text/plain`. The string is used as the body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167288,"byte_end":167367,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/     of the response, which is fixed size and not streamed. To stream a raw","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167368,"byte_end":167446,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/     string, use `Stream::from(Cursor::new(string))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167447,"byte_end":167503,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167504,"byte_end":167507,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/   * **String**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167508,"byte_end":167526,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167527,"byte_end":167530,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     Sets the `Content-Type` to `text/plain`. The string is used as the body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167531,"byte_end":167610,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/     of the response, which is fixed size and not streamed. To stream a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167611,"byte_end":167685,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/     string, use `Stream::from(Cursor::new(string))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167686,"byte_end":167742,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167743,"byte_end":167746,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/   * **&\\[u8\\]**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167747,"byte_end":167766,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167767,"byte_end":167770,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     Sets the `Content-Type` to `application/octet-stream`. The slice","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167771,"byte_end":167843,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/     is used as the body of the response, which is fixed size and not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167844,"byte_end":167916,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     streamed. To stream a slice of bytes, use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167917,"byte_end":167966,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/     `Stream::from(Cursor::new(data))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":167967,"byte_end":168009,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168010,"byte_end":168013,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   * **Vec&lt;u8>**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168014,"byte_end":168036,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168037,"byte_end":168040,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     Sets the `Content-Type` to `application/octet-stream`. The vector's data","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168041,"byte_end":168121,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/     is used as the body of the response, which is fixed size and not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168122,"byte_end":168194,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/     streamed. To stream a vector of bytes, use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168195,"byte_end":168245,"line_start":66,"line_end":66,"column_start":1,"column_end":51}},{"value":"/     `Stream::from(Cursor::new(vec))`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168246,"byte_end":168287,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168288,"byte_end":168291,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/   * **File**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168292,"byte_end":168308,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168309,"byte_end":168312,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     Responds with a streamed body containing the data in the `File`. No","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168313,"byte_end":168388,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/     `Content-Type` is set. To automatically have a `Content-Type` set based","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168389,"byte_end":168468,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     on the file's extension, use [`NamedFile`](::response::NamedFile).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168469,"byte_end":168543,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168544,"byte_end":168547,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/   * **()**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168548,"byte_end":168562,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168563,"byte_end":168566,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     Responds with an empty body. No `Content-Type` is set.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168567,"byte_end":168629,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168630,"byte_end":168633,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168634,"byte_end":168658,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168659,"byte_end":168662,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     If the `Option` is `Some`, the wrapped responder is used to respond to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168663,"byte_end":168741,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/     the client. Otherwise, an `Err` with status **404 Not Found** is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168742,"byte_end":168814,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/     returned and a warning is printed to the console.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168815,"byte_end":168872,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168873,"byte_end":168876,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, E>** _where_ **E: Debug**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168877,"byte_end":168925,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168926,"byte_end":168929,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     If the `Result` is `Ok`, the wrapped responder is used to respond to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":168930,"byte_end":169010,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/     client. Otherwise, an `Err` with status **500 Internal Server Error** is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169011,"byte_end":169091,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/     returned and the error is printed to the console using the `Debug`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169092,"byte_end":169166,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/     implementation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169167,"byte_end":169190,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169191,"byte_end":169194,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, E>** _where_ **E: Debug + Responder**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169195,"byte_end":169255,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169256,"byte_end":169259,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     If the `Result` is `Ok`, the wrapped `Ok` responder is used to respond","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169260,"byte_end":169338,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/     to the client. If the `Result` is `Err`, the wrapped `Err` responder is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169339,"byte_end":169418,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/     used to respond to the client.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169419,"byte_end":169457,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169458,"byte_end":169461,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Implementation Tips","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169462,"byte_end":169487,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169488,"byte_end":169491,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This section describes a few best practices to take into account when","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169492,"byte_end":169565,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ implementing `Responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169566,"byte_end":169595,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169596,"byte_end":169599,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ## Debug","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169600,"byte_end":169612,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169613,"byte_end":169616,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ A type implementing `Responder` should implement the `Debug` trait when","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169617,"byte_end":169692,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"/ possible. This is because the `Responder` implementation for `Result`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169693,"byte_end":169766,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ requires its `Err` type to implement `Debug`. Therefore, a type implementing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169767,"byte_end":169847,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"/ `Debug` can more easily be composed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169848,"byte_end":169888,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169889,"byte_end":169892,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Joining and Merging","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169893,"byte_end":169919,"line_start":110,"line_end":110,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169920,"byte_end":169923,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ When chaining/wrapping other `Responder`s, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169924,"byte_end":169978,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/ [`merge()`](Response::merge()) or [`join()`](Response::join()) methods on","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":169979,"byte_end":170056,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ the `Response` or `ResponseBuilder` struct. Ensure that you document the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170057,"byte_end":170133,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/ merging or joining behavior appropriately.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170134,"byte_end":170180,"line_start":115,"line_end":115,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170181,"byte_end":170184,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Inspecting Requests","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170185,"byte_end":170211,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170212,"byte_end":170215,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ A `Responder` has access to the request it is responding to. Even so, you","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170216,"byte_end":170293,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ should avoid using the `Request` value as much as possible. This is because","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170294,"byte_end":170373,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ using the `Request` object makes your responder _impure_, and so the use of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170374,"byte_end":170453,"line_start":121,"line_end":121,"column_start":1,"column_end":80}},{"value":"/ the type as a `Responder` has less intrinsic meaning associated with it. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170454,"byte_end":170533,"line_start":122,"line_end":122,"column_start":1,"column_end":80}},{"value":"/ the `Responder` were pure, however, it would always respond in the same manner,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170534,"byte_end":170617,"line_start":123,"line_end":123,"column_start":1,"column_end":84}},{"value":"/ regardless of the incoming request. Thus, knowing the type is sufficient to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170618,"byte_end":170697,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ fully determine its functionality.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170698,"byte_end":170736,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170737,"byte_end":170740,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170741,"byte_end":170754,"line_start":127,"line_end":127,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170755,"byte_end":170758,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Say that you have a custom type, `Person`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170759,"byte_end":170805,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170806,"byte_end":170809,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170810,"byte_end":170821,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170822,"byte_end":170825,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170826,"byte_end":170851,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/ struct Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170852,"byte_end":170871,"line_start":134,"line_end":134,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170872,"byte_end":170893,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/     age: u16","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170894,"byte_end":170910,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170911,"byte_end":170916,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170917,"byte_end":170924,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170925,"byte_end":170928,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ You'd like to use `Person` as a `Responder` so that you can return a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":170929,"byte_end":171001,"line_start":140,"line_end":140,"column_start":1,"column_end":73}},{"value":"/ `Person` directly from a handler:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171002,"byte_end":171039,"line_start":141,"line_end":141,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171040,"byte_end":171043,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171044,"byte_end":171062,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"/ #[get(\"/person/<id>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171063,"byte_end":171089,"line_start":144,"line_end":144,"column_start":1,"column_end":27}},{"value":"/ fn person(id: usize) -> Option<Person> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171090,"byte_end":171134,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/     Person::from_id(id)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171135,"byte_end":171162,"line_start":146,"line_end":146,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171163,"byte_end":171168,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171169,"byte_end":171176,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171177,"byte_end":171180,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ You want the `Person` responder to set two header fields: `X-Person-Name`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171181,"byte_end":171258,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ and `X-Person-Age` as well as supply a custom representation of the object","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171259,"byte_end":171337,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ (`Content-Type: application/x-person`) in the body of the response. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171338,"byte_end":171413,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/ following `Responder` implementation accomplishes this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171414,"byte_end":171473,"line_start":153,"line_end":153,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171474,"byte_end":171477,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171478,"byte_end":171489,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171490,"byte_end":171539,"line_start":156,"line_end":156,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171540,"byte_end":171579,"line_start":157,"line_end":157,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171580,"byte_end":171585,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171586,"byte_end":171608,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/ # struct Person { name: String, age: u16 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171609,"byte_end":171655,"line_start":160,"line_end":160,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171656,"byte_end":171661,"line_start":161,"line_end":161,"column_start":1,"column_end":6}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171662,"byte_end":171686,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171687,"byte_end":171690,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ use rocket::request::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171691,"byte_end":171724,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/ use rocket::response::{self, Response, Responder};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171725,"byte_end":171779,"line_start":165,"line_end":165,"column_start":1,"column_end":55}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171780,"byte_end":171814,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171815,"byte_end":171818,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ impl<'r> Responder<'r> for Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171819,"byte_end":171858,"line_start":168,"line_end":168,"column_start":1,"column_end":40}},{"value":"/     fn respond_to(self, _: &Request) -> response::Result<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171859,"byte_end":171925,"line_start":169,"line_end":169,"column_start":1,"column_end":67}},{"value":"/         Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171926,"byte_end":171955,"line_start":170,"line_end":170,"column_start":1,"column_end":30}},{"value":"/             .sized_body(Cursor::new(format!(\"{}:{}\", self.name, self.age)))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":171956,"byte_end":172035,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/             .raw_header(\"X-Person-Name\", self.name)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172036,"byte_end":172091,"line_start":172,"line_end":172,"column_start":1,"column_end":56}},{"value":"/             .raw_header(\"X-Person-Age\", self.age.to_string())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172092,"byte_end":172157,"line_start":173,"line_end":173,"column_start":1,"column_end":66}},{"value":"/             .header(ContentType::new(\"application\", \"x-person\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172158,"byte_end":172226,"line_start":174,"line_end":174,"column_start":1,"column_end":69}},{"value":"/             .ok()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172227,"byte_end":172248,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172249,"byte_end":172258,"line_start":176,"line_end":176,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172259,"byte_end":172264,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172265,"byte_end":172270,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ # #[get(\"/person\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172271,"byte_end":172294,"line_start":179,"line_end":179,"column_start":1,"column_end":24}},{"value":"/ # fn person() -> Person { Person { name: \"a\".to_string(), age: 20 } }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172295,"byte_end":172368,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172369,"byte_end":172389,"line_start":181,"line_end":181,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172390,"byte_end":172397,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":173007,"byte_end":173017,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"respond_to","qualname":"::response::responder::Responder::respond_to","value":"fn (self, request: &Request) -> response::Result<'r>","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" Returns `Ok` if a `Response` could be generated successfully. Otherwise,\n returns an `Err` with a failing `Status`.","sig":null,"attributes":[{"value":"/ Returns `Ok` if a `Response` could be generated successfully. Otherwise,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172428,"byte_end":172504,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ returns an `Err` with a failing `Status`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172509,"byte_end":172554,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172559,"byte_end":172562,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The `request` parameter is the `Request` that this `Responder` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172567,"byte_end":172636,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/ responding to.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172641,"byte_end":172659,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172664,"byte_end":172667,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ When using Rocket's code generation, if an `Ok(Response)` is returned,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172672,"byte_end":172746,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ the response will be written out to the client. If an `Err(Status)` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172751,"byte_end":172825,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ returned, the error catcher for the given status is retrieved and called","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172830,"byte_end":172906,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ to generate a final error response, which is then written out to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172911,"byte_end":172983,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ client.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":172988,"byte_end":172999,"line_start":194,"line_end":194,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2736},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179782,"byte_end":179790,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"Redirect","qualname":"::response::redirect::Redirect","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty redirect response to a given URL.","sig":null,"attributes":[{"value":"/ An empty redirect response to a given URL.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178549,"byte_end":178595,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178596,"byte_end":178599,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type simplifies returning a redirect response to the client.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178600,"byte_end":178669,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178670,"byte_end":178673,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178674,"byte_end":178685,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178686,"byte_end":178689,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All constructors accept a generic type of `T: TryInto<Uri<'static>>`. Among","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178690,"byte_end":178769,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the candidate types are:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178770,"byte_end":178798,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178799,"byte_end":178802,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/   * `String`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178803,"byte_end":178819,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/   * `&'static str`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178820,"byte_end":178842,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/   * [`Origin`](::http::uri::Origin)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178843,"byte_end":178882,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/   * [`Authority`](::http::uri::Authority)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178883,"byte_end":178928,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/   * [`Absolute`](::http::uri::Absolute)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178929,"byte_end":178972,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/   * [`Uri`](::http::uri::Uri)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":178973,"byte_end":179006,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179007,"byte_end":179010,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Any non-`'static` strings must first be allocated using `.to_string()` or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179011,"byte_end":179088,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ similar before being passed to a `Redirect` constructor. When redirecting to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179089,"byte_end":179169,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ a route, _always_ use [`uri!`] to construct a valid [`Origin`]:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179170,"byte_end":179237,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179238,"byte_end":179241,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179242,"byte_end":179253,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179254,"byte_end":179303,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179304,"byte_end":179343,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179344,"byte_end":179379,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179380,"byte_end":179383,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/hello/<name>/<age>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179384,"byte_end":179417,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/ fn hello(name: String, age: u8) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179418,"byte_end":179465,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/     format!(\"Hello, {} year old named {}!\", age, name)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179466,"byte_end":179524,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179525,"byte_end":179530,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179531,"byte_end":179534,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/hi/<name>/<age>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179535,"byte_end":179565,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ fn hi(name: String, age: u8) -> Redirect {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179566,"byte_end":179612,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Redirect::to(uri!(hello: name, age))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179613,"byte_end":179657,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179658,"byte_end":179663,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179664,"byte_end":179671,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179672,"byte_end":179675,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Origin`]: ::http::uri::Origin","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179676,"byte_end":179711,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ [`uri!`]: ../../rocket/macro.uri.html","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179712,"byte_end":179753,"line_start":45,"line_end":45,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180405,"byte_end":180407,"line_start":64,"line_end":64,"column_start":12,"column_end":14},"name":"to","qualname":"<Redirect>::to","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"see other\" (303) redirect response. This is the\n typical response when redirecting a user to another page. This type of\n redirect indicates that the client should look elsewhere, but always via\n a `GET` request, for a given resource.","sig":null,"attributes":[{"value":"/ Construct a temporary \"see other\" (303) redirect response. This is the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179843,"byte_end":179917,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ typical response when redirecting a user to another page. This type of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179922,"byte_end":179996,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ redirect indicates that the client should look elsewhere, but always via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180001,"byte_end":180077,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ a `GET` request, for a given resource.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180082,"byte_end":180124,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180129,"byte_end":180132,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180137,"byte_end":180151,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180156,"byte_end":180159,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180164,"byte_end":180175,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180180,"byte_end":180215,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180220,"byte_end":180223,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # let query = \"foo\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180228,"byte_end":180252,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/ let redirect = Redirect::to(\"/other_url\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180257,"byte_end":180303,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ let redirect = Redirect::to(format!(\"https://google.com/{}\", query));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180308,"byte_end":180381,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180386,"byte_end":180393,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181129,"byte_end":181138,"line_start":83,"line_end":83,"column_start":11,"column_end":20},"name":"temporary","qualname":"<Redirect>::temporary","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"temporary\" (307) redirect response. This response instructs\n the client to reissue the current request to a different URL,\n maintaining the contents of the request identically. This means that,\n for example, a `POST` request will be resent, contents included, to the\n requested URL.","sig":null,"attributes":[{"value":"/ Construct a \"temporary\" (307) redirect response. This response instructs","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180522,"byte_end":180598,"line_start":68,"line_end":68,"column_start":4,"column_end":80}},{"value":"/ the client to reissue the current request to a different URL,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180602,"byte_end":180667,"line_start":69,"line_end":69,"column_start":4,"column_end":69}},{"value":"/ maintaining the contents of the request identically. This means that,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180671,"byte_end":180744,"line_start":70,"line_end":70,"column_start":4,"column_end":77}},{"value":"/ for example, a `POST` request will be resent, contents included, to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180748,"byte_end":180823,"line_start":71,"line_end":71,"column_start":4,"column_end":79}},{"value":"/ requested URL.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180827,"byte_end":180845,"line_start":72,"line_end":72,"column_start":4,"column_end":22}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180849,"byte_end":180852,"line_start":73,"line_end":73,"column_start":4,"column_end":7}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180856,"byte_end":180870,"line_start":74,"line_end":74,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180874,"byte_end":180877,"line_start":75,"line_end":75,"column_start":4,"column_end":7}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180881,"byte_end":180892,"line_start":76,"line_end":76,"column_start":4,"column_end":15}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180896,"byte_end":180931,"line_start":77,"line_end":77,"column_start":4,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180935,"byte_end":180938,"line_start":78,"line_end":78,"column_start":4,"column_end":7}},{"value":"/ # let query = \"foo\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180942,"byte_end":180966,"line_start":79,"line_end":79,"column_start":4,"column_end":28}},{"value":"/ let redirect = Redirect::temporary(\"/other_url\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":180970,"byte_end":181023,"line_start":80,"line_end":80,"column_start":4,"column_end":57}},{"value":"/ let redirect = Redirect::temporary(format!(\"https://google.com/{}\", query));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181027,"byte_end":181107,"line_start":81,"line_end":81,"column_start":4,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181111,"byte_end":181118,"line_start":82,"line_end":82,"column_start":4,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181990,"byte_end":181999,"line_start":103,"line_end":103,"column_start":11,"column_end":20},"name":"permanent","qualname":"<Redirect>::permanent","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"permanent\" (308) redirect response. This redirect must only\n be used for permanent redirects as it is cached by clients. This\n response instructs the client to reissue requests for the current URL to\n a different URL, now and in the future, maintaining the contents of the\n request identically. This means that, for example, a `POST` request will\n be resent, contents included, to the requested URL.","sig":null,"attributes":[{"value":"/ Construct a \"permanent\" (308) redirect response. This redirect must only","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181260,"byte_end":181336,"line_start":87,"line_end":87,"column_start":4,"column_end":80}},{"value":"/ be used for permanent redirects as it is cached by clients. This","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181340,"byte_end":181408,"line_start":88,"line_end":88,"column_start":4,"column_end":72}},{"value":"/ response instructs the client to reissue requests for the current URL to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181412,"byte_end":181488,"line_start":89,"line_end":89,"column_start":4,"column_end":80}},{"value":"/ a different URL, now and in the future, maintaining the contents of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181492,"byte_end":181567,"line_start":90,"line_end":90,"column_start":4,"column_end":79}},{"value":"/ request identically. This means that, for example, a `POST` request will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181571,"byte_end":181647,"line_start":91,"line_end":91,"column_start":4,"column_end":80}},{"value":"/ be resent, contents included, to the requested URL.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181651,"byte_end":181706,"line_start":92,"line_end":92,"column_start":4,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181710,"byte_end":181713,"line_start":93,"line_end":93,"column_start":4,"column_end":7}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181717,"byte_end":181731,"line_start":94,"line_end":94,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181735,"byte_end":181738,"line_start":95,"line_end":95,"column_start":4,"column_end":7}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181742,"byte_end":181753,"line_start":96,"line_end":96,"column_start":4,"column_end":15}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181757,"byte_end":181792,"line_start":97,"line_end":97,"column_start":4,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181796,"byte_end":181799,"line_start":98,"line_end":98,"column_start":4,"column_end":7}},{"value":"/ # let query = \"foo\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181803,"byte_end":181827,"line_start":99,"line_end":99,"column_start":4,"column_end":28}},{"value":"/ let redirect = Redirect::permanent(\"/other_url\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181831,"byte_end":181884,"line_start":100,"line_end":100,"column_start":4,"column_end":57}},{"value":"/ let redirect = Redirect::permanent(format!(\"https://google.com/{}\", query));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181888,"byte_end":181968,"line_start":101,"line_end":101,"column_start":4,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":181972,"byte_end":181979,"line_start":102,"line_end":102,"column_start":4,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182784,"byte_end":182789,"line_start":123,"line_end":123,"column_start":11,"column_end":16},"name":"found","qualname":"<Redirect>::found","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"found\" (302) redirect response. This response\n instructs the client to reissue the current request to a different URL,\n ideally maintaining the contents of the request identically.\n Unfortunately, different clients may respond differently to this type of\n redirect, so `303` or `307` redirects, which disambiguate, are\n preferred.","sig":null,"attributes":[{"value":"/ Construct a temporary \"found\" (302) redirect response. This response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182121,"byte_end":182193,"line_start":107,"line_end":107,"column_start":4,"column_end":76}},{"value":"/ instructs the client to reissue the current request to a different URL,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182197,"byte_end":182272,"line_start":108,"line_end":108,"column_start":4,"column_end":79}},{"value":"/ ideally maintaining the contents of the request identically.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182276,"byte_end":182340,"line_start":109,"line_end":109,"column_start":4,"column_end":68}},{"value":"/ Unfortunately, different clients may respond differently to this type of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182344,"byte_end":182420,"line_start":110,"line_end":110,"column_start":4,"column_end":80}},{"value":"/ redirect, so `303` or `307` redirects, which disambiguate, are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182424,"byte_end":182490,"line_start":111,"line_end":111,"column_start":4,"column_end":70}},{"value":"/ preferred.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182494,"byte_end":182508,"line_start":112,"line_end":112,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182512,"byte_end":182515,"line_start":113,"line_end":113,"column_start":4,"column_end":7}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182519,"byte_end":182533,"line_start":114,"line_end":114,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182537,"byte_end":182540,"line_start":115,"line_end":115,"column_start":4,"column_end":7}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182544,"byte_end":182555,"line_start":116,"line_end":116,"column_start":4,"column_end":15}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182559,"byte_end":182594,"line_start":117,"line_end":117,"column_start":4,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182598,"byte_end":182601,"line_start":118,"line_end":118,"column_start":4,"column_end":7}},{"value":"/ # let query = \"foo\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182605,"byte_end":182629,"line_start":119,"line_end":119,"column_start":4,"column_end":28}},{"value":"/ let redirect = Redirect::found(\"/other_url\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182633,"byte_end":182682,"line_start":120,"line_end":120,"column_start":4,"column_end":53}},{"value":"/ let redirect = Redirect::found(format!(\"https://google.com/{}\", query));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182686,"byte_end":182762,"line_start":121,"line_end":121,"column_start":4,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182766,"byte_end":182773,"line_start":122,"line_end":122,"column_start":4,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183474,"byte_end":183479,"line_start":141,"line_end":141,"column_start":11,"column_end":16},"name":"moved","qualname":"<Redirect>::moved","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a permanent \"moved\" (301) redirect response. This response\n should only be used for permanent redirects as it can be cached by\n browsers. Because different clients may respond differently to this type\n of redirect, a `308` redirect, which disambiguates, is preferred.","sig":null,"attributes":[{"value":"/ Construct a permanent \"moved\" (301) redirect response. This response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182899,"byte_end":182971,"line_start":127,"line_end":127,"column_start":4,"column_end":76}},{"value":"/ should only be used for permanent redirects as it can be cached by","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":182975,"byte_end":183045,"line_start":128,"line_end":128,"column_start":4,"column_end":74}},{"value":"/ browsers. Because different clients may respond differently to this type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183049,"byte_end":183125,"line_start":129,"line_end":129,"column_start":4,"column_end":80}},{"value":"/ of redirect, a `308` redirect, which disambiguates, is preferred.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183129,"byte_end":183198,"line_start":130,"line_end":130,"column_start":4,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183202,"byte_end":183205,"line_start":131,"line_end":131,"column_start":4,"column_end":7}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183209,"byte_end":183223,"line_start":132,"line_end":132,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183227,"byte_end":183230,"line_start":133,"line_end":133,"column_start":4,"column_end":7}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183234,"byte_end":183245,"line_start":134,"line_end":134,"column_start":4,"column_end":15}},{"value":"/ use rocket::response::Redirect;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183249,"byte_end":183284,"line_start":135,"line_end":135,"column_start":4,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183288,"byte_end":183291,"line_start":136,"line_end":136,"column_start":4,"column_end":7}},{"value":"/ # let query = \"foo\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183295,"byte_end":183319,"line_start":137,"line_end":137,"column_start":4,"column_end":28}},{"value":"/ let redirect = Redirect::moved(\"/other_url\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183323,"byte_end":183372,"line_start":138,"line_end":138,"column_start":4,"column_end":53}},{"value":"/ let redirect = Redirect::moved(format!(\"https://google.com/{}\", query));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183376,"byte_end":183452,"line_start":139,"line_end":139,"column_start":4,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183456,"byte_end":183463,"line_start":140,"line_end":140,"column_start":4,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184608,"byte_end":184617,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"NamedFile","qualname":"::response::named_file::NamedFile","value":"","parent":null,"children":[],"decl_id":null,"docs":" A file with an associated name; responds with the Content-Type based on the\n file extension.\n","sig":null,"attributes":[{"value":"/ A file with an associated name; responds with the Content-Type based on the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184480,"byte_end":184559,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ file extension.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184560,"byte_end":184579,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185136,"byte_end":185140,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"open","qualname":"<NamedFile>::open","value":"fn <P> (path: P) -> io::Result<NamedFile>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184656,"byte_end":184702,"line_start":16,"line_end":16,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184707,"byte_end":184710,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184715,"byte_end":184727,"line_start":18,"line_end":18,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184732,"byte_end":184735,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if path does not already exist. Other","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184740,"byte_end":184816,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/ errors may also be returned according to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184821,"byte_end":184865,"line_start":21,"line_end":21,"column_start":5,"column_end":49}},{"value":"/ [`OpenOptions::open()`](std::fs::OpenOptions::open()).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184870,"byte_end":184928,"line_start":22,"line_end":22,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184933,"byte_end":184936,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184941,"byte_end":184955,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184960,"byte_end":184963,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184968,"byte_end":184979,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::NamedFile;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184984,"byte_end":185020,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185025,"byte_end":185028,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185033,"byte_end":185065,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ let file = NamedFile::open(\"foo.txt\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185070,"byte_end":185112,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185117,"byte_end":185124,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185377,"byte_end":185381,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"file","qualname":"<NamedFile>::file","value":"fn (&self) -> &File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying `File`.\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying `File`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185308,"byte_end":185343,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185348,"byte_end":185365,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185492,"byte_end":185501,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"take_file","qualname":"<NamedFile>::take_file","value":"fn (self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Take the underlying `File`.\n","sig":null,"attributes":[{"value":"/ Take the underlying `File`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185427,"byte_end":185458,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185463,"byte_end":185480,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185633,"byte_end":185641,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"file_mut","qualname":"<NamedFile>::file_mut","value":"fn (&mut self) -> &mut File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable borrow to the underlying `File`.\n","sig":null,"attributes":[{"value":"/ Retrieve a mutable borrow to the underlying `File`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185544,"byte_end":185599,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185604,"byte_end":185621,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186111,"byte_end":186115,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"path","qualname":"<NamedFile>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the path of this file.","sig":null,"attributes":[{"value":"/ Retrieve the path of this file.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185699,"byte_end":185734,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185739,"byte_end":185742,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185747,"byte_end":185761,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185766,"byte_end":185769,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185774,"byte_end":185785,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185790,"byte_end":185808,"line_start":60,"line_end":60,"column_start":5,"column_end":23}},{"value":"/ use rocket::response::NamedFile;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185813,"byte_end":185849,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185854,"byte_end":185857,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185862,"byte_end":185887,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ # fn demo_path() -> io::Result<()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185892,"byte_end":185932,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ let file = NamedFile::open(\"foo.txt\")?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185937,"byte_end":185980,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(file.path().as_os_str(), \"foo.txt\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":185985,"byte_end":186036,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186041,"byte_end":186053,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186058,"byte_end":186065,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186070,"byte_end":186077,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186082,"byte_end":186099,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188860,"byte_end":188866,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Stream","qualname":"::response::stream::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Streams a response to a client from an arbitrary `Read`er type.","sig":null,"attributes":[{"value":"/ Streams a response to a client from an arbitrary `Read`er type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188470,"byte_end":188537,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188538,"byte_end":188541,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The client is sent a \"chunked\" response, where the chunk size is at most","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188542,"byte_end":188618,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ 4KiB. This means that at most 4KiB are stored in memory while the response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188619,"byte_end":188697,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ is being sent. This type should be used when sending responses that are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188698,"byte_end":188773,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ arbitrarily large in size, such as when streaming from a local socket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188774,"byte_end":188848,"line_start":13,"line_end":13,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189416,"byte_end":189423,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"chunked","qualname":"<Stream<T>>::chunked","value":"fn (reader: T, chunk_size: u64) -> Stream<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream from the given `reader` and sets the chunk size for\n each streamed chunk to `chunk_size` bytes.","sig":null,"attributes":[{"value":"/ Create a new stream from the given `reader` and sets the chunk size for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188916,"byte_end":188991,"line_start":17,"line_end":17,"column_start":5,"column_end":80}},{"value":"/ each streamed chunk to `chunk_size` bytes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188996,"byte_end":189042,"line_start":18,"line_end":18,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189047,"byte_end":189050,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189055,"byte_end":189068,"line_start":20,"line_end":20,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189073,"byte_end":189076,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Stream a response from whatever is in `stdin` with a chunk size of 10","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189081,"byte_end":189154,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ bytes. Note: you probably shouldn't do this.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189159,"byte_end":189207,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189212,"byte_end":189215,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189220,"byte_end":189231,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189236,"byte_end":189252,"line_start":26,"line_end":26,"column_start":5,"column_end":21}},{"value":"/ use rocket::response::Stream;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189257,"byte_end":189290,"line_start":27,"line_end":27,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189295,"byte_end":189298,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189303,"byte_end":189335,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ let response = Stream::chunked(io::stdin(), 10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189340,"byte_end":189392,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189397,"byte_end":189404,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":948},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":190878,"byte_end":190896,"line_start":8,"line_end":8,"column_start":11,"column_end":29},"name":"DEFAULT_CHUNK_SIZE","qualname":"::response::response::DEFAULT_CHUNK_SIZE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default size, in bytes, of a chunk for streamed responses.\n","sig":null,"attributes":[{"value":"/ The default size, in bytes, of a chunk for streamed responses.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":190801,"byte_end":190867,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191057,"byte_end":191062,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Sized","qualname":"::response::response::Body::Sized","value":"Body::Sized(T, u64)","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" A fixed-size body.\n","sig":null,"attributes":[{"value":"/ A fixed-size body.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191030,"byte_end":191052,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2754},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191147,"byte_end":191154,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Chunked","qualname":"::response::response::Body::Chunked","value":"Body::Chunked(T, u64)","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" A streamed/chunked body, akin to `Transfer-Encoding: chunked`.\n","sig":null,"attributes":[{"value":"/ A streamed/chunked body, akin to `Transfer-Encoding: chunked`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191076,"byte_end":191142,"line_start":15,"line_end":15,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":2748},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191016,"byte_end":191020,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Body","qualname":"::response::response::Body","value":"Body::{Sized, Chunked}","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2754}],"decl_id":null,"docs":" The body of a response: can be sized or streamed/chunked.\n","sig":null,"attributes":[{"value":"/ The body of a response: can be sized or streamed/chunked.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":190945,"byte_end":191006,"line_start":11,"line_end":11,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191270,"byte_end":191276,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Body<T>>::as_mut","value":"fn (&mut self) -> Body<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Body` with a mutable borrow to `self`'s inner type.\n","sig":null,"attributes":[{"value":"/ Returns a new `Body` with a mutable borrow to `self`'s inner type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191188,"byte_end":191258,"line_start":20,"line_end":20,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191655,"byte_end":191658,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"map","qualname":"<Body<T>>::map","value":"fn <U, F> (self, f: F) -> Body<U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`. Passes the inner type as a parameter to `f` and\n constructs a new body with the size of `self` and the return value of\n the call to `f`.\n","sig":null,"attributes":[{"value":"/ Consumes `self`. Passes the inner type as a parameter to `f` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191472,"byte_end":191540,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ constructs a new body with the size of `self` and the return value of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191545,"byte_end":191618,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ the call to `f`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191623,"byte_end":191643,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191920,"byte_end":191930,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Body<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner body.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner body.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191861,"byte_end":191908,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192103,"byte_end":192111,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"is_sized","qualname":"<Body<T>>::is_sized","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Sized`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Body::Sized`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192043,"byte_end":192091,"line_start":45,"line_end":45,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192311,"byte_end":192321,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"is_chunked","qualname":"<Body<T>>::is_chunked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Chunked`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Body::Chunked`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192249,"byte_end":192299,"line_start":53,"line_end":53,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192599,"byte_end":192609,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Body<T>>::into_bytes","value":"fn (self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read `self` into a `Vec` and returns it. If reading fails,\n returns `None`.\n","sig":null,"attributes":[{"value":"/ Attempts to read `self` into a `Vec` and returns it. If reading fails,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192489,"byte_end":192563,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192568,"byte_end":192587,"line_start":64,"line_end":64,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193010,"byte_end":193021,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Body<T>>::into_string","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read `self` into a `String` and returns it. If reading or\n conversion fails, returns `None`.\n","sig":null,"attributes":[{"value":"/ Attempts to read `self` into a `String` and returns it. If reading or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192883,"byte_end":192956,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ conversion fails, returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192961,"byte_end":192998,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196201,"byte_end":196216,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"ResponseBuilder","qualname":"::response::response::ResponseBuilder","value":"ResponseBuilder {  }","parent":null,"children":[{"krate":0,"index":968}],"decl_id":null,"docs":" Type for easily building `Response`s.","sig":null,"attributes":[{"value":"/ Type for easily building `Response`s.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193622,"byte_end":193663,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193664,"byte_end":193667,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Building a [`Response`] can be a low-level ordeal; this structure presents a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193668,"byte_end":193748,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ higher-level API that simplifies building `Response`s.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193749,"byte_end":193807,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193808,"byte_end":193811,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193812,"byte_end":193823,"line_start":104,"line_end":104,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193824,"byte_end":193827,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ `ResponseBuilder` follows the builder pattern and is usually obtained by","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193828,"byte_end":193904,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ calling [`Response::build()`] on `Response`. Almost all methods take the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193905,"byte_end":193981,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ current builder as a mutable reference and return the same mutable reference","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193982,"byte_end":194062,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ with field(s) modified in the `Responder` being built. These method calls","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194063,"byte_end":194140,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ can be chained: `build.a().b()`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194141,"byte_end":194177,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194178,"byte_end":194181,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ To finish building and retrieve the built `Response`, use the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194182,"byte_end":194247,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ [`finalize()`](#method.finalize) or [`ok()`](#method.ok) methods.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194248,"byte_end":194317,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194318,"byte_end":194321,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ## Headers","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194322,"byte_end":194336,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194337,"byte_end":194340,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ When building a `Response`, headers can either be _replaced_ or _adjoined_;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194341,"byte_end":194420,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ the default behavior (using `header(..)`) is to _replace_. When a header is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194421,"byte_end":194500,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ _replaced_, any existing values for headers with the same name are removed,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194501,"byte_end":194580,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ and the new value is set. If no header exists, the header is simply added.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194581,"byte_end":194659,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ On the other hand, when a header is _adjoined_, all existing values will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194660,"byte_end":194736,"line_start":121,"line_end":121,"column_start":1,"column_end":77}},{"value":"/ remain, and the `value` of the adjoined header will be added to the set of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194737,"byte_end":194815,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ existing values, if any. Adjoining maintains order: headers adjoined first","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194816,"byte_end":194894,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ will appear first in the `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194895,"byte_end":194935,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194936,"byte_end":194939,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ## Joining and Merging","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194940,"byte_end":194966,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194967,"byte_end":194970,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ It is often necessary to combine multiple `Response`s in some way. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":194971,"byte_end":195045,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ [merge](#method.merge) and [join](#method.join) methods facilitate this. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195046,"byte_end":195126,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/ `merge` method replaces all of the fields in `self` with those present in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195127,"byte_end":195204,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ `other`. The `join` method sets any fields not set in `self` to the value in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195205,"byte_end":195285,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ `other`. See their documentation for more details.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195286,"byte_end":195340,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195341,"byte_end":195355,"line_start":133,"line_end":133,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195356,"byte_end":195359,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The following example builds a `Response` with:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195360,"byte_end":195411,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195412,"byte_end":195415,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/   * **Status**: `418 I'm a teapot`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195416,"byte_end":195454,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/   * **Content-Type** header: `text/plain; charset=utf-8`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195455,"byte_end":195515,"line_start":138,"line_end":138,"column_start":1,"column_end":61}},{"value":"/   * **X-Teapot-Make** header: `Rocket`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195516,"byte_end":195558,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/   * **X-Teapot-Model** headers: `Utopia`, `Series 1`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195559,"byte_end":195615,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/   * **Body**: fixed-size string `\"Brewing the best coffee!\"`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195616,"byte_end":195680,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195681,"byte_end":195684,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195685,"byte_end":195696,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195697,"byte_end":195721,"line_start":144,"line_end":144,"column_start":1,"column_end":25}},{"value":"/ use rocket::response::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195722,"byte_end":195757,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195758,"byte_end":195802,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195803,"byte_end":195806,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195807,"byte_end":195839,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195840,"byte_end":195876,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/     .status(Status::ImATeapot)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195877,"byte_end":195911,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/     .header(ContentType::Plain)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195912,"byte_end":195947,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .raw_header(\"X-Teapot-Make\", \"Rocket\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195948,"byte_end":195994,"line_start":152,"line_end":152,"column_start":1,"column_end":47}},{"value":"/     .raw_header(\"X-Teapot-Model\", \"Utopia\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":195995,"byte_end":196042,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/     .raw_header_adjoin(\"X-Teapot-Model\", \"Series 1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196043,"byte_end":196099,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/     .sized_body(Cursor::new(\"Brewing the best coffee!\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196100,"byte_end":196160,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196161,"byte_end":196181,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196182,"byte_end":196189,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196641,"byte_end":196644,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<ResponseBuilder>::new","value":"fn (base: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ResponseBuilder` that will build on top of the `base`\n `Response`.","sig":null,"attributes":[{"value":"/ Creates a new `ResponseBuilder` that will build on top of the `base`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196288,"byte_end":196360,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196365,"byte_end":196380,"line_start":164,"line_end":164,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196385,"byte_end":196388,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196393,"byte_end":196406,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196411,"byte_end":196414,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196419,"byte_end":196430,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::{ResponseBuilder, Response};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196435,"byte_end":196489,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196494,"byte_end":196497,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196502,"byte_end":196534,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/ let builder = ResponseBuilder::new(Response::new());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196539,"byte_end":196595,"line_start":172,"line_end":172,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196600,"byte_end":196607,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196612,"byte_end":196629,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197135,"byte_end":197141,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"status","qualname":"<ResponseBuilder>::status","value":"fn (&mut self, status: Status) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to `status`.","sig":null,"attributes":[{"value":"/ Sets the status of the `Response` being built to `status`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196764,"byte_end":196826,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196831,"byte_end":196834,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196839,"byte_end":196852,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196857,"byte_end":196860,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196865,"byte_end":196876,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196881,"byte_end":196906,"line_start":186,"line_end":186,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196911,"byte_end":196940,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196945,"byte_end":196948,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196953,"byte_end":196985,"line_start":189,"line_end":189,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196990,"byte_end":197026,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/     .status(Status::NotFound)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197031,"byte_end":197064,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197069,"byte_end":197089,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197094,"byte_end":197101,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197106,"byte_end":197123,"line_start":194,"line_end":194,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197675,"byte_end":197685,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"raw_status","qualname":"<ResponseBuilder>::raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to a custom status\n constructed from the `code` and `reason` phrase.","sig":null,"attributes":[{"value":"/ Sets the status of the `Response` being built to a custom status","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197265,"byte_end":197333,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ constructed from the `code` and `reason` phrase.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197338,"byte_end":197390,"line_start":201,"line_end":201,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197395,"byte_end":197398,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197403,"byte_end":197416,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197421,"byte_end":197424,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197429,"byte_end":197440,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197445,"byte_end":197470,"line_start":206,"line_end":206,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197475,"byte_end":197478,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197483,"byte_end":197515,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197520,"byte_end":197556,"line_start":209,"line_end":209,"column_start":5,"column_end":41}},{"value":"/     .raw_status(699, \"Alien Encounter\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197561,"byte_end":197604,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197609,"byte_end":197629,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197634,"byte_end":197641,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197646,"byte_end":197663,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198715,"byte_end":198721,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"header","qualname":"<ResponseBuilder>::header","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response`, replacing any header with the same name\n that already exists in the response. If multiple headers with\n the same name exist, they are all removed, and only the new header and\n value will remain.","sig":null,"attributes":[{"value":"/ Adds `header` to the `Response`, replacing any header with the same name","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197848,"byte_end":197924,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ that already exists in the response. If multiple headers with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197929,"byte_end":197994,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ the same name exist, they are all removed, and only the new header and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":197999,"byte_end":198073,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ value will remain.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198078,"byte_end":198100,"line_start":223,"line_end":223,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198105,"byte_end":198108,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The type of `header` can be any type that implements `Into<Header>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198113,"byte_end":198185,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ This includes `Header` itself, [`ContentType`](::http::ContentType) and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198190,"byte_end":198265,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ [hyper::header types](::http::hyper::header).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198270,"byte_end":198319,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198324,"byte_end":198327,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198332,"byte_end":198345,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198350,"byte_end":198353,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198358,"byte_end":198369,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198374,"byte_end":198399,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198404,"byte_end":198438,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198443,"byte_end":198446,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198451,"byte_end":198487,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/     .header(ContentType::JSON)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198492,"byte_end":198526,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/     .header(ContentType::HTML)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198531,"byte_end":198565,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198570,"byte_end":198590,"line_start":238,"line_end":238,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198595,"byte_end":198598,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.headers().get(\"Content-Type\").count(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198603,"byte_end":198669,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198674,"byte_end":198681,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198686,"byte_end":198703,"line_start":242,"line_end":242,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199800,"byte_end":199813,"line_start":273,"line_end":273,"column_start":12,"column_end":25},"name":"header_adjoin","qualname":"<ResponseBuilder>::header_adjoin","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response` by adjoining the header with any\n existing headers with the same name that already exist in the\n `Response`. This allows for multiple headers with the same name and\n potentially different values to be present in the `Response`.","sig":null,"attributes":[{"value":"/ Adds `header` to the `Response` by adjoining the header with any","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198889,"byte_end":198957,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ existing headers with the same name that already exist in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":198962,"byte_end":199027,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ `Response`. This allows for multiple headers with the same name and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199032,"byte_end":199103,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ potentially different values to be present in the `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199108,"byte_end":199173,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199178,"byte_end":199181,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The type of `header` can be any type that implements `Into<Header>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199186,"byte_end":199258,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ This includes `Header` itself, [`ContentType`](::http::ContentType) and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199263,"byte_end":199338,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ [hyper::header types](::http::hyper::header).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199343,"byte_end":199392,"line_start":257,"line_end":257,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199397,"byte_end":199400,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199405,"byte_end":199418,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199423,"byte_end":199426,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199431,"byte_end":199442,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199447,"byte_end":199472,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::hyper::header::Accept;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199477,"byte_end":199521,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199526,"byte_end":199529,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199534,"byte_end":199570,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/     .header_adjoin(Accept::json())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199575,"byte_end":199613,"line_start":266,"line_end":266,"column_start":5,"column_end":43}},{"value":"/     .header_adjoin(Accept::text())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199618,"byte_end":199656,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199661,"byte_end":199681,"line_start":268,"line_end":268,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199686,"byte_end":199689,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.headers().get(\"Accept\").count(), 2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199694,"byte_end":199754,"line_start":270,"line_end":270,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199759,"byte_end":199766,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199771,"byte_end":199788,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200639,"byte_end":200649,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"raw_header","qualname":"<ResponseBuilder>::raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom header to the `Response` with the given name and value,\n replacing any header with the same name that already exists in the\n response. If multiple headers with the same name exist, they are all\n removed, and only the new header and value will remain.","sig":null,"attributes":[{"value":"/ Adds a custom header to the `Response` with the given name and value,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":199984,"byte_end":200057,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ replacing any header with the same name that already exists in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200062,"byte_end":200132,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/ response. If multiple headers with the same name exist, they are all","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200137,"byte_end":200209,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ removed, and only the new header and value will remain.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200214,"byte_end":200273,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200278,"byte_end":200281,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200286,"byte_end":200299,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200304,"byte_end":200307,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200312,"byte_end":200323,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200328,"byte_end":200353,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200358,"byte_end":200361,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200366,"byte_end":200402,"line_start":290,"line_end":290,"column_start":5,"column_end":41}},{"value":"/     .raw_header(\"X-Custom\", \"first\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200407,"byte_end":200447,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/     .raw_header(\"X-Custom\", \"second\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200452,"byte_end":200493,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200498,"byte_end":200518,"line_start":293,"line_end":293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200523,"byte_end":200526,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.headers().get(\"X-Custom\").count(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200531,"byte_end":200593,"line_start":295,"line_end":295,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200598,"byte_end":200605,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200610,"byte_end":200627,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201587,"byte_end":201604,"line_start":325,"line_end":325,"column_start":12,"column_end":29},"name":"raw_header_adjoin","qualname":"<ResponseBuilder>::raw_header_adjoin","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds custom header to the `Response` with the given name and value,\n adjoining the header with any existing headers with the same name that\n already exist in the `Response`. This allows for multiple headers with\n the same name and potentially different values to be present in the\n `Response`.","sig":null,"attributes":[{"value":"/ Adds custom header to the `Response` with the given name and value,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200882,"byte_end":200953,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ adjoining the header with any existing headers with the same name that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":200958,"byte_end":201032,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ already exist in the `Response`. This allows for multiple headers with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201037,"byte_end":201111,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ the same name and potentially different values to be present in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201116,"byte_end":201187,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201192,"byte_end":201207,"line_start":310,"line_end":310,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201212,"byte_end":201215,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201220,"byte_end":201233,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201238,"byte_end":201241,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201246,"byte_end":201257,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201262,"byte_end":201287,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201292,"byte_end":201295,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201300,"byte_end":201336,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"first\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201341,"byte_end":201388,"line_start":318,"line_end":318,"column_start":5,"column_end":52}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"second\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201393,"byte_end":201441,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201446,"byte_end":201466,"line_start":320,"line_end":320,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201471,"byte_end":201474,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.headers().get(\"X-Custom\").count(), 2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201479,"byte_end":201541,"line_start":322,"line_end":322,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201546,"byte_end":201553,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201558,"byte_end":201575,"line_start":324,"line_end":324,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202340,"byte_end":202350,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"sized_body","qualname":"<ResponseBuilder>::sized_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the fixed-sized `body`.","sig":null,"attributes":[{"value":"/ Sets the body of the `Response` to be the fixed-sized `body`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201840,"byte_end":201905,"line_start":333,"line_end":333,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201910,"byte_end":201913,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201918,"byte_end":201931,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201936,"byte_end":201939,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201944,"byte_end":201955,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201960,"byte_end":201985,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":201990,"byte_end":202012,"line_start":339,"line_end":339,"column_start":5,"column_end":27}},{"value":"/ # use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202017,"byte_end":202035,"line_start":340,"line_end":340,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202040,"byte_end":202043,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202048,"byte_end":202073,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"/ # fn test() -> io::Result<()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202078,"byte_end":202113,"line_start":343,"line_end":343,"column_start":5,"column_end":40}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202118,"byte_end":202150,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202155,"byte_end":202191,"line_start":345,"line_end":345,"column_start":5,"column_end":41}},{"value":"/     .sized_body(File::open(\"body.txt\")?)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202196,"byte_end":202240,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202245,"byte_end":202265,"line_start":347,"line_end":347,"column_start":5,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202270,"byte_end":202282,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202287,"byte_end":202294,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202299,"byte_end":202306,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202311,"byte_end":202328,"line_start":351,"line_end":351,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203018,"byte_end":203031,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"streamed_body","qualname":"<ResponseBuilder>::streamed_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body`.","sig":null,"attributes":[{"value":"/ Sets the body of the `Response` to be the streamed `body`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202518,"byte_end":202580,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202585,"byte_end":202588,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202593,"byte_end":202606,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202611,"byte_end":202614,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202619,"byte_end":202630,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202635,"byte_end":202660,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202665,"byte_end":202687,"line_start":365,"line_end":365,"column_start":5,"column_end":27}},{"value":"/ # use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202692,"byte_end":202710,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202715,"byte_end":202718,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202723,"byte_end":202748,"line_start":368,"line_end":368,"column_start":5,"column_end":30}},{"value":"/ # fn test() -> io::Result<()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202753,"byte_end":202788,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202793,"byte_end":202825,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202830,"byte_end":202866,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/     .streamed_body(File::open(\"body.txt\")?)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202871,"byte_end":202918,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202923,"byte_end":202943,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202948,"byte_end":202960,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202965,"byte_end":202972,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202977,"byte_end":202984,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":202989,"byte_end":203006,"line_start":377,"line_end":377,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203739,"byte_end":203751,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"chunked_body","qualname":"<ResponseBuilder>::chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body` with a custom\n chunk size, in bytes.","sig":null,"attributes":[{"value":"/ Sets the body of the `Response` to be the streamed `body` with a custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203191,"byte_end":203266,"line_start":385,"line_end":385,"column_start":5,"column_end":80}},{"value":"/ chunk size, in bytes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203271,"byte_end":203296,"line_start":386,"line_end":386,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203301,"byte_end":203304,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203309,"byte_end":203322,"line_start":388,"line_end":388,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203327,"byte_end":203330,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203335,"byte_end":203346,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203351,"byte_end":203376,"line_start":391,"line_end":391,"column_start":5,"column_end":30}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203381,"byte_end":203403,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/ # use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203408,"byte_end":203426,"line_start":393,"line_end":393,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203431,"byte_end":203434,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203439,"byte_end":203464,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/ # fn test() -> io::Result<()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203469,"byte_end":203504,"line_start":396,"line_end":396,"column_start":5,"column_end":40}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203509,"byte_end":203541,"line_start":397,"line_end":397,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203546,"byte_end":203582,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/     .chunked_body(File::open(\"body.txt\")?, 8096)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203587,"byte_end":203639,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203644,"byte_end":203664,"line_start":400,"line_end":400,"column_start":5,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203669,"byte_end":203681,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203686,"byte_end":203693,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203698,"byte_end":203705,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203710,"byte_end":203727,"line_start":404,"line_end":404,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204455,"byte_end":204463,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"raw_body","qualname":"<ResponseBuilder>::raw_body","value":"fn <T> (&mut self, body: Body<T>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `sized_body`, `streamed_body`, or\n `chunked_body`.","sig":null,"attributes":[{"value":"/ Sets the body of `self` to be `body`. This method should typically not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":203935,"byte_end":204009,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ be used, opting instead for one of `sized_body`, `streamed_body`, or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204014,"byte_end":204086,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ `chunked_body`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204091,"byte_end":204110,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204115,"byte_end":204118,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204123,"byte_end":204136,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204141,"byte_end":204144,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204149,"byte_end":204160,"line_start":418,"line_end":418,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204165,"byte_end":204189,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/ use rocket::response::{Response, Body};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204194,"byte_end":204237,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204242,"byte_end":204245,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204250,"byte_end":204282,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204287,"byte_end":204323,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/     .raw_body(Body::Sized(Cursor::new(\"Hello!\"), 6))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204328,"byte_end":204384,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204389,"byte_end":204409,"line_start":425,"line_end":425,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204414,"byte_end":204421,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204426,"byte_end":204443,"line_start":427,"line_end":427,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205985,"byte_end":205990,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"merge","qualname":"<ResponseBuilder>::merge","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Merges the `other` `Response` into `self` by setting any fields in\n `self` to the corresponding value in `other` if they are set in `other`.\n Fields in `self` are unchanged if they are not set in `other`. If a\n header is set in both `self` and `other`, the values in `other` are\n kept. Headers set only in `self` remain.","sig":null,"attributes":[{"value":"/ Merges the `other` `Response` into `self` by setting any fields in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204620,"byte_end":204690,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ `self` to the corresponding value in `other` if they are set in `other`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204695,"byte_end":204771,"line_start":436,"line_end":436,"column_start":5,"column_end":81}},{"value":"/ Fields in `self` are unchanged if they are not set in `other`. If a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204776,"byte_end":204847,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/ header is set in both `self` and `other`, the values in `other` are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204852,"byte_end":204923,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ kept. Headers set only in `self` remain.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204928,"byte_end":204972,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204977,"byte_end":204980,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":204985,"byte_end":204998,"line_start":441,"line_end":441,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205003,"byte_end":205006,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205011,"byte_end":205022,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205027,"byte_end":205052,"line_start":444,"line_end":444,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205057,"byte_end":205101,"line_start":445,"line_end":445,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205106,"byte_end":205109,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let base = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205114,"byte_end":205146,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/     .status(Status::NotFound)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205151,"byte_end":205184,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/     .header(ContentType::HTML)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205189,"byte_end":205223,"line_start":449,"line_end":449,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205228,"byte_end":205270,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205275,"byte_end":205295,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205300,"byte_end":205303,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205308,"byte_end":205344,"line_start":453,"line_end":453,"column_start":5,"column_end":41}},{"value":"/     .status(Status::ImATeapot)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205349,"byte_end":205383,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 2\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205388,"byte_end":205430,"line_start":455,"line_end":455,"column_start":5,"column_end":47}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"value 3\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205435,"byte_end":205484,"line_start":456,"line_end":456,"column_start":5,"column_end":54}},{"value":"/     .merge(base)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205489,"byte_end":205509,"line_start":457,"line_end":457,"column_start":5,"column_end":25}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205514,"byte_end":205534,"line_start":458,"line_end":458,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205539,"byte_end":205542,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.status(), Status::NotFound);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205547,"byte_end":205599,"line_start":460,"line_end":460,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205604,"byte_end":205607,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205612,"byte_end":205619,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ let ctype: Vec<_> = response.headers().get(\"Content-Type\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205624,"byte_end":205697,"line_start":463,"line_end":463,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(ctype, vec![ContentType::HTML.to_string()]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205702,"byte_end":205761,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205766,"byte_end":205773,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205778,"byte_end":205781,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205786,"byte_end":205793,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ let custom_values: Vec<_> = response.headers().get(\"X-Custom\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205798,"byte_end":205875,"line_start":468,"line_end":468,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(custom_values, vec![\"value 1\"]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205880,"byte_end":205927,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205932,"byte_end":205939,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205944,"byte_end":205951,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":205956,"byte_end":205973,"line_start":472,"line_end":472,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207552,"byte_end":207556,"line_start":517,"line_end":517,"column_start":12,"column_end":16},"name":"join","qualname":"<ResponseBuilder>::join","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Joins the `other` `Response` into `self` by setting any fields in `self`\n to the corresponding value in `other` if they are set in `self`. Fields\n in `self` are unchanged if they are already set. If a header is set in\n both `self` and `other`, the values are adjoined, with the values in\n `self` coming first. Headers only in `self` or `other` are set in\n `self`.","sig":null,"attributes":[{"value":"/ Joins the `other` `Response` into `self` by setting any fields in `self`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206113,"byte_end":206189,"line_start":478,"line_end":478,"column_start":5,"column_end":81}},{"value":"/ to the corresponding value in `other` if they are set in `self`. Fields","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206194,"byte_end":206269,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ in `self` are unchanged if they are already set. If a header is set in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206274,"byte_end":206348,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/ both `self` and `other`, the values are adjoined, with the values in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206353,"byte_end":206425,"line_start":481,"line_end":481,"column_start":5,"column_end":77}},{"value":"/ `self` coming first. Headers only in `self` or `other` are set in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206430,"byte_end":206499,"line_start":482,"line_end":482,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206504,"byte_end":206515,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206520,"byte_end":206523,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206528,"byte_end":206541,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206546,"byte_end":206549,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206554,"byte_end":206565,"line_start":487,"line_end":487,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206570,"byte_end":206595,"line_start":488,"line_end":488,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206600,"byte_end":206644,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206649,"byte_end":206652,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let other = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206657,"byte_end":206690,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/     .status(Status::NotFound)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206695,"byte_end":206728,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/     .header(ContentType::HTML)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206733,"byte_end":206767,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206772,"byte_end":206814,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206819,"byte_end":206839,"line_start":495,"line_end":495,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206844,"byte_end":206847,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206852,"byte_end":206888,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/     .status(Status::ImATeapot)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206893,"byte_end":206927,"line_start":498,"line_end":498,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 2\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206932,"byte_end":206974,"line_start":499,"line_end":499,"column_start":5,"column_end":47}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"value 3\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":206979,"byte_end":207028,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/     .join(other)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207033,"byte_end":207053,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207058,"byte_end":207078,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207083,"byte_end":207086,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.status(), Status::ImATeapot);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207091,"byte_end":207144,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207149,"byte_end":207152,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207157,"byte_end":207164,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ let ctype: Vec<_> = response.headers().get(\"Content-Type\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207169,"byte_end":207242,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(ctype, vec![ContentType::HTML.to_string()]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207247,"byte_end":207306,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207311,"byte_end":207318,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207323,"byte_end":207326,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207331,"byte_end":207338,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ let custom_values: Vec<_> = response.headers().get(\"X-Custom\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207343,"byte_end":207420,"line_start":512,"line_end":512,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(custom_values, vec![\"value 2\", \"value 3\", \"value 1\"]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207425,"byte_end":207494,"line_start":513,"line_end":513,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207499,"byte_end":207506,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207511,"byte_end":207518,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207523,"byte_end":207540,"line_start":516,"line_end":516,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207983,"byte_end":207991,"line_start":535,"line_end":535,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ResponseBuilder>::finalize","value":"fn (&mut self) -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response`.","sig":null,"attributes":[{"value":"/ Retrieve the built `Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207678,"byte_end":207712,"line_start":522,"line_end":522,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207717,"byte_end":207720,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207725,"byte_end":207738,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207743,"byte_end":207746,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207751,"byte_end":207762,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207767,"byte_end":207792,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207797,"byte_end":207800,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207805,"byte_end":207837,"line_start":529,"line_end":529,"column_start":5,"column_end":37}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207842,"byte_end":207878,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/     // build the response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207883,"byte_end":207912,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207917,"byte_end":207937,"line_start":532,"line_end":532,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207942,"byte_end":207949,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":207954,"byte_end":207971,"line_start":534,"line_end":534,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208440,"byte_end":208442,"line_start":553,"line_end":553,"column_start":12,"column_end":14},"name":"ok","qualname":"<ResponseBuilder>::ok","value":"fn <T> (&mut self) -> Result<Response<'r>, T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response` wrapped in `Ok`.","sig":null,"attributes":[{"value":"/ Retrieve the built `Response` wrapped in `Ok`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208097,"byte_end":208147,"line_start":539,"line_end":539,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208152,"byte_end":208155,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208160,"byte_end":208173,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208178,"byte_end":208181,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208186,"byte_end":208197,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208202,"byte_end":208227,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208232,"byte_end":208235,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let response: Result<Response, ()> = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208240,"byte_end":208298,"line_start":546,"line_end":546,"column_start":5,"column_end":63}},{"value":"/     // build the response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208303,"byte_end":208332,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/     .ok();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208337,"byte_end":208351,"line_start":548,"line_end":548,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208356,"byte_end":208359,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ assert!(response.is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208364,"byte_end":208394,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208399,"byte_end":208406,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208411,"byte_end":208428,"line_start":552,"line_end":552,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208618,"byte_end":208626,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775}],"decl_id":null,"docs":" A response, as returned by types implementing [`Responder`].\n","sig":null,"attributes":[{"value":"/ A response, as returned by types implementing [`Responder`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208523,"byte_end":208587,"line_start":558,"line_end":558,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209370,"byte_end":209373,"line_start":585,"line_end":585,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn () -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `Response` without a status, body, or headers.\n Because all HTTP responses must have a status, if a default `Response`\n is written to the client without a status, the status defaults to `200\n Ok`.","sig":null,"attributes":[{"value":"/ Creates a new, empty `Response` without a status, body, or headers.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208764,"byte_end":208835,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/ Because all HTTP responses must have a status, if a default `Response`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208840,"byte_end":208914,"line_start":568,"line_end":568,"column_start":5,"column_end":79}},{"value":"/ is written to the client without a status, the status defaults to `200","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208919,"byte_end":208993,"line_start":569,"line_end":569,"column_start":5,"column_end":79}},{"value":"/ Ok`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208998,"byte_end":209006,"line_start":570,"line_end":570,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209011,"byte_end":209014,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209019,"byte_end":209032,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209037,"byte_end":209040,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209045,"byte_end":209056,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209061,"byte_end":209086,"line_start":575,"line_end":575,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209091,"byte_end":209120,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209125,"byte_end":209128,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209133,"byte_end":209172,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209177,"byte_end":209180,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.status(), Status::Ok);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209185,"byte_end":209231,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(response.headers().len(), 0);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209236,"byte_end":209280,"line_start":581,"line_end":581,"column_start":5,"column_end":49}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209285,"byte_end":209324,"line_start":582,"line_end":582,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209329,"byte_end":209336,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209341,"byte_end":209358,"line_start":584,"line_end":584,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209800,"byte_end":209805,"line_start":604,"line_end":604,"column_start":12,"column_end":17},"name":"build","qualname":"<Response>::build","value":"fn () -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `Response::new()`.","sig":null,"attributes":[{"value":"/ Returns a `ResponseBuilder` with a base of `Response::new()`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209523,"byte_end":209588,"line_start":593,"line_end":593,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209593,"byte_end":209596,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209601,"byte_end":209614,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209619,"byte_end":209622,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209627,"byte_end":209638,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209643,"byte_end":209668,"line_start":598,"line_end":598,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209673,"byte_end":209676,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209681,"byte_end":209713,"line_start":600,"line_end":600,"column_start":5,"column_end":37}},{"value":"/ let builder = Response::build();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209718,"byte_end":209754,"line_start":601,"line_end":601,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209759,"byte_end":209766,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209771,"byte_end":209788,"line_start":603,"line_end":603,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210205,"byte_end":210215,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"build_from","qualname":"<Response>::build_from","value":"fn (other: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `other`.","sig":null,"attributes":[{"value":"/ Returns a `ResponseBuilder` with a base of `other`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209890,"byte_end":209945,"line_start":608,"line_end":608,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209950,"byte_end":209953,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209958,"byte_end":209971,"line_start":610,"line_end":610,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209976,"byte_end":209979,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":209984,"byte_end":209995,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/ # #![allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210000,"byte_end":210033,"line_start":613,"line_end":613,"column_start":5,"column_end":38}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210038,"byte_end":210063,"line_start":614,"line_end":614,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210068,"byte_end":210071,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let other = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210076,"byte_end":210108,"line_start":616,"line_end":616,"column_start":5,"column_end":37}},{"value":"/ let builder = Response::build_from(other);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210113,"byte_end":210159,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210164,"byte_end":210171,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210176,"byte_end":210193,"line_start":619,"line_end":619,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210717,"byte_end":210723,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"fn (&self) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of `self`.","sig":null,"attributes":[{"value":"/ Returns the status of `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210309,"byte_end":210342,"line_start":624,"line_end":624,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210347,"byte_end":210350,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210355,"byte_end":210368,"line_start":626,"line_end":626,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210373,"byte_end":210376,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210381,"byte_end":210392,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210397,"byte_end":210422,"line_start":629,"line_end":629,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210427,"byte_end":210456,"line_start":630,"line_end":630,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210461,"byte_end":210464,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210469,"byte_end":210508,"line_start":632,"line_end":632,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(response.status(), Status::Ok);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210513,"byte_end":210559,"line_start":633,"line_end":633,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210564,"byte_end":210567,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ response.set_status(Status::NotFound);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210572,"byte_end":210614,"line_start":635,"line_end":635,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(response.status(), Status::NotFound);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210619,"byte_end":210671,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210676,"byte_end":210683,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210688,"byte_end":210705,"line_start":638,"line_end":638,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211156,"byte_end":211166,"line_start":656,"line_end":656,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response>::set_status","value":"fn (&mut self, status: Status) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to `status`.","sig":null,"attributes":[{"value":"/ Sets the status of `self` to `status`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210796,"byte_end":210838,"line_start":643,"line_end":643,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210843,"byte_end":210846,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210851,"byte_end":210864,"line_start":645,"line_end":645,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210869,"byte_end":210872,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210877,"byte_end":210888,"line_start":647,"line_end":647,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210893,"byte_end":210918,"line_start":648,"line_end":648,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210923,"byte_end":210952,"line_start":649,"line_end":649,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210957,"byte_end":210960,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":210965,"byte_end":211004,"line_start":651,"line_end":651,"column_start":5,"column_end":44}},{"value":"/ response.set_status(Status::ImATeapot);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211009,"byte_end":211052,"line_start":652,"line_end":652,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(response.status(), Status::ImATeapot);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211057,"byte_end":211110,"line_start":653,"line_end":653,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211115,"byte_end":211122,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211127,"byte_end":211144,"line_start":655,"line_end":655,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211694,"byte_end":211706,"line_start":674,"line_end":674,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Response>::content_type","value":"fn (&self) -> Option<ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present\n or is malformed, returns `None`.","sig":null,"attributes":[{"value":"/ Returns the Content-Type header of `self`. If the header is not present","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211243,"byte_end":211318,"line_start":660,"line_end":660,"column_start":5,"column_end":80}},{"value":"/ or is malformed, returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211323,"byte_end":211359,"line_start":661,"line_end":661,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211364,"byte_end":211367,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211372,"byte_end":211385,"line_start":663,"line_end":663,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211390,"byte_end":211393,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211398,"byte_end":211409,"line_start":665,"line_end":665,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211414,"byte_end":211439,"line_start":666,"line_end":666,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211444,"byte_end":211478,"line_start":667,"line_end":667,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211483,"byte_end":211486,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211491,"byte_end":211530,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ response.set_header(ContentType::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211535,"byte_end":211578,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(response.content_type(), Some(ContentType::HTML));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211583,"byte_end":211648,"line_start":671,"line_end":671,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211653,"byte_end":211660,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211665,"byte_end":211682,"line_start":673,"line_end":673,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212381,"byte_end":212395,"line_start":693,"line_end":693,"column_start":12,"column_end":26},"name":"set_raw_status","qualname":"<Response>::set_raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to a custom `status` with status code `code`\n and reason phrase `reason`. This method should be used sparingly; prefer\n to use [set_status](#method.set_status) instead.","sig":null,"attributes":[{"value":"/ Sets the status of `self` to a custom `status` with status code `code`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211826,"byte_end":211900,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ and reason phrase `reason`. This method should be used sparingly; prefer","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211905,"byte_end":211981,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ to use [set_status](#method.set_status) instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":211986,"byte_end":212038,"line_start":680,"line_end":680,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212043,"byte_end":212046,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212051,"byte_end":212064,"line_start":682,"line_end":682,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212069,"byte_end":212072,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212077,"byte_end":212088,"line_start":684,"line_end":684,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212093,"byte_end":212118,"line_start":685,"line_end":685,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212123,"byte_end":212152,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212157,"byte_end":212160,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212165,"byte_end":212204,"line_start":688,"line_end":688,"column_start":5,"column_end":44}},{"value":"/ response.set_raw_status(699, \"Tripped a Wire\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212209,"byte_end":212260,"line_start":689,"line_end":689,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(response.status(), Status::new(699, \"Tripped a Wire\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212265,"byte_end":212335,"line_start":690,"line_end":690,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212340,"byte_end":212347,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212352,"byte_end":212369,"line_start":692,"line_end":692,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212967,"byte_end":212974,"line_start":710,"line_end":710,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Response>::cookies","value":"fn (&self) -> Vec<Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of the cookies set in `self` as identified by the\n `Set-Cookie` header. Malformed cookies are skipped.","sig":null,"attributes":[{"value":"/ Returns a vector of the cookies set in `self` as identified by the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212508,"byte_end":212578,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ `Set-Cookie` header. Malformed cookies are skipped.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212583,"byte_end":212638,"line_start":698,"line_end":698,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212643,"byte_end":212646,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212651,"byte_end":212664,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212669,"byte_end":212672,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212677,"byte_end":212688,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212693,"byte_end":212718,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Cookie;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212723,"byte_end":212752,"line_start":704,"line_end":704,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212757,"byte_end":212760,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212765,"byte_end":212804,"line_start":706,"line_end":706,"column_start":5,"column_end":44}},{"value":"/ response.set_header(Cookie::new(\"hello\", \"world!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212809,"byte_end":212865,"line_start":707,"line_end":707,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(response.cookies(), vec![Cookie::new(\"hello\", \"world!\")]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212870,"byte_end":212943,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":212948,"byte_end":212955,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213897,"byte_end":213904,"line_start":739,"line_end":739,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`] of all of the headers in `self`.","sig":null,"attributes":[{"value":"/ Returns a [`HeaderMap`] of all of the headers in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213244,"byte_end":213304,"line_start":721,"line_end":721,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213309,"byte_end":213312,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213317,"byte_end":213330,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213335,"byte_end":213338,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213343,"byte_end":213354,"line_start":725,"line_end":725,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213359,"byte_end":213384,"line_start":726,"line_end":726,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Header;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213389,"byte_end":213418,"line_start":727,"line_end":727,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213423,"byte_end":213426,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213431,"byte_end":213470,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"1\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213475,"byte_end":213523,"line_start":730,"line_end":730,"column_start":5,"column_end":53}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"2\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213528,"byte_end":213576,"line_start":731,"line_end":731,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213581,"byte_end":213584,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let mut custom_headers = response.headers().iter();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213589,"byte_end":213644,"line_start":733,"line_end":733,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(custom_headers.next(), Some(Header::new(\"X-Custom\", \"1\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213649,"byte_end":213723,"line_start":734,"line_end":734,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(custom_headers.next(), Some(Header::new(\"X-Custom\", \"2\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213728,"byte_end":213802,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(custom_headers.next(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213807,"byte_end":213851,"line_start":736,"line_end":736,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213856,"byte_end":213863,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213868,"byte_end":213885,"line_start":738,"line_end":738,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214918,"byte_end":214928,"line_start":766,"line_end":766,"column_start":12,"column_end":22},"name":"set_header","qualname":"<Response>::set_header","value":"fn <'h, H> (&mut self, header: H) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the header `header` in `self`. Any existing headers with the name\n `header.name` will be lost, and only `header` will remain. The type of\n `header` can be any type that implements `Into<Header>`. This includes\n `Header` itself, [`ContentType`](::http::ContentType) and\n [`hyper::header` types](::http::hyper::header).","sig":null,"attributes":[{"value":"/ Sets the header `header` in `self`. Any existing headers with the name","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":213965,"byte_end":214039,"line_start":743,"line_end":743,"column_start":5,"column_end":79}},{"value":"/ `header.name` will be lost, and only `header` will remain. The type of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214044,"byte_end":214118,"line_start":744,"line_end":744,"column_start":5,"column_end":79}},{"value":"/ `header` can be any type that implements `Into<Header>`. This includes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214123,"byte_end":214197,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ `Header` itself, [`ContentType`](::http::ContentType) and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214202,"byte_end":214263,"line_start":746,"line_end":746,"column_start":5,"column_end":66}},{"value":"/ [`hyper::header` types](::http::hyper::header).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214268,"byte_end":214319,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214324,"byte_end":214327,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214332,"byte_end":214345,"line_start":749,"line_end":749,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214350,"byte_end":214353,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214358,"byte_end":214369,"line_start":751,"line_end":751,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214374,"byte_end":214399,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214404,"byte_end":214438,"line_start":753,"line_end":753,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214443,"byte_end":214446,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214451,"byte_end":214490,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214495,"byte_end":214498,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ response.set_header(ContentType::HTML);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214503,"byte_end":214546,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(response.headers().iter().next(), Some(ContentType::HTML.into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214551,"byte_end":214632,"line_start":758,"line_end":758,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(response.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214637,"byte_end":214681,"line_start":759,"line_end":759,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214686,"byte_end":214689,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ response.set_header(ContentType::JSON);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214694,"byte_end":214737,"line_start":761,"line_end":761,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(response.headers().iter().next(), Some(ContentType::JSON.into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214742,"byte_end":214823,"line_start":762,"line_end":762,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(response.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214828,"byte_end":214872,"line_start":763,"line_end":763,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214877,"byte_end":214884,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":214889,"byte_end":214906,"line_start":765,"line_end":765,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215891,"byte_end":215905,"line_start":792,"line_end":792,"column_start":12,"column_end":26},"name":"set_raw_header","qualname":"<Response>::set_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the custom header with name `name` and value `value` in `self`. Any\n existing headers with the same `name` will be lost, and the new custom\n header will remain. This method should be used sparingly; prefer to use\n [set_header](#method.set_header) instead.","sig":null,"attributes":[{"value":"/ Sets the custom header with name `name` and value `value` in `self`. Any","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215038,"byte_end":215114,"line_start":770,"line_end":770,"column_start":5,"column_end":81}},{"value":"/ existing headers with the same `name` will be lost, and the new custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215119,"byte_end":215193,"line_start":771,"line_end":771,"column_start":5,"column_end":79}},{"value":"/ header will remain. This method should be used sparingly; prefer to use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215198,"byte_end":215273,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ [set_header](#method.set_header) instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215278,"byte_end":215323,"line_start":773,"line_end":773,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215328,"byte_end":215331,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215336,"byte_end":215349,"line_start":775,"line_end":775,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215354,"byte_end":215357,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215362,"byte_end":215373,"line_start":777,"line_end":777,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215378,"byte_end":215403,"line_start":778,"line_end":778,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Header;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215408,"byte_end":215437,"line_start":779,"line_end":779,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215442,"byte_end":215445,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215450,"byte_end":215489,"line_start":781,"line_end":781,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215494,"byte_end":215497,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ response.set_raw_header(\"X-Custom\", \"1\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215502,"byte_end":215547,"line_start":783,"line_end":783,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(response.headers().get_one(\"X-Custom\"), Some(\"1\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215552,"byte_end":215618,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(response.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215623,"byte_end":215667,"line_start":785,"line_end":785,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215672,"byte_end":215675,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ response.set_raw_header(\"X-Custom\", \"2\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215680,"byte_end":215725,"line_start":787,"line_end":787,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(response.headers().get_one(\"X-Custom\"), Some(\"2\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215730,"byte_end":215796,"line_start":788,"line_end":788,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(response.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215801,"byte_end":215845,"line_start":789,"line_end":789,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215850,"byte_end":215857,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":215862,"byte_end":215879,"line_start":791,"line_end":791,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217069,"byte_end":217082,"line_start":821,"line_end":821,"column_start":12,"column_end":25},"name":"adjoin_header","qualname":"<Response>::adjoin_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the header `header` to `self`. If `self` contains headers with the\n name `header.name`, another header with the same name and value\n `header.value` is added. The type of `header` can be any type that\n implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](::http::ContentType) and [`hyper::header`\n types](::http::hyper::header).","sig":null,"attributes":[{"value":"/ Adds the header `header` to `self`. If `self` contains headers with the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216092,"byte_end":216167,"line_start":798,"line_end":798,"column_start":5,"column_end":80}},{"value":"/ name `header.name`, another header with the same name and value","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216172,"byte_end":216239,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ `header.value` is added. The type of `header` can be any type that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216244,"byte_end":216314,"line_start":800,"line_end":800,"column_start":5,"column_end":75}},{"value":"/ implements `Into<Header>`. This includes `Header` itself,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216319,"byte_end":216380,"line_start":801,"line_end":801,"column_start":5,"column_end":66}},{"value":"/ [`ContentType`](::http::ContentType) and [`hyper::header`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216385,"byte_end":216446,"line_start":802,"line_end":802,"column_start":5,"column_end":66}},{"value":"/ types](::http::hyper::header).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216451,"byte_end":216485,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216490,"byte_end":216493,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216498,"byte_end":216511,"line_start":805,"line_end":805,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216516,"byte_end":216519,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216524,"byte_end":216535,"line_start":807,"line_end":807,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216540,"byte_end":216565,"line_start":808,"line_end":808,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::hyper::header::Accept;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216570,"byte_end":216614,"line_start":809,"line_end":809,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216619,"byte_end":216622,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216627,"byte_end":216666,"line_start":811,"line_end":811,"column_start":5,"column_end":44}},{"value":"/ response.adjoin_header(Accept::json());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216671,"byte_end":216714,"line_start":812,"line_end":812,"column_start":5,"column_end":48}},{"value":"/ response.adjoin_header(Accept::text());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216719,"byte_end":216762,"line_start":813,"line_end":813,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216767,"byte_end":216770,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let mut accept_headers = response.headers().iter();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216775,"byte_end":216830,"line_start":815,"line_end":815,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(accept_headers.next(), Some(Accept::json().into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216835,"byte_end":216902,"line_start":816,"line_end":816,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(accept_headers.next(), Some(Accept::text().into()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216907,"byte_end":216974,"line_start":817,"line_end":817,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(accept_headers.next(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":216979,"byte_end":217023,"line_start":818,"line_end":818,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217028,"byte_end":217035,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217040,"byte_end":217057,"line_start":820,"line_end":820,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218190,"byte_end":218207,"line_start":848,"line_end":848,"column_start":12,"column_end":29},"name":"adjoin_raw_header","qualname":"<Response>::adjoin_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom header with name `name` and value `value` to `self`. If\n `self` already contains headers with the name `name`, another header\n with the same `name` and `value` is added. The type of `header` can be\n any type implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](::http::ContentType) and [`hyper::header`\n types](::http::hyper::header).","sig":null,"attributes":[{"value":"/ Adds a custom header with name `name` and value `value` to `self`. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217180,"byte_end":217253,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ `self` already contains headers with the name `name`, another header","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217258,"byte_end":217330,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ with the same `name` and `value` is added. The type of `header` can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217335,"byte_end":217409,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ any type implements `Into<Header>`. This includes `Header` itself,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217414,"byte_end":217484,"line_start":828,"line_end":828,"column_start":5,"column_end":75}},{"value":"/ [`ContentType`](::http::ContentType) and [`hyper::header`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217489,"byte_end":217550,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/ types](::http::hyper::header).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217555,"byte_end":217589,"line_start":830,"line_end":830,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217594,"byte_end":217597,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217602,"byte_end":217615,"line_start":832,"line_end":832,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217620,"byte_end":217623,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217628,"byte_end":217639,"line_start":834,"line_end":834,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217644,"byte_end":217669,"line_start":835,"line_end":835,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::Header;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217674,"byte_end":217703,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217708,"byte_end":217711,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217716,"byte_end":217755,"line_start":838,"line_end":838,"column_start":5,"column_end":44}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"one\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217760,"byte_end":217810,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"two\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217815,"byte_end":217865,"line_start":840,"line_end":840,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217870,"byte_end":217873,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let mut custom_headers = response.headers().iter();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217878,"byte_end":217933,"line_start":842,"line_end":842,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(custom_headers.next(), Some(Header::new(\"X-Custom\", \"one\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":217938,"byte_end":218014,"line_start":843,"line_end":843,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(custom_headers.next(), Some(Header::new(\"X-Custom\", \"two\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218019,"byte_end":218095,"line_start":844,"line_end":844,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(custom_headers.next(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218100,"byte_end":218144,"line_start":845,"line_end":845,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218149,"byte_end":218156,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218161,"byte_end":218178,"line_start":847,"line_end":847,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218934,"byte_end":218947,"line_start":872,"line_end":872,"column_start":12,"column_end":25},"name":"remove_header","qualname":"<Response>::remove_header","value":"fn (&mut self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all headers with the name `name`.","sig":null,"attributes":[{"value":"/ Removes all headers with the name `name`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218390,"byte_end":218435,"line_start":854,"line_end":854,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218440,"byte_end":218443,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218448,"byte_end":218461,"line_start":856,"line_end":856,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218466,"byte_end":218469,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218474,"byte_end":218485,"line_start":858,"line_end":858,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218490,"byte_end":218515,"line_start":859,"line_end":859,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218520,"byte_end":218523,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218528,"byte_end":218567,"line_start":861,"line_end":861,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218572,"byte_end":218575,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"one\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218580,"byte_end":218630,"line_start":863,"line_end":863,"column_start":5,"column_end":55}},{"value":"/ response.adjoin_raw_header(\"X-Custom\", \"two\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218635,"byte_end":218685,"line_start":864,"line_end":864,"column_start":5,"column_end":55}},{"value":"/ response.adjoin_raw_header(\"X-Other\", \"hi\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218690,"byte_end":218738,"line_start":865,"line_end":865,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(response.headers().len(), 3);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218743,"byte_end":218787,"line_start":866,"line_end":866,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218792,"byte_end":218795,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ response.remove_header(\"X-Custom\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218800,"byte_end":218839,"line_start":868,"line_end":868,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(response.headers().len(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218844,"byte_end":218888,"line_start":869,"line_end":869,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218893,"byte_end":218900,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":218905,"byte_end":218922,"line_start":871,"line_end":871,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219547,"byte_end":219551,"line_start":892,"line_end":892,"column_start":12,"column_end":16},"name":"body","qualname":"<Response>::body","value":"fn (&mut self) -> Option<Body<&mut io::Read>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable borrow of the body of `self`, if there is one. The\n body is borrowed mutably to allow for reading.","sig":null,"attributes":[{"value":"/ Returns a mutable borrow of the body of `self`, if there is one. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219019,"byte_end":219091,"line_start":876,"line_end":876,"column_start":5,"column_end":77}},{"value":"/ body is borrowed mutably to allow for reading.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219096,"byte_end":219146,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219151,"byte_end":219154,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219159,"byte_end":219172,"line_start":879,"line_end":879,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219177,"byte_end":219180,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219185,"byte_end":219196,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219201,"byte_end":219225,"line_start":882,"line_end":882,"column_start":5,"column_end":29}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219230,"byte_end":219255,"line_start":883,"line_end":883,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219260,"byte_end":219263,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219268,"byte_end":219307,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219312,"byte_end":219351,"line_start":886,"line_end":886,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219356,"byte_end":219359,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ response.set_sized_body(Cursor::new(\"Hello, world!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219364,"byte_end":219422,"line_start":888,"line_end":888,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(response.body_string(), Some(\"Hello, world!\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219427,"byte_end":219501,"line_start":889,"line_end":889,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219506,"byte_end":219513,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219518,"byte_end":219535,"line_start":891,"line_end":891,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220669,"byte_end":220680,"line_start":922,"line_end":922,"column_start":12,"column_end":23},"name":"body_string","qualname":"<Response>::body_string","value":"fn (&mut self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a string. If `self` doesn't\n have a body, reading fails, or string conversion (for non-UTF-8 bodies)\n fails, returns `None`. Note that `self`'s `body` is consumed after a\n call to this method.","sig":null,"attributes":[{"value":"/ Consumes `self's` body and reads it into a string. If `self` doesn't","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":219966,"byte_end":220038,"line_start":903,"line_end":903,"column_start":5,"column_end":77}},{"value":"/ have a body, reading fails, or string conversion (for non-UTF-8 bodies)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220043,"byte_end":220118,"line_start":904,"line_end":904,"column_start":5,"column_end":80}},{"value":"/ fails, returns `None`. Note that `self`'s `body` is consumed after a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220123,"byte_end":220195,"line_start":905,"line_end":905,"column_start":5,"column_end":77}},{"value":"/ call to this method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220200,"byte_end":220224,"line_start":906,"line_end":906,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220229,"byte_end":220232,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220237,"byte_end":220250,"line_start":908,"line_end":908,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220255,"byte_end":220258,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220263,"byte_end":220274,"line_start":910,"line_end":910,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220279,"byte_end":220303,"line_start":911,"line_end":911,"column_start":5,"column_end":29}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220308,"byte_end":220333,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220338,"byte_end":220341,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220346,"byte_end":220385,"line_start":914,"line_end":914,"column_start":5,"column_end":44}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220390,"byte_end":220429,"line_start":915,"line_end":915,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220434,"byte_end":220437,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ response.set_sized_body(Cursor::new(\"Hello, world!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220442,"byte_end":220500,"line_start":917,"line_end":917,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(response.body_string(), Some(\"Hello, world!\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220505,"byte_end":220579,"line_start":918,"line_end":918,"column_start":5,"column_end":79}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220584,"byte_end":220623,"line_start":919,"line_end":919,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220628,"byte_end":220635,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220640,"byte_end":220657,"line_start":921,"line_end":921,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221418,"byte_end":221428,"line_start":944,"line_end":944,"column_start":12,"column_end":22},"name":"body_bytes","qualname":"<Response>::body_bytes","value":"fn (&mut self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a `Vec` of `u8` bytes. If\n `self` doesn't have a body or reading fails returns `None`. Note that\n `self`'s `body` is consumed after a call to this method.","sig":null,"attributes":[{"value":"/ Consumes `self's` body and reads it into a `Vec` of `u8` bytes. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220776,"byte_end":220846,"line_start":926,"line_end":926,"column_start":5,"column_end":75}},{"value":"/ `self` doesn't have a body or reading fails returns `None`. Note that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220851,"byte_end":220924,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ `self`'s `body` is consumed after a call to this method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220929,"byte_end":220989,"line_start":928,"line_end":928,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":220994,"byte_end":220997,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221002,"byte_end":221015,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221020,"byte_end":221023,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221028,"byte_end":221039,"line_start":932,"line_end":932,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221044,"byte_end":221068,"line_start":933,"line_end":933,"column_start":5,"column_end":29}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221073,"byte_end":221098,"line_start":934,"line_end":934,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221103,"byte_end":221106,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221111,"byte_end":221150,"line_start":936,"line_end":936,"column_start":5,"column_end":44}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221155,"byte_end":221194,"line_start":937,"line_end":937,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221199,"byte_end":221202,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ response.set_sized_body(Cursor::new(\"hi!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221207,"byte_end":221255,"line_start":939,"line_end":939,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(response.body_bytes(), Some(vec![0x68, 0x69, 0x21]));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221260,"byte_end":221328,"line_start":940,"line_end":940,"column_start":5,"column_end":73}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221333,"byte_end":221372,"line_start":941,"line_end":941,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221377,"byte_end":221384,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221389,"byte_end":221406,"line_start":943,"line_end":943,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222216,"byte_end":222225,"line_start":969,"line_end":969,"column_start":12,"column_end":21},"name":"take_body","qualname":"<Response>::take_body","value":"fn (&mut self) -> Option<Body<Box<io::Read + 'r>>>","parent":null,"children":[],"decl_id":null,"docs":" Moves the body of `self` out and returns it, if there is one, leaving no\n body in its place.","sig":null,"attributes":[{"value":"/ Moves the body of `self` out and returns it, if there is one, leaving no","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221524,"byte_end":221600,"line_start":948,"line_end":948,"column_start":5,"column_end":81}},{"value":"/ body in its place.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221605,"byte_end":221627,"line_start":949,"line_end":949,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221632,"byte_end":221635,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221640,"byte_end":221653,"line_start":951,"line_end":951,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221658,"byte_end":221661,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221666,"byte_end":221677,"line_start":953,"line_end":953,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221682,"byte_end":221706,"line_start":954,"line_end":954,"column_start":5,"column_end":29}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221711,"byte_end":221736,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221741,"byte_end":221744,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221749,"byte_end":221788,"line_start":957,"line_end":957,"column_start":5,"column_end":44}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221793,"byte_end":221832,"line_start":958,"line_end":958,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221837,"byte_end":221840,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ response.set_sized_body(Cursor::new(\"Hello, world!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221845,"byte_end":221903,"line_start":960,"line_end":960,"column_start":5,"column_end":63}},{"value":"/ assert!(response.body().is_some());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221908,"byte_end":221947,"line_start":961,"line_end":961,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221952,"byte_end":221955,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let body = response.take_body();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":221960,"byte_end":221996,"line_start":963,"line_end":963,"column_start":5,"column_end":41}},{"value":"/ let body_string = body.and_then(|b| b.into_string());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222001,"byte_end":222058,"line_start":964,"line_end":964,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(body_string, Some(\"Hello, world!\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222063,"byte_end":222126,"line_start":965,"line_end":965,"column_start":5,"column_end":68}},{"value":"/ assert!(response.body().is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222131,"byte_end":222170,"line_start":966,"line_end":966,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222175,"byte_end":222182,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222187,"byte_end":222204,"line_start":968,"line_end":968,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223485,"byte_end":223499,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"set_sized_body","qualname":"<Response>::set_sized_body","value":"fn <B> (&mut self, mut body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be the fixed-sized `body`. The size of the\n body is obtained by `seek`ing to the end and then `seek`ing back to the\n start.","sig":null,"attributes":[{"value":"/ Sets the body of `self` to be the fixed-sized `body`. The size of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222768,"byte_end":222841,"line_start":985,"line_end":985,"column_start":5,"column_end":78}},{"value":"/ body is obtained by `seek`ing to the end and then `seek`ing back to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222846,"byte_end":222921,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ start.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222926,"byte_end":222936,"line_start":987,"line_end":987,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222941,"byte_end":222944,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222949,"byte_end":222961,"line_start":989,"line_end":989,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222966,"byte_end":222969,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ If either seek fails, this method panics. If you believe it is possible","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":222974,"byte_end":223049,"line_start":991,"line_end":991,"column_start":5,"column_end":80}},{"value":"/ for `seek` to panic for `B`, use [set_raw_body](#method.set_raw_body)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223054,"byte_end":223127,"line_start":992,"line_end":992,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223132,"byte_end":223144,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223149,"byte_end":223152,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223157,"byte_end":223170,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223175,"byte_end":223178,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223183,"byte_end":223194,"line_start":997,"line_end":997,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223199,"byte_end":223223,"line_start":998,"line_end":998,"column_start":5,"column_end":29}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223228,"byte_end":223253,"line_start":999,"line_end":999,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223258,"byte_end":223261,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223266,"byte_end":223305,"line_start":1001,"line_end":1001,"column_start":5,"column_end":44}},{"value":"/ response.set_sized_body(Cursor::new(\"Hello, world!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223310,"byte_end":223368,"line_start":1002,"line_end":1002,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(response.body_string(), Some(\"Hello, world!\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223373,"byte_end":223447,"line_start":1003,"line_end":1003,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223452,"byte_end":223459,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223464,"byte_end":223473,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224495,"byte_end":224512,"line_start":1032,"line_end":1032,"column_start":12,"column_end":29},"name":"set_streamed_body","qualname":"<Response>::set_streamed_body","value":"fn <B> (&mut self, body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed. The chunk\n size of the stream is\n [DEFAULT_CHUNK_SIZE](::response::DEFAULT_CHUNK_SIZE). Use\n [set_chunked_body](#method.set_chunked_body) for custom chunk sizes.","sig":null,"attributes":[{"value":"/ Sets the body of `self` to be `body`, which will be streamed. The chunk","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223905,"byte_end":223980,"line_start":1016,"line_end":1016,"column_start":5,"column_end":80}},{"value":"/ size of the stream is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":223985,"byte_end":224010,"line_start":1017,"line_end":1017,"column_start":5,"column_end":30}},{"value":"/ [DEFAULT_CHUNK_SIZE](::response::DEFAULT_CHUNK_SIZE). Use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224015,"byte_end":224076,"line_start":1018,"line_end":1018,"column_start":5,"column_end":66}},{"value":"/ [set_chunked_body](#method.set_chunked_body) for custom chunk sizes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224081,"byte_end":224153,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224158,"byte_end":224161,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224166,"byte_end":224179,"line_start":1021,"line_end":1021,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224184,"byte_end":224187,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224192,"byte_end":224203,"line_start":1023,"line_end":1023,"column_start":5,"column_end":16}},{"value":"/ use std::io::{Read, repeat};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224208,"byte_end":224240,"line_start":1024,"line_end":1024,"column_start":5,"column_end":37}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224245,"byte_end":224270,"line_start":1025,"line_end":1025,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224275,"byte_end":224278,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224283,"byte_end":224322,"line_start":1027,"line_end":1027,"column_start":5,"column_end":44}},{"value":"/ response.set_streamed_body(repeat(97).take(5));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224327,"byte_end":224378,"line_start":1028,"line_end":1028,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(response.body_string(), Some(\"aaaaa\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224383,"byte_end":224449,"line_start":1029,"line_end":1029,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224454,"byte_end":224461,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224466,"byte_end":224483,"line_start":1031,"line_end":1031,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225076,"byte_end":225092,"line_start":1050,"line_end":1050,"column_start":12,"column_end":28},"name":"set_chunked_body","qualname":"<Response>::set_chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed with chunk\n size `chunk_size`.","sig":null,"attributes":[{"value":"/ Sets the body of `self` to be `body`, which will be streamed with chunk","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224629,"byte_end":224704,"line_start":1036,"line_end":1036,"column_start":5,"column_end":80}},{"value":"/ size `chunk_size`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224709,"byte_end":224731,"line_start":1037,"line_end":1037,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224736,"byte_end":224739,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224744,"byte_end":224757,"line_start":1039,"line_end":1039,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224762,"byte_end":224765,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224770,"byte_end":224781,"line_start":1041,"line_end":1041,"column_start":5,"column_end":16}},{"value":"/ use std::io::{Read, repeat};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224786,"byte_end":224818,"line_start":1042,"line_end":1042,"column_start":5,"column_end":37}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224823,"byte_end":224848,"line_start":1043,"line_end":1043,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224853,"byte_end":224856,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224861,"byte_end":224900,"line_start":1045,"line_end":1045,"column_start":5,"column_end":44}},{"value":"/ response.set_chunked_body(repeat(97).take(5), 10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224905,"byte_end":224959,"line_start":1046,"line_end":1046,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(response.body_string(), Some(\"aaaaa\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":224964,"byte_end":225030,"line_start":1047,"line_end":1047,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225035,"byte_end":225042,"line_start":1048,"line_end":1048,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225047,"byte_end":225064,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225845,"byte_end":225857,"line_start":1073,"line_end":1073,"column_start":12,"column_end":24},"name":"set_raw_body","qualname":"<Response>::set_raw_body","value":"fn <T> (&mut self, body: Body<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `set_sized_body`,\n `set_streamed_body`, or `set_chunked_body`.","sig":null,"attributes":[{"value":"/ Sets the body of `self` to be `body`. This method should typically not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225250,"byte_end":225324,"line_start":1055,"line_end":1055,"column_start":5,"column_end":79}},{"value":"/ be used, opting instead for one of `set_sized_body`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225329,"byte_end":225385,"line_start":1056,"line_end":1056,"column_start":5,"column_end":61}},{"value":"/ `set_streamed_body`, or `set_chunked_body`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225390,"byte_end":225437,"line_start":1057,"line_end":1057,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225442,"byte_end":225445,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225450,"byte_end":225463,"line_start":1059,"line_end":1059,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225468,"byte_end":225471,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225476,"byte_end":225487,"line_start":1061,"line_end":1061,"column_start":5,"column_end":16}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225492,"byte_end":225516,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use rocket::response::{Response, Body};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225521,"byte_end":225564,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225569,"byte_end":225572,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let body = Body::Sized(Cursor::new(\"Hello!\"), 6);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225577,"byte_end":225630,"line_start":1065,"line_end":1065,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225635,"byte_end":225638,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ let mut response = Response::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225643,"byte_end":225682,"line_start":1067,"line_end":1067,"column_start":5,"column_end":44}},{"value":"/ response.set_raw_body(body);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225687,"byte_end":225719,"line_start":1068,"line_end":1068,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225724,"byte_end":225727,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.body_string(), Some(\"Hello!\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225732,"byte_end":225799,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225804,"byte_end":225811,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":225816,"byte_end":225833,"line_start":1072,"line_end":1072,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227317,"byte_end":227322,"line_start":1115,"line_end":1115,"column_start":12,"column_end":17},"name":"merge","qualname":"<Response>::merge","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this response's status and body with that of `other`, if they\n exist in `other`. Any headers that exist in `other` replace the ones in\n `self`. Any in `self` that aren't in `other` remain in `self`.","sig":null,"attributes":[{"value":"/ Replaces this response's status and body with that of `other`, if they","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226101,"byte_end":226175,"line_start":1080,"line_end":1080,"column_start":5,"column_end":79}},{"value":"/ exist in `other`. Any headers that exist in `other` replace the ones in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226180,"byte_end":226255,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ `self`. Any in `self` that aren't in `other` remain in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226260,"byte_end":226326,"line_start":1082,"line_end":1082,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226331,"byte_end":226334,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226339,"byte_end":226352,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226357,"byte_end":226360,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226365,"byte_end":226376,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226381,"byte_end":226406,"line_start":1087,"line_end":1087,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226411,"byte_end":226455,"line_start":1088,"line_end":1088,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226460,"byte_end":226463,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let base = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226468,"byte_end":226500,"line_start":1090,"line_end":1090,"column_start":5,"column_end":37}},{"value":"/     .status(Status::NotFound)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226505,"byte_end":226538,"line_start":1091,"line_end":1091,"column_start":5,"column_end":38}},{"value":"/     .header(ContentType::HTML)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226543,"byte_end":226577,"line_start":1092,"line_end":1092,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226582,"byte_end":226624,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226629,"byte_end":226649,"line_start":1094,"line_end":1094,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226654,"byte_end":226657,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226662,"byte_end":226698,"line_start":1096,"line_end":1096,"column_start":5,"column_end":41}},{"value":"/     .status(Status::ImATeapot)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226703,"byte_end":226737,"line_start":1097,"line_end":1097,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 2\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226742,"byte_end":226784,"line_start":1098,"line_end":1098,"column_start":5,"column_end":47}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"value 3\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226789,"byte_end":226838,"line_start":1099,"line_end":1099,"column_start":5,"column_end":54}},{"value":"/     .merge(base)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226843,"byte_end":226863,"line_start":1100,"line_end":1100,"column_start":5,"column_end":25}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226868,"byte_end":226888,"line_start":1101,"line_end":1101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226893,"byte_end":226896,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.status(), Status::NotFound);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226901,"byte_end":226953,"line_start":1103,"line_end":1103,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226958,"byte_end":226961,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226966,"byte_end":226973,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ let ctype: Vec<_> = response.headers().get(\"Content-Type\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":226978,"byte_end":227051,"line_start":1106,"line_end":1106,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(ctype, vec![ContentType::HTML.to_string()]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227056,"byte_end":227115,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227120,"byte_end":227127,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227132,"byte_end":227135,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227140,"byte_end":227147,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"/ let custom_values: Vec<_> = response.headers().get(\"X-Custom\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227152,"byte_end":227229,"line_start":1111,"line_end":1111,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(custom_values, vec![\"value 1\"]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227234,"byte_end":227281,"line_start":1112,"line_end":1112,"column_start":5,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227286,"byte_end":227293,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227298,"byte_end":227305,"line_start":1114,"line_end":1114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228870,"byte_end":228874,"line_start":1164,"line_end":1164,"column_start":12,"column_end":16},"name":"join","qualname":"<Response>::join","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self`'s status and body to that of `other` if they are not already\n set in `self`. Any headers present in both `other` and `self` are\n adjoined.","sig":null,"attributes":[{"value":"/ Sets `self`'s status and body to that of `other` if they are not already","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227687,"byte_end":227763,"line_start":1129,"line_end":1129,"column_start":5,"column_end":81}},{"value":"/ set in `self`. Any headers present in both `other` and `self` are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227768,"byte_end":227837,"line_start":1130,"line_end":1130,"column_start":5,"column_end":74}},{"value":"/ adjoined.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227842,"byte_end":227855,"line_start":1131,"line_end":1131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227860,"byte_end":227863,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227868,"byte_end":227881,"line_start":1133,"line_end":1133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227886,"byte_end":227889,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227894,"byte_end":227905,"line_start":1135,"line_end":1135,"column_start":5,"column_end":16}},{"value":"/ use rocket::Response;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227910,"byte_end":227935,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227940,"byte_end":227984,"line_start":1137,"line_end":1137,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227989,"byte_end":227992,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ let other = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":227997,"byte_end":228030,"line_start":1139,"line_end":1139,"column_start":5,"column_end":38}},{"value":"/     .status(Status::NotFound)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228035,"byte_end":228068,"line_start":1140,"line_end":1140,"column_start":5,"column_end":38}},{"value":"/     .header(ContentType::HTML)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228073,"byte_end":228107,"line_start":1141,"line_end":1141,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228112,"byte_end":228154,"line_start":1142,"line_end":1142,"column_start":5,"column_end":47}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228159,"byte_end":228179,"line_start":1143,"line_end":1143,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228184,"byte_end":228187,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ let response = Response::build()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228192,"byte_end":228228,"line_start":1145,"line_end":1145,"column_start":5,"column_end":41}},{"value":"/     .status(Status::ImATeapot)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228233,"byte_end":228267,"line_start":1146,"line_end":1146,"column_start":5,"column_end":39}},{"value":"/     .raw_header(\"X-Custom\", \"value 2\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228272,"byte_end":228314,"line_start":1147,"line_end":1147,"column_start":5,"column_end":47}},{"value":"/     .raw_header_adjoin(\"X-Custom\", \"value 3\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228319,"byte_end":228368,"line_start":1148,"line_end":1148,"column_start":5,"column_end":54}},{"value":"/     .join(other)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228373,"byte_end":228393,"line_start":1149,"line_end":1149,"column_start":5,"column_end":25}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228398,"byte_end":228418,"line_start":1150,"line_end":1150,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228423,"byte_end":228426,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.status(), Status::ImATeapot);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228431,"byte_end":228484,"line_start":1152,"line_end":1152,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228489,"byte_end":228492,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228497,"byte_end":228504,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ let ctype: Vec<_> = response.headers().get(\"Content-Type\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228509,"byte_end":228582,"line_start":1155,"line_end":1155,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(ctype, vec![ContentType::HTML.to_string()]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228587,"byte_end":228646,"line_start":1156,"line_end":1156,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228651,"byte_end":228658,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228663,"byte_end":228666,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228671,"byte_end":228678,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12}},{"value":"/ let custom_values: Vec<_> = response.headers().get(\"X-Custom\").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228683,"byte_end":228760,"line_start":1160,"line_end":1160,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(custom_values, vec![\"value 2\", \"value 3\", \"value 1\"]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228765,"byte_end":228834,"line_start":1161,"line_end":1161,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228839,"byte_end":228846,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":228851,"byte_end":228858,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2779},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231422,"byte_end":231427,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"Debug","qualname":"::response::debug::Debug","value":"","parent":null,"children":[],"decl_id":null,"docs":" Debug prints the internal value before responding with a 500 error.","sig":null,"attributes":[{"value":"/ Debug prints the internal value before responding with a 500 error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":229958,"byte_end":230029,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230030,"byte_end":230033,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This value exists primarily to allow handler return types that would not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230034,"byte_end":230110,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ otherwise implement [`Responder`]. It is typically used in conjunction with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230111,"byte_end":230190,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ `Result<T, E>` where `E` implements `Debug` but not `Responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230191,"byte_end":230259,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230260,"byte_end":230263,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230264,"byte_end":230277,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230278,"byte_end":230281,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Because of the generic `From<E>` implementation for `Debug<E>`, conversions","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230282,"byte_end":230361,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ from `Result<T, E>` to `Result<T, Debug<E>>` through `?` occur","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230362,"byte_end":230428,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ automatically:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230429,"byte_end":230447,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230448,"byte_end":230451,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230452,"byte_end":230463,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230464,"byte_end":230513,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230514,"byte_end":230544,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230545,"byte_end":230548,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # use rocket::post;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230549,"byte_end":230572,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230573,"byte_end":230594,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ use rocket::response::Debug;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230595,"byte_end":230627,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230628,"byte_end":230631,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #[post(\"/\", format = \"plain\", data = \"<data>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230632,"byte_end":230683,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ fn post(data: Data) -> Result<String, Debug<io::Error>> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230684,"byte_end":230745,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/     let mut name = String::with_capacity(32);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230746,"byte_end":230795,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/     data.open().take(32).read_to_string(&mut name)?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230796,"byte_end":230852,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/     Ok(name)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230853,"byte_end":230869,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230870,"byte_end":230875,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230876,"byte_end":230883,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230884,"byte_end":230887,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It is also possible to map the error directly to `Debug` via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230888,"byte_end":230952,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ [`Result::map_err()`]:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230953,"byte_end":230979,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230980,"byte_end":230983,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230984,"byte_end":230995,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":230996,"byte_end":231045,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ use std::string::FromUtf8Error;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231046,"byte_end":231081,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231082,"byte_end":231085,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # use rocket::get;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231086,"byte_end":231108,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ use rocket::response::Debug;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231109,"byte_end":231141,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231142,"byte_end":231145,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231146,"byte_end":231161,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/ fn rand_str() -> Result<String, Debug<FromUtf8Error>> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231162,"byte_end":231221,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/     # /*","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231222,"byte_end":231234,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/     let bytes: Vec<u8> = random_bytes();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231235,"byte_end":231279,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/     # */","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231280,"byte_end":231292,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/     # let bytes: Vec<u8> = vec![];","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231293,"byte_end":231331,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/     String::from_utf8(bytes).map_err(Debug)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231332,"byte_end":231379,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231380,"byte_end":231385,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231386,"byte_end":231393,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2786},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235063,"byte_end":235068,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Flash","qualname":"::response::flash::Flash","value":"Flash {  }","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"decl_id":null,"docs":" Sets a \"flash\" cookie that will be removed when it is accessed. The\n analogous request type is [`FlashMessage`].","sig":null,"attributes":[{"value":"/ Sets a \"flash\" cookie that will be removed when it is accessed. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232194,"byte_end":232265,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ analogous request type is [`FlashMessage`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232266,"byte_end":232313,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232314,"byte_end":232317,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type makes it easy to send messages across requests. It is typically","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232318,"byte_end":232395,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ used for \"status\" messages after redirects. For instance, if a user attempts","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232396,"byte_end":232476,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ to visit a page he/she does not have access to, you may want to redirect the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232477,"byte_end":232557,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ user to a safe place and show a message indicating what happened on the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232558,"byte_end":232633,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ redirected page. The message should only persist for a single request. This","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232634,"byte_end":232713,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ can be accomplished with this type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232714,"byte_end":232753,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232754,"byte_end":232757,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232758,"byte_end":232769,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232770,"byte_end":232773,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Each `Flash` message consists of a `name` and some `msg` contents. A generic","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232774,"byte_end":232854,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ constructor ([new](#method.new)) can be used to construct a message with any","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232855,"byte_end":232935,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ name, while the [warning](#method.warning), [success](#method.success), and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":232936,"byte_end":233015,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ [error](#method.error) constructors create messages with the corresponding","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233016,"byte_end":233094,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ names.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233095,"byte_end":233105,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233106,"byte_end":233109,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Messages can be retrieved on the request side via the [`FlashMessage`] type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233110,"byte_end":233189,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ and the [name](#method.name) and [msg](#method.msg) methods.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233190,"byte_end":233254,"line_start":33,"line_end":33,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233255,"byte_end":233258,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233259,"byte_end":233273,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233274,"byte_end":233277,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The `Responder` implementation for `Flash` sets the message cookie and then","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233278,"byte_end":233357,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ uses the passed in responder `res` to complete the response. In other words,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233358,"byte_end":233438,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ it simply sets a cookie and delegates the rest of the response handling to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233439,"byte_end":233517,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233518,"byte_end":233544,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233545,"byte_end":233548,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233549,"byte_end":233562,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233563,"byte_end":233566,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The following complete Rocket application illustrates the use of a `Flash`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233567,"byte_end":233645,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ message on both the request and response sides.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233646,"byte_end":233697,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233698,"byte_end":233701,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233702,"byte_end":233713,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233714,"byte_end":233763,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233764,"byte_end":233803,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ use rocket::response::{Flash, Redirect};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233804,"byte_end":233848,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ use rocket::request::FlashMessage;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233849,"byte_end":233887,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/ use rocket::http::RawStr;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233888,"byte_end":233917,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233918,"byte_end":233921,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[post(\"/login/<name>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233922,"byte_end":233950,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ fn login(name: &RawStr) -> Result<&'static str, Flash<Redirect>> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":233951,"byte_end":234021,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/     if name == \"special_user\" {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234022,"byte_end":234057,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/         Ok(\"Hello, special user!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234058,"byte_end":234096,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/     } else {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234097,"byte_end":234113,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/         Err(Flash::error(Redirect::to(\"/\"), \"Invalid username.\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234114,"byte_end":234183,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234184,"byte_end":234193,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234194,"byte_end":234199,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234200,"byte_end":234203,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234204,"byte_end":234219,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/ fn index(flash: Option<FlashMessage>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234220,"byte_end":234273,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/     flash.map(|msg| format!(\"{}: {}\", msg.name(), msg.msg()))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234274,"byte_end":234339,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/          .unwrap_or_else(|| \"Welcome!\".to_string())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234340,"byte_end":234395,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234396,"byte_end":234401,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234402,"byte_end":234405,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234406,"byte_end":234421,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234422,"byte_end":234500,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/     rocket::ignite().mount(\"/\", routes![login, index]).launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234501,"byte_end":234569,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234570,"byte_end":234577,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234578,"byte_end":234583,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234584,"byte_end":234591,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234592,"byte_end":234595,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ On the response side (in `login`), a `Flash` error message is set if some","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234596,"byte_end":234673,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ fictional authentication failed, and the user is redirected to `\"/\"`. On the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234674,"byte_end":234754,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ request side (in `index`), the handler emits the flash message if there is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234755,"byte_end":234833,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ one and otherwise emits a standard welcome message. Note that if the user","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234834,"byte_end":234911,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ were to refresh the index page after viewing a flash message, the user would","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234912,"byte_end":234992,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ receive the standard welcome message.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":234993,"byte_end":235034,"line_start":81,"line_end":81,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1087},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235672,"byte_end":235684,"line_start":103,"line_end":103,"column_start":10,"column_end":22},"name":"FlashMessage","qualname":"::response::flash::FlashMessage","value":"::response::Flash<&'a Request<'r>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to retrieve [`Flash`] messages from a request.","sig":null,"attributes":[{"value":"/ Type alias to retrieve [`Flash`] messages from a request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235156,"byte_end":235217,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235218,"byte_end":235221,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Flash Cookie","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235222,"byte_end":235240,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235241,"byte_end":235244,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ A `FlashMessage` holds the parsed contents of the flash cookie. As long as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235245,"byte_end":235323,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ there is a flash cookie present (set by the `Flash` `Responder`), a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235324,"byte_end":235395,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ `FlashMessage` request guard will succeed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235396,"byte_end":235442,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235443,"byte_end":235446,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The flash cookie is cleared if either the [`name()`] or [`msg()`] method is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235447,"byte_end":235526,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ called. If neither method is called, the flash cookie is not cleared.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235527,"byte_end":235600,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235601,"byte_end":235604,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [`name()`]: Flash::name()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235605,"byte_end":235634,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"/ [`msg()`]: Flash::msg()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235635,"byte_end":235662,"line_start":102,"line_end":102,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236235,"byte_end":236238,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Flash<R>>::new","value":"fn <N, M> (res: R, name: N, msg: M) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Flash` message with the given `name`, `msg`, and\n underlying `responder`.","sig":null,"attributes":[{"value":"/ Constructs a new `Flash` message with the given `name`, `msg`, and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235774,"byte_end":235844,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ underlying `responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235849,"byte_end":235876,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235881,"byte_end":235884,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235889,"byte_end":235903,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235908,"byte_end":235911,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Construct a \"suggestion\" message with contents \"Try this out!\" that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235916,"byte_end":235987,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ redirects to \"/\".","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235992,"byte_end":236013,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236018,"byte_end":236021,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236026,"byte_end":236037,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::{Redirect, Flash};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236042,"byte_end":236086,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236091,"byte_end":236094,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236099,"byte_end":236131,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ let msg = Flash::new(Redirect::to(\"/\"), \"suggestion\", \"Try this out!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236136,"byte_end":236211,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236216,"byte_end":236223,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236934,"byte_end":236941,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"success","qualname":"<Flash<R>>::success","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"success\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[{"value":"/ Constructs a \"success\" `Flash` message with the given `responder` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236506,"byte_end":236579,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ `msg`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236584,"byte_end":236594,"line_start":130,"line_end":130,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236599,"byte_end":236602,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236607,"byte_end":236621,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236626,"byte_end":236629,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Construct a \"success\" message with contents \"It worked!\" that redirects","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236634,"byte_end":236709,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ to \"/\".","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236714,"byte_end":236725,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236730,"byte_end":236733,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236738,"byte_end":236749,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::{Redirect, Flash};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236754,"byte_end":236798,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236803,"byte_end":236806,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236811,"byte_end":236843,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ let msg = Flash::success(Redirect::to(\"/\"), \"It worked!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236848,"byte_end":236910,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":236915,"byte_end":236922,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237478,"byte_end":237485,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"warning","qualname":"<Flash<R>>::warning","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"warning\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[{"value":"/ Constructs a \"warning\" `Flash` message with the given `responder` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237050,"byte_end":237123,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ `msg`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237128,"byte_end":237138,"line_start":148,"line_end":148,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237143,"byte_end":237146,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237151,"byte_end":237165,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237170,"byte_end":237173,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Construct a \"warning\" message with contents \"Watch out!\" that redirects","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237178,"byte_end":237253,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ to \"/\".","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237258,"byte_end":237269,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237274,"byte_end":237277,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237282,"byte_end":237293,"line_start":155,"line_end":155,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::{Redirect, Flash};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237298,"byte_end":237342,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237347,"byte_end":237350,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237355,"byte_end":237387,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/ let msg = Flash::warning(Redirect::to(\"/\"), \"Watch out!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237392,"byte_end":237454,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237459,"byte_end":237466,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":238012,"byte_end":238017,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"error","qualname":"<Flash<R>>::error","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an \"error\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[{"value":"/ Constructs an \"error\" `Flash` message with the given `responder` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237594,"byte_end":237666,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ `msg`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237671,"byte_end":237681,"line_start":166,"line_end":166,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237686,"byte_end":237689,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237694,"byte_end":237708,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237713,"byte_end":237716,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Construct an \"error\" message with contents \"Whoops!\" that redirects","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237721,"byte_end":237792,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ to \"/\".","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237797,"byte_end":237808,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237813,"byte_end":237816,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237821,"byte_end":237832,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ use rocket::response::{Redirect, Flash};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237837,"byte_end":237881,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237886,"byte_end":237889,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237894,"byte_end":237926,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ let msg = Flash::error(Redirect::to(\"/\"), \"Whoops!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237931,"byte_end":237988,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":237993,"byte_end":238000,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":239812,"byte_end":239816,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"name","qualname":"<Flash<&'a Request>>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `name` of this message.\n","sig":null,"attributes":[{"value":"/ Returns the `name` of this message.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":239761,"byte_end":239800,"line_start":225,"line_end":225,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":239962,"byte_end":239965,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"msg","qualname":"<Flash<&'a Request>>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `msg` contents of this message.\n","sig":null,"attributes":[{"value":"/ Returns the `msg` contents of this message.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":239903,"byte_end":239950,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1121},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"content","qualname":"::response::content","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":2795},{"krate":0,"index":2809},{"krate":0,"index":2806},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":2840},{"krate":0,"index":2853},{"krate":0,"index":2850},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2812},{"krate":0,"index":2856},{"krate":0,"index":2869},{"krate":0,"index":2866},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2816},{"krate":0,"index":2872},{"krate":0,"index":2885},{"krate":0,"index":2882},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2820},{"krate":0,"index":2888},{"krate":0,"index":2901},{"krate":0,"index":2898},{"krate":0,"index":2892},{"krate":0,"index":2894},{"krate":0,"index":2824},{"krate":0,"index":2904},{"krate":0,"index":2917},{"krate":0,"index":2914},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2828},{"krate":0,"index":2920},{"krate":0,"index":2933},{"krate":0,"index":2930},{"krate":0,"index":2924},{"krate":0,"index":2926},{"krate":0,"index":2832},{"krate":0,"index":2936},{"krate":0,"index":2949},{"krate":0,"index":2946},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2836}],"decl_id":null,"docs":" Contains types that set the Content-Type of a response.","sig":null,"attributes":[{"value":"! Contains types that set the Content-Type of a response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241195,"byte_end":241254,"line_start":1,"line_end":1,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241255,"byte_end":241258,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241259,"byte_end":241270,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241271,"byte_end":241274,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Each type wraps a given responder. The `Responder` implementation of each","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241275,"byte_end":241352,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"! type replaces the Content-Type of the wrapped responder and delegates the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241353,"byte_end":241430,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! remainder of the response to the wrapped responder. This allows for setting","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241431,"byte_end":241510,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! the Content-Type of a type that doesn't set it itself or for overriding one","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241511,"byte_end":241590,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! that does.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241591,"byte_end":241605,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241606,"byte_end":241609,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241610,"byte_end":241623,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241624,"byte_end":241627,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! The following snippet creates an `Html` content response for a string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241628,"byte_end":241702,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"! Normally, raw strings set their response Content-Type to `text/plain`. By","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241703,"byte_end":241780,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"! using the `Html` content response, the Content-Type will be set to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241781,"byte_end":241851,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! `text/html` instead.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241852,"byte_end":241876,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241877,"byte_end":241880,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241881,"byte_end":241892,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"! use rocket::response::content;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241893,"byte_end":241927,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241928,"byte_end":241931,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241932,"byte_end":241964,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"! let response = content::Html(\"<h1>Hello, world!</h1>\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":241965,"byte_end":242024,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242025,"byte_end":242032,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2795},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242569,"byte_end":242576,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Content","qualname":"::response::content::Content","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the Content-Type of a `Responder` to a chosen value.","sig":null,"attributes":[{"value":"/ Sets the Content-Type of a `Responder` to a chosen value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242127,"byte_end":242188,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242189,"byte_end":242192,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242193,"byte_end":242262,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242263,"byte_end":242266,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242267,"byte_end":242280,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242281,"byte_end":242284,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Set the Content-Type of a string to PDF.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242285,"byte_end":242329,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242330,"byte_end":242333,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242334,"byte_end":242345,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::content::Content;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242346,"byte_end":242389,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use rocket::http::ContentType;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242390,"byte_end":242424,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242425,"byte_end":242428,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242429,"byte_end":242461,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ let response = Content(ContentType::PDF, \"Hi.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242462,"byte_end":242514,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242515,"byte_end":242522,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2840},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244004,"byte_end":244008,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Json","qualname":"::response::content::Json","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nJSON\n</b>, or <i>\napplication/json\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244048,"byte_end":244051,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"Xml","qualname":"::response::content::Xml","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nXML\n</b>, or <i>\ntext/xml\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2872},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244081,"byte_end":244088,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"MsgPack","qualname":"::response::content::MsgPack","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nMessagePack\n</b>, or <i>\napplication/msgpack\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2888},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244141,"byte_end":244145,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"Html","qualname":"::response::content::Html","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nHTML\n</b>, or <i>\ntext/html\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244178,"byte_end":244183,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Plain","qualname":"::response::content::Plain","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nplain text\n</b>, or <i>\ntext/plain\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2920},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244224,"byte_end":244227,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Css","qualname":"::response::content::Css","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nCSS\n</b>, or <i>\ntext/css\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":244257,"byte_end":244267,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"JavaScript","qualname":"::response::content::JavaScript","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nJavaScript\n</b>, or <i>\napplication/javascript\n</i>.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243336,"byte_end":243339,"line_start":67,"line_end":67,"column_start":13,"column_end":16}},{"value":"/ Delegates the remainder of the response to the wrapped responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":243352,"byte_end":243421,"line_start":68,"line_end":68,"column_start":13,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":1134},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"status","qualname":"::response::status","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":2952},{"krate":0,"index":2966},{"krate":0,"index":2963},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":1145},{"krate":0,"index":1149},{"krate":0,"index":2969},{"krate":0,"index":2982},{"krate":0,"index":2979},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":1153},{"krate":0,"index":2985},{"krate":0,"index":2992},{"krate":0,"index":2990},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":1157},{"krate":0,"index":2994},{"krate":0,"index":3007},{"krate":0,"index":3004},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":1160},{"krate":0,"index":3010},{"krate":0,"index":3023},{"krate":0,"index":3020},{"krate":0,"index":3014},{"krate":0,"index":3016},{"krate":0,"index":1164},{"krate":0,"index":3026},{"krate":0,"index":3039},{"krate":0,"index":3036},{"krate":0,"index":3030},{"krate":0,"index":3032},{"krate":0,"index":1168},{"krate":0,"index":3042},{"krate":0,"index":3055},{"krate":0,"index":3052},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":1172},{"krate":0,"index":3058},{"krate":0,"index":3071},{"krate":0,"index":3068},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":1176},{"krate":0,"index":3074},{"krate":0,"index":3088},{"krate":0,"index":3085},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":1180}],"decl_id":null,"docs":" Contains types that set the status code and corresponding headers of a\n response.","sig":null,"attributes":[{"value":"! Contains types that set the status code and corresponding headers of a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244323,"byte_end":244397,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"! response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244398,"byte_end":244411,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244412,"byte_end":244415,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! These types are designed to make it easier to respond correctly with a given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244416,"byte_end":244496,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"! status code. Each type takes in the minimum number of parameters required to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244497,"byte_end":244577,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! construct a proper response with that status code. Some types take in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244578,"byte_end":244651,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"! responders; when they do, the responder finalizes the response by writing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244652,"byte_end":244729,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"! out additional headers and, importantly, the body of the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244730,"byte_end":244800,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2952},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245528,"byte_end":245535,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Created","qualname":"::response::status::Created","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 201 (Created).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 201 (Created).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":244984,"byte_end":245037,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245038,"byte_end":245041,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `String` field is set as the value of the `Location` header in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245042,"byte_end":245116,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ response. The optional `Responder` field is used to finalize the response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245117,"byte_end":245195,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245196,"byte_end":245199,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245200,"byte_end":245213,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245214,"byte_end":245217,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245218,"byte_end":245229,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245230,"byte_end":245263,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245264,"byte_end":245267,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let url = \"http://myservice.com/resource.json\".to_string();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245268,"byte_end":245331,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ let content = \"{ 'resource': 'Hello, world!' }\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245332,"byte_end":245384,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245385,"byte_end":245417,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ let response = status::Created(url, Some(content));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245418,"byte_end":245473,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":245474,"byte_end":245481,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2969},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247870,"byte_end":247878,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Accepted","qualname":"::response::status::Accepted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 202 (Accepted).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 202 (Accepted).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247203,"byte_end":247257,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247258,"byte_end":247261,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If a responder is supplied, the remainder of the response is delegated to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247262,"byte_end":247339,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ it. If there is no responder, the body of the response will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247340,"byte_end":247413,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247414,"byte_end":247417,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247418,"byte_end":247432,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247433,"byte_end":247436,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ A 202 Accepted response without a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247437,"byte_end":247480,"line_start":81,"line_end":81,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247481,"byte_end":247484,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247485,"byte_end":247496,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247497,"byte_end":247530,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247531,"byte_end":247534,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247535,"byte_end":247567,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let response = status::Accepted::<()>(None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247568,"byte_end":247616,"line_start":87,"line_end":87,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247617,"byte_end":247624,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247625,"byte_end":247628,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ A 202 Accepted response _with_ a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247629,"byte_end":247671,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247672,"byte_end":247675,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247676,"byte_end":247687,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247688,"byte_end":247721,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247722,"byte_end":247725,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247726,"byte_end":247758,"line_start":95,"line_end":95,"column_start":1,"column_end":33}},{"value":"/ let response = status::Accepted(Some(\"processing\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247759,"byte_end":247815,"line_start":96,"line_end":96,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":247816,"byte_end":247823,"line_start":97,"line_end":97,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2985},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248690,"byte_end":248699,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"NoContent","qualname":"::response::status::NoContent","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 204 (No Content).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 204 (No Content).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248360,"byte_end":248416,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248417,"byte_end":248420,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The response body will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248421,"byte_end":248457,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248458,"byte_end":248461,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248462,"byte_end":248475,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248476,"byte_end":248479,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ A 204 No Content response:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248480,"byte_end":248510,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248511,"byte_end":248514,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248515,"byte_end":248526,"line_start":122,"line_end":122,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248527,"byte_end":248560,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248561,"byte_end":248564,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248565,"byte_end":248597,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/ let response = status::NoContent;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248598,"byte_end":248635,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248636,"byte_end":248643,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2994},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249656,"byte_end":249666,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"BadRequest","qualname":"::response::status::BadRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 400 (Bad Request).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 400 (Bad Request).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248973,"byte_end":249030,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249031,"byte_end":249034,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ If a responder is supplied, the remainder of the response is delegated to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249035,"byte_end":249112,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ it. If there is no responder, the body of the response will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249113,"byte_end":249186,"line_start":142,"line_end":142,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249187,"byte_end":249190,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249191,"byte_end":249205,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249206,"byte_end":249209,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ A 400 Bad Request response without a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249210,"byte_end":249256,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249257,"byte_end":249260,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249261,"byte_end":249272,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249273,"byte_end":249306,"line_start":149,"line_end":149,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249307,"byte_end":249310,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249311,"byte_end":249343,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/ let response = status::BadRequest::<()>(None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249344,"byte_end":249394,"line_start":152,"line_end":152,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249395,"byte_end":249402,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249403,"byte_end":249406,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A 400 Bad Request response _with_ a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249407,"byte_end":249452,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249453,"byte_end":249456,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249457,"byte_end":249468,"line_start":157,"line_end":157,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249469,"byte_end":249502,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249503,"byte_end":249506,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249507,"byte_end":249539,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ let response = status::BadRequest(Some(\"error message\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249540,"byte_end":249601,"line_start":161,"line_end":161,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249602,"byte_end":249609,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3010},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250845,"byte_end":250857,"line_start":204,"line_end":204,"column_start":12,"column_end":24},"name":"Unauthorized","qualname":"::response::status::Unauthorized","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 401 (Unauthorized).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 401 (Unauthorized).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250155,"byte_end":250213,"line_start":179,"line_end":179,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250214,"byte_end":250217,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ If a responder is supplied, the remainder of the response is delegated to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250218,"byte_end":250295,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ it. If there is no responder, the body of the response will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250296,"byte_end":250369,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250370,"byte_end":250373,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250374,"byte_end":250388,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250389,"byte_end":250392,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ A 401 Unauthorized response without a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250393,"byte_end":250440,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250441,"byte_end":250444,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250445,"byte_end":250456,"line_start":188,"line_end":188,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250457,"byte_end":250490,"line_start":189,"line_end":189,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250491,"byte_end":250494,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250495,"byte_end":250527,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"/ let response = status::Unauthorized::<()>(None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250528,"byte_end":250580,"line_start":192,"line_end":192,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250581,"byte_end":250588,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250589,"byte_end":250592,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ A 401 Unauthorized response _with_ a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250593,"byte_end":250639,"line_start":195,"line_end":195,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250640,"byte_end":250643,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250644,"byte_end":250655,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250656,"byte_end":250689,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250690,"byte_end":250693,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250694,"byte_end":250726,"line_start":200,"line_end":200,"column_start":1,"column_end":33}},{"value":"/ let response = status::Unauthorized(Some(\"error message\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250727,"byte_end":250790,"line_start":201,"line_end":201,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":250791,"byte_end":250798,"line_start":202,"line_end":202,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3026},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252030,"byte_end":252039,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"Forbidden","qualname":"::response::status::Forbidden","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 403 (Forbidden).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 403 (Forbidden).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251355,"byte_end":251410,"line_start":219,"line_end":219,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251411,"byte_end":251414,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ If a responder is supplied, the remainder of the response is delegated to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251415,"byte_end":251492,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ it. If there is no responder, the body of the response will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251493,"byte_end":251566,"line_start":222,"line_end":222,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251567,"byte_end":251570,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251571,"byte_end":251585,"line_start":224,"line_end":224,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251586,"byte_end":251589,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ A 403 Forbidden response without a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251590,"byte_end":251634,"line_start":226,"line_end":226,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251635,"byte_end":251638,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251639,"byte_end":251650,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251651,"byte_end":251684,"line_start":229,"line_end":229,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251685,"byte_end":251688,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251689,"byte_end":251721,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/ let response = status::Forbidden::<()>(None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251722,"byte_end":251771,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251772,"byte_end":251779,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251780,"byte_end":251783,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ A 403 Forbidden response _with_ a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251784,"byte_end":251827,"line_start":235,"line_end":235,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251828,"byte_end":251831,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251832,"byte_end":251843,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251844,"byte_end":251877,"line_start":238,"line_end":238,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251878,"byte_end":251881,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251882,"byte_end":251914,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/ let response = status::Forbidden(Some(\"error message\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251915,"byte_end":251975,"line_start":241,"line_end":241,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251976,"byte_end":251983,"line_start":242,"line_end":242,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3042},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252889,"byte_end":252897,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"NotFound","qualname":"::response::status::NotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 404 (Not Found).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 404 (Not Found).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252528,"byte_end":252583,"line_start":259,"line_end":259,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252584,"byte_end":252587,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ The remainder of the response is delegated to the wrapped `Responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252588,"byte_end":252662,"line_start":261,"line_end":261,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252663,"byte_end":252666,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252667,"byte_end":252680,"line_start":263,"line_end":263,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252681,"byte_end":252684,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252685,"byte_end":252696,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252697,"byte_end":252730,"line_start":266,"line_end":266,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252731,"byte_end":252734,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252735,"byte_end":252767,"line_start":268,"line_end":268,"column_start":1,"column_end":33}},{"value":"/ let response = status::NotFound(\"Sorry, I couldn't find it!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252768,"byte_end":252834,"line_start":269,"line_end":269,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252835,"byte_end":252842,"line_start":270,"line_end":270,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253891,"byte_end":253899,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"Conflict","qualname":"::response::status::Conflict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 409 (Conflict).","sig":null,"attributes":[{"value":"/ Sets the status of the response to 409 (Conflict).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253221,"byte_end":253275,"line_start":284,"line_end":284,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253276,"byte_end":253279,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ If a responder is supplied, the remainder of the response is delegated to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253280,"byte_end":253357,"line_start":286,"line_end":286,"column_start":1,"column_end":78}},{"value":"/ it. If there is no responder, the body of the response will be empty.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253358,"byte_end":253431,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253432,"byte_end":253435,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253436,"byte_end":253450,"line_start":289,"line_end":289,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253451,"byte_end":253454,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ A 409 Conflict response without a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253455,"byte_end":253498,"line_start":291,"line_end":291,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253499,"byte_end":253502,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253503,"byte_end":253514,"line_start":293,"line_end":293,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253515,"byte_end":253548,"line_start":294,"line_end":294,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253549,"byte_end":253552,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253553,"byte_end":253585,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/ let response = status::Conflict::<()>(None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253586,"byte_end":253634,"line_start":297,"line_end":297,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253635,"byte_end":253642,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253643,"byte_end":253646,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ A 409 Conflict response _with_ a body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253647,"byte_end":253689,"line_start":300,"line_end":300,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253690,"byte_end":253693,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253694,"byte_end":253705,"line_start":302,"line_end":302,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253706,"byte_end":253739,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253740,"byte_end":253743,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253744,"byte_end":253776,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/ let response = status::Conflict(Some(\"error message\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253777,"byte_end":253836,"line_start":306,"line_end":306,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253837,"byte_end":253844,"line_start":307,"line_end":307,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254711,"byte_end":254717,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"Custom","qualname":"::response::status::Custom","value":"","parent":null,"children":[],"decl_id":null,"docs":" Creates a response with the given status code and underlying responder.","sig":null,"attributes":[{"value":"/ Creates a response with the given status code and underlying responder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254385,"byte_end":254460,"line_start":324,"line_end":324,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254461,"byte_end":254464,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254465,"byte_end":254478,"line_start":326,"line_end":326,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254479,"byte_end":254482,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254483,"byte_end":254494,"line_start":328,"line_end":328,"column_start":1,"column_end":12}},{"value":"/ use rocket::response::status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254495,"byte_end":254528,"line_start":329,"line_end":329,"column_start":1,"column_end":34}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254529,"byte_end":254558,"line_start":330,"line_end":330,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254559,"byte_end":254562,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254563,"byte_end":254595,"line_start":332,"line_end":332,"column_start":1,"column_end":33}},{"value":"/ let response = status::Custom(Status::ImATeapot, \"Hi!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254596,"byte_end":254656,"line_start":333,"line_end":333,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254657,"byte_end":254664,"line_start":334,"line_end":334,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1197},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165794,"byte_end":165800,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Result","qualname":"::response::Result","value":"::std::result::Result<self::Response<'r>, ::http::Status>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Result` of a `Responder::respond` call.\n","sig":null,"attributes":[{"value":"/ Type alias for the `Result` of a `Responder::respond` call.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165721,"byte_end":165784,"line_start":49,"line_end":49,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":1199},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"outcome","qualname":"::outcome","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":3091},{"krate":0,"index":3147},{"krate":0,"index":3143},{"krate":0,"index":3133},{"krate":0,"index":3137},{"krate":0,"index":3124},{"krate":0,"index":3115},{"krate":0,"index":3119},{"krate":0,"index":3110},{"krate":0,"index":3104},{"krate":0,"index":1206},{"krate":0,"index":1214},{"krate":0,"index":1222},{"krate":0,"index":1260},{"krate":0,"index":1269},{"krate":0,"index":1274}],"decl_id":null,"docs":" Success, failure, and forward handling.","sig":null,"attributes":[{"value":"! Success, failure, and forward handling.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255217,"byte_end":255260,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255261,"byte_end":255264,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `Outcome<S, E, F>` type is similar to the standard library's `Result<S,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255265,"byte_end":255344,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! E>` type. It is an enum with three variants, each containing a value:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255345,"byte_end":255418,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! `Success(S)`, which represents a successful outcome, `Failure(E)`, which","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255419,"byte_end":255495,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! represents a failing outcome, and `Forward(F)`, which represents neither a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255496,"byte_end":255574,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! success or failure, but instead, indicates that processing could not be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255575,"byte_end":255650,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"! handled and should instead be _forwarded_ to whatever can handle the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255651,"byte_end":255723,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! processing next.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255724,"byte_end":255744,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255745,"byte_end":255748,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The `Outcome` type is the return type of many of the core Rocket traits,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255749,"byte_end":255825,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"! including [`FromRequest`](crate::request::FromRequest), [`FromData`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255826,"byte_end":255898,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"! [`Responder`]. It is also the return type of request handlers via the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255899,"byte_end":255972,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! [`Response`](crate::response::Response) type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":255973,"byte_end":256022,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256023,"byte_end":256026,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! [`FromData`]: crate::data::FromData","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256027,"byte_end":256066,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"! [`Responder`]: crate::response::Responder","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256067,"byte_end":256112,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256113,"byte_end":256116,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! # Success","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256117,"byte_end":256130,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256131,"byte_end":256134,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! A successful `Outcome<S, E, F>`, `Success(S)`, is returned from functions","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256135,"byte_end":256212,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! that complete successfully. The meaning of a `Success` outcome depends on","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256213,"byte_end":256290,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"! the context. For instance, the `Outcome` of the `from_data` method of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256291,"byte_end":256368,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! [`FromData`] trait will be matched against the type expected by the user.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256369,"byte_end":256446,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"! For example, consider the following handler:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256447,"byte_end":256495,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256496,"byte_end":256499,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256500,"byte_end":256518,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"! #[post(\"/\", data = \"<my_val>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256519,"byte_end":256554,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"! fn hello(my_val: S) -> ... {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256555,"byte_end":256590,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256591,"byte_end":256598,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256599,"byte_end":256602,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! The [`FromData`] implementation for the type `S` returns an `Outcome` with a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256603,"byte_end":256683,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! `Success(S)`. If `from_data` returns a `Success`, the `Success` value will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256684,"byte_end":256762,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"! be unwrapped and the value will be used as the value of `my_val`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256763,"byte_end":256832,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256833,"byte_end":256836,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Failure","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256837,"byte_end":256850,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256851,"byte_end":256854,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! A failure `Outcome<S, E, F>`, `Failure(E)`, is returned when a function","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256855,"byte_end":256930,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"! fails with some error and no processing can or should continue as a result.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":256931,"byte_end":257010,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! The meaning of a failure depends on the context.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257011,"byte_end":257063,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257064,"byte_end":257067,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! In Rocket, a `Failure` generally means that a request is taken out of normal","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257068,"byte_end":257148,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"! processing. The request is then given to the catcher corresponding to some","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257149,"byte_end":257227,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! status code. Users can catch failures by requesting a type of `Result<S, E>`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257228,"byte_end":257308,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! or `Option<S>` in request handlers. For example, if a user's handler looks","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257309,"byte_end":257387,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"! like:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257388,"byte_end":257397,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257398,"byte_end":257401,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257402,"byte_end":257420,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"! #[post(\"/\", data = \"<my_val>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257421,"byte_end":257456,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"! fn hello(my_val: Result<S, E>) -> ... {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257457,"byte_end":257503,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257504,"byte_end":257511,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257512,"byte_end":257515,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! The [`FromData`] implementation for the type `S` returns an `Outcome` with a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257516,"byte_end":257596,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"! `Success(S)` and `Failure(E)`. If `from_data` returns a `Failure`, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257597,"byte_end":257671,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"! `Failure` value will be unwrapped and the value will be used as the `Err`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257672,"byte_end":257749,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"! value of `my_val` while a `Success` will be unwrapped and used the `Ok`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257750,"byte_end":257825,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257826,"byte_end":257836,"line_start":57,"line_end":57,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257837,"byte_end":257840,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # Forward","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257841,"byte_end":257854,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257855,"byte_end":257858,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! A forward `Outcome<S, E, F>`, `Forward(F)`, is returned when a function","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257859,"byte_end":257934,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! wants to indicate that the requested processing should be _forwarded_ to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":257935,"byte_end":258015,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"! next available processor. Again, the exact meaning depends on the context.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258016,"byte_end":258094,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258095,"byte_end":258098,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! In Rocket, a `Forward` generally means that a request is forwarded to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258099,"byte_end":258176,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"! next available request handler. For example, consider the following request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258177,"byte_end":258256,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! handler:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258257,"byte_end":258269,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258270,"byte_end":258273,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258274,"byte_end":258292,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! #[post(\"/\", data = \"<my_val>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258293,"byte_end":258328,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"! fn hello(my_val: S) -> ... {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258329,"byte_end":258364,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258365,"byte_end":258372,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258373,"byte_end":258376,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! The [`FromData`] implementation for the type `S` returns an `Outcome` with a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258377,"byte_end":258457,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"! `Success(S)`, `Failure(E)`, and `Forward(F)`. If the `Outcome` is a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258458,"byte_end":258529,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"! `Forward`, the `hello` handler isn't called. Instead, the incoming request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258530,"byte_end":258608,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! is forwarded, or passed on to, the next matching route, if any. Ultimately,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258609,"byte_end":258688,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"! if there are no non-forwarding routes, forwarded requests are handled by the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258689,"byte_end":258769,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"! 404 catcher. Similar to `Failure`s, users can catch `Forward`s by requesting","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258770,"byte_end":258850,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"! a type of `Option<S>`. If an `Outcome` is a `Forward`, the `Option` will be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258851,"byte_end":258930,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"! `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":258931,"byte_end":258942,"line_start":81,"line_end":81,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259347,"byte_end":259354,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Success","qualname":"::outcome::Outcome::Success","value":"Outcome::Success(S)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Contains the success value.\n","sig":null,"attributes":[{"value":"/ Contains the success value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259311,"byte_end":259342,"line_start":97,"line_end":97,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3098},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259405,"byte_end":259412,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Failure","qualname":"::outcome::Outcome::Failure","value":"Outcome::Failure(E)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Contains the failure error value.\n","sig":null,"attributes":[{"value":"/ Contains the failure error value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259363,"byte_end":259400,"line_start":99,"line_end":99,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259463,"byte_end":259470,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Forward","qualname":"::outcome::Outcome::Forward","value":"Outcome::Forward(F)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Contains the value to forward on.\n","sig":null,"attributes":[{"value":"/ Contains the value to forward on.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259421,"byte_end":259458,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":3091},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259288,"byte_end":259295,"line_start":96,"line_end":96,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::outcome::Outcome","value":"Outcome::{Success, Failure, Forward}","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3098},{"krate":0,"index":3101}],"decl_id":null,"docs":" An enum representing success (`Success`), failure (`Failure`), or\n forwarding (`Forward`).","sig":null,"attributes":[{"value":"/ An enum representing success (`Success`), failure (`Failure`), or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259029,"byte_end":259098,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ forwarding (`Forward`).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259099,"byte_end":259126,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259127,"byte_end":259130,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ See the [top level documentation](::outcome) for detailed information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259131,"byte_end":259205,"line_start":93,"line_end":93,"column_start":1,"column_end":75}},{"value":"must_use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259206,"byte_end":259217,"line_start":94,"line_end":94,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1206},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259546,"byte_end":259557,"line_start":106,"line_end":106,"column_start":11,"column_end":22},"name":"IntoOutcome","qualname":"::outcome::IntoOutcome","value":"IntoOutcome<S, E, F>","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" Conversion trait from some type into an Outcome type.\n","sig":null,"attributes":[{"value":"/ Conversion trait from some type into an Outcome type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259478,"byte_end":259535,"line_start":105,"line_end":105,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1210},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259640,"byte_end":259647,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"Failure","qualname":"::outcome::IntoOutcome::Failure","value":"type Failure: Sized;","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Failure`.\n","sig":null,"attributes":[{"value":"/ The type to use when returning an `Outcome::Failure`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259573,"byte_end":259630,"line_start":107,"line_end":107,"column_start":5,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1211},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259728,"byte_end":259735,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"Forward","qualname":"::outcome::IntoOutcome::Forward","value":"type Forward: Sized;","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Forward`.\n","sig":null,"attributes":[{"value":"/ The type to use when returning an `Outcome::Forward`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259661,"byte_end":259718,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259958,"byte_end":259970,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"into_outcome","qualname":"::outcome::IntoOutcome::into_outcome","value":"fn (self, failure: Self::Failure) -> Outcome<S, E, F>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Failure` is\n returned with `failure` as the inner value.\n","sig":null,"attributes":[{"value":"/ Converts `self` into an `Outcome`. If `self` represents a success, an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259749,"byte_end":259822,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ `Outcome::Success` is returned. Otherwise, an `Outcome::Failure` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259827,"byte_end":259898,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned with `failure` as the inner value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":259903,"byte_end":259950,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260236,"byte_end":260246,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"or_forward","qualname":"::outcome::IntoOutcome::or_forward","value":"fn (self, forward: Self::Forward) -> Outcome<S, E, F>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Forward` is\n returned with `forward` as the inner value.\n","sig":null,"attributes":[{"value":"/ Converts `self` into an `Outcome`. If `self` represents a success, an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260027,"byte_end":260100,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ `Outcome::Success` is returned. Otherwise, an `Outcome::Forward` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260105,"byte_end":260176,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ returned with `forward` as the inner value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260181,"byte_end":260228,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261223,"byte_end":261229,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Outcome<S, E, F>>::unwrap","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"/ Unwraps the Outcome, yielding the contents of a Success.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260810,"byte_end":260870,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260875,"byte_end":260878,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260883,"byte_end":260895,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260900,"byte_end":260903,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is not `Success`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260908,"byte_end":260949,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260954,"byte_end":260957,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260962,"byte_end":260976,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260981,"byte_end":260984,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260989,"byte_end":261000,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261005,"byte_end":261040,"line_start":155,"line_end":155,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261045,"byte_end":261083,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261088,"byte_end":261093,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261098,"byte_end":261149,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.unwrap(), 10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261154,"byte_end":261185,"line_start":159,"line_end":159,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261190,"byte_end":261197,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261202,"byte_end":261211,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261830,"byte_end":261836,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"expect","qualname":"<Outcome<S, E, F>>::expect","value":"fn (self, message: &str) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"/ Unwraps the Outcome, yielding the contents of a Success.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261376,"byte_end":261436,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261441,"byte_end":261444,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261449,"byte_end":261461,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261466,"byte_end":261469,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If the value is not `Success`, panics with the given `message`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261474,"byte_end":261541,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261546,"byte_end":261549,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261554,"byte_end":261568,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261573,"byte_end":261576,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261581,"byte_end":261592,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261597,"byte_end":261632,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261637,"byte_end":261675,"line_start":179,"line_end":179,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261680,"byte_end":261685,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261690,"byte_end":261741,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.expect(\"success value\"), 10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261746,"byte_end":261792,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261797,"byte_end":261804,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":261809,"byte_end":261818,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262565,"byte_end":262575,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"is_success","qualname":"<Outcome<S, E, F>>::is_success","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Success`.","sig":null,"attributes":[{"value":"/ Return true if this `Outcome` is a `Success`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262005,"byte_end":262054,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262059,"byte_end":262062,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262067,"byte_end":262081,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262086,"byte_end":262089,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262094,"byte_end":262105,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262110,"byte_end":262145,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262150,"byte_end":262188,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262193,"byte_end":262198,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262203,"byte_end":262254,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_success(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262259,"byte_end":262296,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262301,"byte_end":262304,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262309,"byte_end":262377,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.is_success(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262382,"byte_end":262420,"line_start":204,"line_end":204,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262425,"byte_end":262428,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262433,"byte_end":262484,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_success(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262489,"byte_end":262527,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262532,"byte_end":262539,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262544,"byte_end":262553,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263251,"byte_end":263261,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"is_failure","qualname":"<Outcome<S, E, F>>::is_failure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Failure`.","sig":null,"attributes":[{"value":"/ Return true if this `Outcome` is a `Failure`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262691,"byte_end":262740,"line_start":217,"line_end":217,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262745,"byte_end":262748,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262753,"byte_end":262767,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262772,"byte_end":262775,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262780,"byte_end":262791,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262796,"byte_end":262831,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262836,"byte_end":262874,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262879,"byte_end":262884,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262889,"byte_end":262940,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_failure(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262945,"byte_end":262983,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262988,"byte_end":262991,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":262996,"byte_end":263064,"line_start":228,"line_end":228,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.is_failure(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263069,"byte_end":263106,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263111,"byte_end":263114,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263119,"byte_end":263170,"line_start":231,"line_end":231,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_failure(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263175,"byte_end":263213,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263218,"byte_end":263225,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263230,"byte_end":263239,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263937,"byte_end":263947,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"is_forward","qualname":"<Outcome<S, E, F>>::is_forward","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Forward`.","sig":null,"attributes":[{"value":"/ Return true if this `Outcome` is a `Forward`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263377,"byte_end":263426,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263431,"byte_end":263434,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263439,"byte_end":263453,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263458,"byte_end":263461,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263466,"byte_end":263477,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263482,"byte_end":263517,"line_start":247,"line_end":247,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263522,"byte_end":263560,"line_start":248,"line_end":248,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263565,"byte_end":263570,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263575,"byte_end":263626,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_forward(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263631,"byte_end":263669,"line_start":251,"line_end":251,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263674,"byte_end":263677,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263682,"byte_end":263750,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.is_forward(), false);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263755,"byte_end":263793,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263798,"byte_end":263801,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263806,"byte_end":263857,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.is_forward(), true);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263862,"byte_end":263899,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263904,"byte_end":263911,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":263916,"byte_end":263925,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264764,"byte_end":264773,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"succeeded","qualname":"<Outcome<S, E, F>>::succeeded","value":"fn (self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<S>`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Option<S>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264063,"byte_end":264115,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264120,"byte_end":264123,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Returns the `Some` of the `Success` if this is a `Success`, otherwise","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264128,"byte_end":264201,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ returns `None`. `self` is consumed, and all other values are discarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264206,"byte_end":264281,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264286,"byte_end":264289,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264294,"byte_end":264305,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264310,"byte_end":264345,"line_start":273,"line_end":273,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264350,"byte_end":264388,"line_start":274,"line_end":274,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264393,"byte_end":264398,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264403,"byte_end":264454,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.succeeded(), Some(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264459,"byte_end":264499,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264504,"byte_end":264507,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264512,"byte_end":264580,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.succeeded(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264585,"byte_end":264621,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264626,"byte_end":264629,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264634,"byte_end":264685,"line_start":282,"line_end":282,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.succeeded(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264690,"byte_end":264726,"line_start":283,"line_end":283,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264731,"byte_end":264738,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264743,"byte_end":264752,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265607,"byte_end":265613,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"failed","qualname":"<Outcome<S, E, F>>::failed","value":"fn (self) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<E>`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Option<E>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264898,"byte_end":264950,"line_start":293,"line_end":293,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264955,"byte_end":264958,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Returns the `Some` of the `Failure` if this is a `Failure`, otherwise","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":264963,"byte_end":265036,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ returns `None`. `self` is consumed, and all other values are discarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265041,"byte_end":265116,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265121,"byte_end":265124,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265129,"byte_end":265140,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265145,"byte_end":265180,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265185,"byte_end":265223,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265228,"byte_end":265233,"line_start":301,"line_end":301,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265238,"byte_end":265289,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.failed(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265294,"byte_end":265327,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265332,"byte_end":265335,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265340,"byte_end":265408,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.failed(), Some(\"Hi! I'm an error.\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265413,"byte_end":265467,"line_start":306,"line_end":306,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265472,"byte_end":265475,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265480,"byte_end":265531,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.failed(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265536,"byte_end":265569,"line_start":309,"line_end":309,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265574,"byte_end":265581,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265586,"byte_end":265595,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266439,"byte_end":266448,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"forwarded","qualname":"<Outcome<S, E, F>>::forwarded","value":"fn (self) -> Option<F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<F>`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Option<F>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265738,"byte_end":265790,"line_start":319,"line_end":319,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265795,"byte_end":265798,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Returns the `Some` of the `Forward` if this is a `Forward`, otherwise","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265803,"byte_end":265876,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ returns `None`. `self` is consumed, and all other values are discarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265881,"byte_end":265956,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265961,"byte_end":265964,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265969,"byte_end":265980,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":265985,"byte_end":266020,"line_start":325,"line_end":325,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266025,"byte_end":266063,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266068,"byte_end":266073,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266078,"byte_end":266129,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.forwarded(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266134,"byte_end":266170,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266175,"byte_end":266178,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266183,"byte_end":266251,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.forwarded(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266256,"byte_end":266292,"line_start":332,"line_end":332,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266297,"byte_end":266300,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266305,"byte_end":266356,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.forwarded(), Some(25));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266361,"byte_end":266401,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266406,"byte_end":266413,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266418,"byte_end":266427,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267363,"byte_end":267373,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"success_or","qualname":"<Outcome<S, E, F>>::success_or","value":"fn <T> (self, value: T) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266573,"byte_end":266644,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266649,"byte_end":266652,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the `Success` value if this is a `Success`, otherwise","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266657,"byte_end":266732,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ returns an `Err` with the provided value. `self` is consumed, and all","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266737,"byte_end":266810,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ other values are discarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266815,"byte_end":266846,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266851,"byte_end":266854,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266859,"byte_end":266870,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266875,"byte_end":266910,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266915,"byte_end":266953,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266958,"byte_end":266963,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":266968,"byte_end":267019,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.success_or(false), Ok(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267024,"byte_end":267068,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267073,"byte_end":267076,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267081,"byte_end":267149,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.success_or(false), Err(false));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267154,"byte_end":267202,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267207,"byte_end":267210,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267215,"byte_end":267266,"line_start":361,"line_end":361,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.success_or(\"whoops\"), Err(\"whoops\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267271,"byte_end":267325,"line_start":362,"line_end":362,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267330,"byte_end":267337,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267342,"byte_end":267351,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268392,"byte_end":268407,"line_start":393,"line_end":393,"column_start":12,"column_end":27},"name":"success_or_else","qualname":"<Outcome<S, E, F>>::success_or_else","value":"fn <T, V> (self, f: V) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`\n produced from a supplied function or closure.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267518,"byte_end":267588,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ produced from a supplied function or closure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267593,"byte_end":267642,"line_start":373,"line_end":373,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267647,"byte_end":267650,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the `Success` value if this is a `Success`, otherwise","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267655,"byte_end":267730,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ returns an `Err` with the result of calling `f`. `self` is consumed, and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267735,"byte_end":267811,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ all other values are discarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267816,"byte_end":267851,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267856,"byte_end":267859,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267864,"byte_end":267875,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267880,"byte_end":267915,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267920,"byte_end":267958,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267963,"byte_end":267968,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":267973,"byte_end":268024,"line_start":383,"line_end":383,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.success_or_else(|| false), Ok(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268029,"byte_end":268081,"line_start":384,"line_end":384,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268086,"byte_end":268089,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268094,"byte_end":268162,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.success_or_else(|| false), Err(false));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268167,"byte_end":268223,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268228,"byte_end":268231,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(25);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268236,"byte_end":268287,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.success_or_else(|| \"whoops\"), Err(\"whoops\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268292,"byte_end":268354,"line_start":390,"line_end":390,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268359,"byte_end":268366,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268371,"byte_end":268380,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269027,"byte_end":269033,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Outcome<S, E, F>>::as_ref","value":"fn (&self) -> Outcome<&S, &E, &F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&S, &E, &F>`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Outcome<&S, &E, &F>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268564,"byte_end":268626,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268631,"byte_end":268634,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268639,"byte_end":268650,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268655,"byte_end":268690,"line_start":403,"line_end":403,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268695,"byte_end":268733,"line_start":404,"line_end":404,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268738,"byte_end":268743,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268748,"byte_end":268799,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(x.as_ref(), Success(&10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268804,"byte_end":268845,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268850,"byte_end":268853,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"Hi! I'm an error.\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268858,"byte_end":268926,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(x.as_ref(), Failure(&\"Hi! I'm an error.\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268931,"byte_end":268989,"line_start":410,"line_end":410,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":268994,"byte_end":269001,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269006,"byte_end":269015,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269751,"byte_end":269754,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"map","qualname":"<Outcome<S, E, F>>::map","value":"fn <T, M> (self, f: M) -> Outcome<T, E, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the\n function `f` to the value of type `S` in `self` if `self` is an\n `Outcome::Success`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269247,"byte_end":269318,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `S` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269323,"byte_end":269390,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Success`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269395,"byte_end":269418,"line_start":423,"line_end":423,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269423,"byte_end":269426,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269431,"byte_end":269442,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269447,"byte_end":269482,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269487,"byte_end":269525,"line_start":427,"line_end":427,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269530,"byte_end":269535,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269540,"byte_end":269591,"line_start":429,"line_end":429,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269596,"byte_end":269599,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.map(|v| if v == 10 { \"10\" } else { \"not 10\" });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269604,"byte_end":269670,"line_start":431,"line_end":431,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(mapped, Success(\"10\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269675,"byte_end":269713,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269718,"byte_end":269725,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269730,"byte_end":269739,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270487,"byte_end":270498,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"map_failure","qualname":"<Outcome<S, E, F>>::map_failure","value":"fn <T, M> (self, f: M) -> Outcome<S, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the\n function `f` to the value of type `E` in `self` if `self` is an\n `Outcome::Failure`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":269982,"byte_end":270053,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `E` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270058,"byte_end":270125,"line_start":444,"line_end":444,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Failure`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270130,"byte_end":270153,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270158,"byte_end":270161,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270166,"byte_end":270177,"line_start":447,"line_end":447,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270182,"byte_end":270217,"line_start":448,"line_end":448,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270222,"byte_end":270260,"line_start":449,"line_end":449,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270265,"byte_end":270270,"line_start":450,"line_end":450,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Failure(\"hi\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270275,"byte_end":270328,"line_start":451,"line_end":451,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270333,"byte_end":270336,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.map_failure(|v| if v == \"hi\" { 10 } else { 0 });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270341,"byte_end":270408,"line_start":453,"line_end":453,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(mapped, Failure(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270413,"byte_end":270449,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270454,"byte_end":270461,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270466,"byte_end":270475,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271229,"byte_end":271240,"line_start":479,"line_end":479,"column_start":12,"column_end":23},"name":"map_forward","qualname":"<Outcome<S, E, F>>::map_forward","value":"fn <T, M> (self, f: M) -> Outcome<S, E, T>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the\n function `f` to the value of type `F` in `self` if `self` is an\n `Outcome::Forward`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270726,"byte_end":270797,"line_start":465,"line_end":465,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `F` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270802,"byte_end":270869,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Forward`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270874,"byte_end":270897,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270902,"byte_end":270905,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270910,"byte_end":270921,"line_start":469,"line_end":469,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270926,"byte_end":270961,"line_start":470,"line_end":470,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":270966,"byte_end":271004,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271009,"byte_end":271014,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, usize> = Forward(5);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271019,"byte_end":271069,"line_start":473,"line_end":473,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271074,"byte_end":271077,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.map_forward(|v| if v == 5 { \"a\" } else { \"b\" });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271082,"byte_end":271149,"line_start":475,"line_end":475,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(mapped, Forward(\"a\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271154,"byte_end":271191,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271196,"byte_end":271203,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271208,"byte_end":271217,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272087,"byte_end":272095,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Outcome<S, E, F>>::and_then","value":"fn <T, M> (self, f: M) -> Outcome<T, E, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the\n function `f` to the value of type `S` in `self` if `self` is an\n `Outcome::Success`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271468,"byte_end":271539,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `S` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271544,"byte_end":271611,"line_start":488,"line_end":488,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Success`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271616,"byte_end":271639,"line_start":489,"line_end":489,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271644,"byte_end":271647,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271652,"byte_end":271666,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271671,"byte_end":271674,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271679,"byte_end":271690,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271695,"byte_end":271730,"line_start":494,"line_end":494,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271735,"byte_end":271773,"line_start":495,"line_end":495,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271778,"byte_end":271783,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, bool> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271788,"byte_end":271838,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271843,"byte_end":271846,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.and_then(|v| match v {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271851,"byte_end":271892,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/    10 => Success(\"10\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271897,"byte_end":271924,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/    1 => Forward(false),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271929,"byte_end":271956,"line_start":501,"line_end":501,"column_start":5,"column_end":32}},{"value":"/    _ => Failure(\"30\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271961,"byte_end":271986,"line_start":502,"line_end":502,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":271991,"byte_end":271998,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272003,"byte_end":272006,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(mapped, Success(\"10\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272011,"byte_end":272049,"line_start":505,"line_end":505,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272054,"byte_end":272061,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272066,"byte_end":272075,"line_start":507,"line_end":507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272955,"byte_end":272967,"line_start":537,"line_end":537,"column_start":12,"column_end":24},"name":"failure_then","qualname":"<Outcome<S, E, F>>::failure_then","value":"fn <T, M> (self, f: M) -> Outcome<S, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the\n function `f` to the value of type `E` in `self` if `self` is an\n `Outcome::Failure`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272329,"byte_end":272400,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `E` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272405,"byte_end":272472,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Failure`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272477,"byte_end":272500,"line_start":518,"line_end":518,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272505,"byte_end":272508,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272513,"byte_end":272527,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272532,"byte_end":272535,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272540,"byte_end":272551,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272556,"byte_end":272591,"line_start":523,"line_end":523,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272596,"byte_end":272634,"line_start":524,"line_end":524,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272639,"byte_end":272644,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, bool> = Failure(\"hi\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272649,"byte_end":272701,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272706,"byte_end":272709,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.failure_then(|v| match v {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272714,"byte_end":272759,"line_start":528,"line_end":528,"column_start":5,"column_end":50}},{"value":"/    \"hi\" => Failure(10),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272764,"byte_end":272791,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/    \"test\" => Forward(false),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272796,"byte_end":272828,"line_start":530,"line_end":530,"column_start":5,"column_end":37}},{"value":"/    _ => Success(10)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272833,"byte_end":272856,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272861,"byte_end":272868,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272873,"byte_end":272876,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(mapped, Failure(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272881,"byte_end":272917,"line_start":534,"line_end":534,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272922,"byte_end":272929,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":272934,"byte_end":272943,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273855,"byte_end":273867,"line_start":566,"line_end":566,"column_start":12,"column_end":24},"name":"forward_then","qualname":"<Outcome<S, E, F>>::forward_then","value":"fn <T, M> (self, f: M) -> Outcome<S, E, T>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the\n function `f` to the value of type `F` in `self` if `self` is an\n `Outcome::Forward`.","sig":null,"attributes":[{"value":"/ Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273201,"byte_end":273272,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ function `f` to the value of type `F` in `self` if `self` is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273277,"byte_end":273344,"line_start":546,"line_end":546,"column_start":5,"column_end":72}},{"value":"/ `Outcome::Forward`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273349,"byte_end":273372,"line_start":547,"line_end":547,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273377,"byte_end":273380,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273385,"byte_end":273399,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273404,"byte_end":273407,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273412,"byte_end":273423,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273428,"byte_end":273463,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273468,"byte_end":273506,"line_start":553,"line_end":553,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273511,"byte_end":273516,"line_start":554,"line_end":554,"column_start":5,"column_end":10}},{"value":"/ let x: Outcome<i32, &str, Option<bool>> = Forward(Some(false));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273521,"byte_end":273588,"line_start":555,"line_end":555,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273593,"byte_end":273596,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let mapped = x.forward_then(|v| match v {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273601,"byte_end":273646,"line_start":557,"line_end":557,"column_start":5,"column_end":50}},{"value":"/    Some(true) => Success(10),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273651,"byte_end":273684,"line_start":558,"line_end":558,"column_start":5,"column_end":38}},{"value":"/    Some(false) => Forward(20),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273689,"byte_end":273723,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/    None => Failure(\"10\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273728,"byte_end":273756,"line_start":560,"line_end":560,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273761,"byte_end":273768,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273773,"byte_end":273776,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(mapped, Forward(20));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273781,"byte_end":273817,"line_start":563,"line_end":563,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273822,"byte_end":273829,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":273834,"byte_end":273843,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274510,"byte_end":274516,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Outcome<S, E, F>>::as_mut","value":"fn (&mut self) -> Outcome<&mut S, &mut E, &mut F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&mut S, &mut E, &mut F>`.","sig":null,"attributes":[{"value":"/ Converts from `Outcome<S, E, F>` to `Outcome<&mut S, &mut E, &mut F>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274101,"byte_end":274175,"line_start":574,"line_end":574,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274180,"byte_end":274183,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274188,"byte_end":274199,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ # use rocket::outcome::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274204,"byte_end":274239,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ # use rocket::outcome::Outcome::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274244,"byte_end":274282,"line_start":578,"line_end":578,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274287,"byte_end":274292,"line_start":579,"line_end":579,"column_start":5,"column_end":10}},{"value":"/ let mut x: Outcome<i32, &str, usize> = Success(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274297,"byte_end":274352,"line_start":580,"line_end":580,"column_start":5,"column_end":60}},{"value":"/ if let Success(val) = x.as_mut() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274357,"byte_end":274395,"line_start":581,"line_end":581,"column_start":5,"column_end":43}},{"value":"/     *val = 20;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274400,"byte_end":274418,"line_start":582,"line_end":582,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274423,"byte_end":274428,"line_start":583,"line_end":583,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274433,"byte_end":274436,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.unwrap(), 20);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274441,"byte_end":274472,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274477,"byte_end":274484,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":274489,"byte_end":274498,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1279},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1298},{"krate":0,"index":1319},{"krate":0,"index":1407},{"krate":0,"index":1441},{"krate":0,"index":1464},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":3317},{"krate":0,"index":3324},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":1538},{"krate":0,"index":1555}],"decl_id":null,"docs":" Application configuration and configuration parameter retrieval.","sig":null,"attributes":[{"value":"! Application configuration and configuration parameter retrieval.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":275955,"byte_end":276023,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276024,"byte_end":276027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module implements configuration handling for Rocket. It implements the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276028,"byte_end":276107,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! parsing and interpretation of the `Rocket.toml` config file and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276108,"byte_end":276175,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"! `ROCKET_{PARAM}` environment variables. It also allows libraries to access","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276176,"byte_end":276254,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! user-configured values.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276255,"byte_end":276282,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276283,"byte_end":276286,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## Application Configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276287,"byte_end":276319,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276320,"byte_end":276323,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ### Environments","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276324,"byte_end":276344,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276345,"byte_end":276348,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Rocket applications are always running in one of three environments:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276349,"byte_end":276421,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276422,"byte_end":276425,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"!   * development _or_ dev","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276426,"byte_end":276454,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"!   * staging _or_ stage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276455,"byte_end":276481,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"!   * production _or_ prod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276482,"byte_end":276510,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276511,"byte_end":276514,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Each environment can contain different configuration parameters. By default,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276515,"byte_end":276595,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! Rocket applications run in the **development** environment. The environment","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276596,"byte_end":276675,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! can be changed via the `ROCKET_ENV` environment variable. For example, to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276676,"byte_end":276753,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"! start a Rocket application in the **production** environment:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276754,"byte_end":276819,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276820,"byte_end":276823,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276824,"byte_end":276833,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"! ROCKET_ENV=production ./target/release/rocket_app","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276834,"byte_end":276887,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276888,"byte_end":276895,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276896,"byte_end":276899,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ### Configuration Parameters","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276900,"byte_end":276932,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276933,"byte_end":276936,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! Each environments consists of several standard configuration parameters as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":276937,"byte_end":277015,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"! well as an arbitrary number of _extra_ configuration parameters, which are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277016,"byte_end":277094,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"! not used by Rocket itself but can be used by external libraries. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277095,"byte_end":277167,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"! standard configuration parameters are:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277168,"byte_end":277210,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277211,"byte_end":277214,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! | name       | type           | description                                                 | examples                   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277215,"byte_end":277341,"line_start":34,"line_end":34,"column_start":1,"column_end":127}},{"value":"! |------------|----------------|-------------------------------------------------------------|----------------------------|","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277342,"byte_end":277468,"line_start":35,"line_end":35,"column_start":1,"column_end":127}},{"value":"! | address    | string         | ip address or host to listen on                             | `\"localhost\"`, `\"1.2.3.4\"` |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277469,"byte_end":277595,"line_start":36,"line_end":36,"column_start":1,"column_end":127}},{"value":"! | port       | integer        | port number to listen on                                    | `8000`, `80`               |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277596,"byte_end":277722,"line_start":37,"line_end":37,"column_start":1,"column_end":127}},{"value":"! | keep_alive | integer        | keep-alive timeout in seconds                               | `0` (disable), `10`        |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277723,"byte_end":277849,"line_start":38,"line_end":38,"column_start":1,"column_end":127}},{"value":"! | workers    | integer        | number of concurrent thread workers                         | `36`, `512`                |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277850,"byte_end":277976,"line_start":39,"line_end":39,"column_start":1,"column_end":127}},{"value":"! | log        | string         | max log level: `\"off\"`, `\"normal\"`, `\"debug\"`, `\"critical\"` | `\"off\"`, `\"normal\"`        |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":277977,"byte_end":278103,"line_start":40,"line_end":40,"column_start":1,"column_end":127}},{"value":"! | secret_key | 256-bit base64 | secret key for private cookies                              | `\"8Xui8SI...\"` (44 chars)  |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278104,"byte_end":278230,"line_start":41,"line_end":41,"column_start":1,"column_end":127}},{"value":"! | tls        | table          | tls config table with two keys (`certs`, `key`)             | _see below_                |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278231,"byte_end":278357,"line_start":42,"line_end":42,"column_start":1,"column_end":127}},{"value":"! | tls.certs  | string         | path to certificate chain in PEM format                     | `\"private/cert.pem\"`       |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278358,"byte_end":278484,"line_start":43,"line_end":43,"column_start":1,"column_end":127}},{"value":"! | tls.key    | string         | path to private key for `tls.certs` in PEM format           | `\"private/key.pem\"`        |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278485,"byte_end":278611,"line_start":44,"line_end":44,"column_start":1,"column_end":127}},{"value":"! | limits     | table          | map from data type (string) to data limit (integer: bytes)  | `{ forms = 65536 }`        |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278612,"byte_end":278738,"line_start":45,"line_end":45,"column_start":1,"column_end":127}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278739,"byte_end":278742,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ### Rocket.toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278743,"byte_end":278762,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278763,"byte_end":278766,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! `Rocket.toml` is a Rocket application's configuration file. It can","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278767,"byte_end":278837,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"! optionally be used to specify the configuration parameters for each","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278838,"byte_end":278909,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"! environment. If it is not present, the default configuration parameters or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278910,"byte_end":278988,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"! environment supplied parameters are used.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":278989,"byte_end":279034,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279035,"byte_end":279038,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! The file must be a series of TOML tables, at most one for each environment,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279039,"byte_end":279118,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"! and an optional \"global\" table, where each table contains key-value pairs","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279119,"byte_end":279196,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"! corresponding to configuration parameters for that environment. If a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279197,"byte_end":279269,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! configuration parameter is missing, the default value is used. The following","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279270,"byte_end":279350,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"! is a complete `Rocket.toml` file, where every standard configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279351,"byte_end":279423,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"! parameter is specified with the default value:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279424,"byte_end":279474,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279475,"byte_end":279478,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279479,"byte_end":279490,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"! [development]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279491,"byte_end":279508,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"! address = \"localhost\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279509,"byte_end":279534,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"! port = 8000","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279535,"byte_end":279550,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"! workers = [number_of_cpus * 2]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279551,"byte_end":279585,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"! keep_alive = 5","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279586,"byte_end":279604,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"! log = \"normal\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279605,"byte_end":279623,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"! secret_key = [randomly generated at launch]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279624,"byte_end":279671,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"! limits = { forms = 32768 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279672,"byte_end":279702,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279703,"byte_end":279706,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! [staging]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279707,"byte_end":279720,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"! address = \"0.0.0.0\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279721,"byte_end":279744,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"! port = 8000","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279745,"byte_end":279760,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"! workers = [number_of_cpus * 2]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279761,"byte_end":279795,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"! keep_alive = 5","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279796,"byte_end":279814,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"! log = \"normal\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279815,"byte_end":279833,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"! secret_key = [randomly generated at launch]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279834,"byte_end":279881,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"! limits = { forms = 32768 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279882,"byte_end":279912,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279913,"byte_end":279916,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! [production]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279917,"byte_end":279933,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"! address = \"0.0.0.0\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279934,"byte_end":279957,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"! port = 8000","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279958,"byte_end":279973,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"! workers = [number_of_cpus * 2]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":279974,"byte_end":280008,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"! keep_alive = 5","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280009,"byte_end":280027,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"! log = \"critical\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280028,"byte_end":280048,"line_start":85,"line_end":85,"column_start":1,"column_end":21}},{"value":"! secret_key = [randomly generated at launch]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280049,"byte_end":280096,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"! limits = { forms = 32768 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280097,"byte_end":280127,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280128,"byte_end":280135,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280136,"byte_end":280139,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! The `workers` and `secret_key` default parameters are computed by Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280140,"byte_end":280216,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"! automatically; the values above are not valid TOML syntax. When manually","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280217,"byte_end":280293,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"! specifying the number of workers, the value should be an integer: `workers =","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280294,"byte_end":280374,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"! 10`. When manually specifying the secret key, the value should a 256-bit","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280375,"byte_end":280451,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"! base64 encoded string. Such a string can be generated with the `openssl`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280452,"byte_end":280528,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"! command line tool: `openssl rand -base64 32`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280529,"byte_end":280578,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280579,"byte_end":280582,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! The \"global\" pseudo-environment can be used to set and/or override","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280583,"byte_end":280653,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"! configuration parameters globally. A parameter defined in a `[global]` table","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280654,"byte_end":280734,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"! sets, or overrides if already present, that parameter in every environment.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280735,"byte_end":280814,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"! For example, given the following `Rocket.toml` file, the value of `address`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280815,"byte_end":280894,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"! will be `\"1.2.3.4\"` in every environment:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280895,"byte_end":280940,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280941,"byte_end":280944,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280945,"byte_end":280956,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"! [global]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280957,"byte_end":280969,"line_start":104,"line_end":104,"column_start":1,"column_end":13}},{"value":"! address = \"1.2.3.4\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280970,"byte_end":280993,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280994,"byte_end":280997,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! [development]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":280998,"byte_end":281015,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"! address = \"localhost\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281016,"byte_end":281041,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281042,"byte_end":281045,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! [production]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281046,"byte_end":281062,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"! address = \"0.0.0.0\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281063,"byte_end":281086,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281087,"byte_end":281094,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281095,"byte_end":281098,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! ### TLS Configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281099,"byte_end":281124,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281125,"byte_end":281128,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! TLS can be enabled by specifying the `tls.key` and `tls.certs` parameters.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281129,"byte_end":281207,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"! Rocket must be compiled with the `tls` feature enabled for the parameters to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281208,"byte_end":281288,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! take effect. The recommended way to specify the parameters is via the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281289,"byte_end":281362,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"! `global` environment:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281363,"byte_end":281388,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281389,"byte_end":281392,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281393,"byte_end":281404,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"! [global.tls]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281405,"byte_end":281421,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"! certs = \"/path/to/certs.pem\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281422,"byte_end":281454,"line_start":123,"line_end":123,"column_start":1,"column_end":33}},{"value":"! key = \"/path/to/key.pem\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281455,"byte_end":281483,"line_start":124,"line_end":124,"column_start":1,"column_end":29}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281484,"byte_end":281491,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281492,"byte_end":281495,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ### Environment Variables","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281496,"byte_end":281525,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281526,"byte_end":281529,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! All configuration parameters, including extras, can be overridden through","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281530,"byte_end":281607,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"! environment variables. To override the configuration parameter `{param}`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281608,"byte_end":281685,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"! use an environment variable named `ROCKET_{PARAM}`. For instance, to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281686,"byte_end":281758,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"! override the \"port\" configuration parameter, you can run your application","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281759,"byte_end":281836,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"! with:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281837,"byte_end":281846,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281847,"byte_end":281850,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281851,"byte_end":281860,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"! ROCKET_PORT=3721 ./your_application","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281861,"byte_end":281900,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281901,"byte_end":281908,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281909,"byte_end":281912,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Environment variables take precedence over all other configuration methods:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281913,"byte_end":281992,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"! if the variable is set, it will be used as the value for the parameter.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":281993,"byte_end":282068,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"! Variable values are parsed as if they were TOML syntax. As illustration,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282069,"byte_end":282145,"line_start":141,"line_end":141,"column_start":1,"column_end":77}},{"value":"! consider the following examples:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282146,"byte_end":282182,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282183,"byte_end":282186,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282187,"byte_end":282196,"line_start":144,"line_end":144,"column_start":1,"column_end":10}},{"value":"! ROCKET_INTEGER=1","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282197,"byte_end":282217,"line_start":145,"line_end":145,"column_start":1,"column_end":21}},{"value":"! ROCKET_FLOAT=3.14","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282218,"byte_end":282239,"line_start":146,"line_end":146,"column_start":1,"column_end":22}},{"value":"! ROCKET_STRING=Hello","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282240,"byte_end":282263,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"! ROCKET_STRING=\"Hello\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282264,"byte_end":282289,"line_start":148,"line_end":148,"column_start":1,"column_end":26}},{"value":"! ROCKET_BOOL=true","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282290,"byte_end":282310,"line_start":149,"line_end":149,"column_start":1,"column_end":21}},{"value":"! ROCKET_ARRAY=[1,\"b\",3.14]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282311,"byte_end":282340,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"! ROCKET_DICT={key=\"abc\",val=123}","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282341,"byte_end":282376,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282377,"byte_end":282384,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282385,"byte_end":282388,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! ## Retrieving Configuration Parameters","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282389,"byte_end":282431,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282432,"byte_end":282435,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! Configuration parameters for the currently active configuration environment","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282436,"byte_end":282515,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"! can be retrieved via the [`Rocket::config()`] `Rocket` and `get_` methods on","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282516,"byte_end":282596,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"! [`Config`] structure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282597,"byte_end":282622,"line_start":158,"line_end":158,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282623,"byte_end":282626,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! [`Rocket::config()`]: crate::Rocket::config()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282627,"byte_end":282676,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282677,"byte_end":282680,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! The retrivial of configuration parameters usually occurs at launch time via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282681,"byte_end":282760,"line_start":162,"line_end":162,"column_start":1,"column_end":80}},{"value":"! a [launch fairing](::fairing::Fairing). If information about the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282761,"byte_end":282829,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"! configuraiton is needed later in the program, an attach fairing can be used","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282830,"byte_end":282909,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"! to store the information as managed state. As an example of the latter,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282910,"byte_end":282985,"line_start":165,"line_end":165,"column_start":1,"column_end":76}},{"value":"! consider the following short program which reads the `token` configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":282986,"byte_end":283064,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"! parameter and stores the value or a default in a `Token` managed state","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283065,"byte_end":283139,"line_start":167,"line_end":167,"column_start":1,"column_end":75}},{"value":"! value:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283140,"byte_end":283150,"line_start":168,"line_end":168,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283151,"byte_end":283154,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283155,"byte_end":283166,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"! use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283167,"byte_end":283198,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283199,"byte_end":283202,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! struct Token(i64);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283203,"byte_end":283225,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283226,"byte_end":283229,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283230,"byte_end":283245,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"!     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283246,"byte_end":283270,"line_start":176,"line_end":176,"column_start":1,"column_end":25}},{"value":"!         .attach(AdHoc::on_attach(\"Token Config\", |rocket| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283271,"byte_end":283334,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"!             println!(\"Adding token managed state from config...\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283335,"byte_end":283405,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"!             let token_val = rocket.config().get_int(\"token\").unwrap_or(-1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283406,"byte_end":283485,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"!             Ok(rocket.manage(Token(token_val)))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283486,"byte_end":283537,"line_start":180,"line_end":180,"column_start":1,"column_end":52}},{"value":"!         }))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283538,"byte_end":283553,"line_start":181,"line_end":181,"column_start":1,"column_end":16}},{"value":"! # ;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283554,"byte_end":283561,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283562,"byte_end":283567,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":283568,"byte_end":283575,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319254,"byte_end":319262,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::config::error::ConfigError::NotFound","value":"ConfigError::NotFound","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" The configuration file was not found.\n","sig":null,"attributes":[{"value":"/ The configuration file was not found.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319208,"byte_end":319249,"line_start":13,"line_end":13,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319337,"byte_end":319344,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"IoError","qualname":"::config::error::ConfigError::IoError","value":"ConfigError::IoError","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" There was an I/O error while reading the configuration file.\n","sig":null,"attributes":[{"value":"/ There was an I/O error while reading the configuration file.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319268,"byte_end":319332,"line_start":15,"line_end":15,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3157},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319480,"byte_end":319482,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"Io","qualname":"::config::error::ConfigError::Io","value":"ConfigError::Io(io::Error, &'static str)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" There was an I/O error while setting a configuration parameter.","sig":null,"attributes":[{"value":"/ There was an I/O error while setting a configuration parameter.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319350,"byte_end":319417,"line_start":17,"line_end":17,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319422,"byte_end":319425,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Parameters: (io_error, config_param_name)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319430,"byte_end":319475,"line_start":19,"line_end":19,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3161},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319628,"byte_end":319639,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BadFilePath","qualname":"::config::error::ConfigError::BadFilePath","value":"ConfigError::BadFilePath(PathBuf, &'static str)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" The path at which the configuration file was found was invalid.","sig":null,"attributes":[{"value":"/ The path at which the configuration file was found was invalid.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319513,"byte_end":319580,"line_start":21,"line_end":21,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319585,"byte_end":319588,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Parameters: (path, reason)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319593,"byte_end":319623,"line_start":23,"line_end":23,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319776,"byte_end":319782,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"BadEnv","qualname":"::config::error::ConfigError::BadEnv","value":"ConfigError::BadEnv(String)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" An environment specified in `ROCKET_ENV` is invalid.","sig":null,"attributes":[{"value":"/ An environment specified in `ROCKET_ENV` is invalid.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319668,"byte_end":319724,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319729,"byte_end":319732,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Parameters: (environment_name)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319737,"byte_end":319771,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319925,"byte_end":319933,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"BadEntry","qualname":"::config::error::ConfigError::BadEntry","value":"ConfigError::BadEntry(String, PathBuf)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" An environment specified as a table `[environment]` is invalid.","sig":null,"attributes":[{"value":"/ An environment specified as a table `[environment]` is invalid.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319796,"byte_end":319863,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319868,"byte_end":319871,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Parameters: (environment_name, filename)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319876,"byte_end":319920,"line_start":31,"line_end":31,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3172},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320102,"byte_end":320109,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"BadType","qualname":"::config::error::ConfigError::BadType","value":"ConfigError::BadType(String, &'static str, &'static str, Option<PathBuf>)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" A config key was specified with a value of the wrong type.","sig":null,"attributes":[{"value":"/ A config key was specified with a value of the wrong type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319956,"byte_end":320018,"line_start":33,"line_end":33,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320023,"byte_end":320026,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Parameters: (entry_name, expected_type, actual_type, filename)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320031,"byte_end":320097,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320296,"byte_end":320306,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::config::error::ConfigError::ParseError","value":"ConfigError::ParseError(String, PathBuf, String, Option<(usize, usize)>)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" There was a TOML parsing error.","sig":null,"attributes":[{"value":"/ There was a TOML parsing error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320168,"byte_end":320203,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320208,"byte_end":320211,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Parameters: (toml_source_string, filename, error_description, line/col)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320216,"byte_end":320291,"line_start":39,"line_end":39,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3184},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320490,"byte_end":320499,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"BadEnvVal","qualname":"::config::error::ConfigError::BadEnvVal","value":"ConfigError::BadEnvVal(String, String, String)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" There was a TOML parsing error in a config environment variable.","sig":null,"attributes":[{"value":"/ There was a TOML parsing error in a config environment variable.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320361,"byte_end":320429,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320434,"byte_end":320437,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Parameters: (env_key, env_value, error)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320442,"byte_end":320485,"line_start":43,"line_end":43,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3189},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320599,"byte_end":320609,"line_start":48,"line_end":48,"column_start":5,"column_end":15},"name":"UnknownKey","qualname":"::config::error::ConfigError::UnknownKey","value":"ConfigError::UnknownKey(String)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" The entry (key) is unknown.","sig":null,"attributes":[{"value":"/ The entry (key) is unknown.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320529,"byte_end":320560,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320565,"byte_end":320568,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Parameters: (key)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320573,"byte_end":320594,"line_start":47,"line_end":47,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3192},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320711,"byte_end":320718,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"name":"Missing","qualname":"::config::error::ConfigError::Missing","value":"ConfigError::Missing(String)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" The entry (key) was expected but was missing.","sig":null,"attributes":[{"value":"/ The entry (key) was expected but was missing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320623,"byte_end":320672,"line_start":49,"line_end":49,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320677,"byte_end":320680,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Parameters: (key)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320685,"byte_end":320706,"line_start":51,"line_end":51,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3152},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319190,"byte_end":319201,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ConfigError","qualname":"::config::error::ConfigError","value":"ConfigError::{NotFound, IoError, Io, BadFilePath, BadEnv, BadEntry, BadType, ParseError, BadEnvVal, UnknownKey, Missing}","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3161},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3172},{"krate":0,"index":3178},{"krate":0,"index":3184},{"krate":0,"index":3189},{"krate":0,"index":3192}],"decl_id":null,"docs":" The type of a configuration error.\n","sig":null,"attributes":[{"value":"/ The type of a configuration error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":319125,"byte_end":319163,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320825,"byte_end":320837,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"pretty_print","qualname":"<ConfigError>::pretty_print","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints this configuration error with Rocket formatting.\n","sig":null,"attributes":[{"value":"/ Prints this configuration error with Rocket formatting.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320754,"byte_end":320813,"line_start":56,"line_end":56,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323955,"byte_end":323967,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"is_not_found","qualname":"<ConfigError>::is_not_found","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is of `NotFound` variant.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is of `NotFound` variant.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323674,"byte_end":323728,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323733,"byte_end":323736,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323741,"byte_end":323754,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323759,"byte_end":323762,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323767,"byte_end":323778,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::ConfigError;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323783,"byte_end":323819,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323824,"byte_end":323827,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let error = ConfigError::NotFound;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323832,"byte_end":323870,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/ assert!(error.is_not_found());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323875,"byte_end":323909,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323914,"byte_end":323921,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":323926,"byte_end":323943,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3198},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327706,"byte_end":327717,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"Development","qualname":"::config::environment::Environment::Development","value":"Environment::Development","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The development environment.\n","sig":null,"attributes":[{"value":"/ The development environment.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327669,"byte_end":327701,"line_start":14,"line_end":14,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3200},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327756,"byte_end":327763,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"name":"Staging","qualname":"::config::environment::Environment::Staging","value":"Environment::Staging","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The staging environment.\n","sig":null,"attributes":[{"value":"/ The staging environment.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327723,"byte_end":327751,"line_start":16,"line_end":16,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3202},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327805,"byte_end":327815,"line_start":19,"line_end":19,"column_start":5,"column_end":15},"name":"Production","qualname":"::config::environment::Environment::Production","value":"Environment::Production","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The production environment.\n","sig":null,"attributes":[{"value":"/ The production environment.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327769,"byte_end":327800,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":3197},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327651,"byte_end":327662,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"name":"Environment","qualname":"::config::environment::Environment","value":"Environment::{Development, Staging, Production}","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3202}],"decl_id":null,"docs":" An enum corresponding to the valid configuration environments.\n","sig":null,"attributes":[{"value":"/ An enum corresponding to the valid configuration environments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327524,"byte_end":327590,"line_start":11,"line_end":11,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328545,"byte_end":328551,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"active","qualname":"<Environment>::active","value":"fn () -> Result<Environment, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"active\" environment as determined by the `ROCKET_ENV`\n environment variable. If `ROCKET_ENV` is not set, returns `Development`\n when the application was compiled in `debug` mode and `Production` when\n the application was compiled in `release` mode.","sig":null,"attributes":[{"value":"/ Retrieves the \"active\" environment as determined by the `ROCKET_ENV`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328087,"byte_end":328159,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ environment variable. If `ROCKET_ENV` is not set, returns `Development`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328164,"byte_end":328239,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ when the application was compiled in `debug` mode and `Production` when","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328244,"byte_end":328319,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ the application was compiled in `release` mode.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328324,"byte_end":328375,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328380,"byte_end":328383,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328388,"byte_end":328400,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328405,"byte_end":328408,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Returns a `BadEnv` `ConfigError` if `ROCKET_ENV` is set and contains an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328413,"byte_end":328488,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ invalid or unknown environment name.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328493,"byte_end":328533,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329164,"byte_end":329170,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_dev","qualname":"<Environment>::is_dev","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Development`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is `Environment::Development`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328864,"byte_end":328923,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328928,"byte_end":328931,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328936,"byte_end":328949,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328954,"byte_end":328957,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328962,"byte_end":328973,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Environment;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":328978,"byte_end":329014,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329019,"byte_end":329022,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert!(Environment::Development.is_dev());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329027,"byte_end":329074,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/ assert!(!Environment::Production.is_dev());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329079,"byte_end":329126,"line_start":56,"line_end":56,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329131,"byte_end":329138,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329143,"byte_end":329152,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329522,"byte_end":329530,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"is_stage","qualname":"<Environment>::is_stage","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Staging`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is `Environment::Staging`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329226,"byte_end":329281,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329286,"byte_end":329289,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329294,"byte_end":329307,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329312,"byte_end":329315,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329320,"byte_end":329331,"line_start":67,"line_end":67,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Environment;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329336,"byte_end":329372,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329377,"byte_end":329380,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert!(Environment::Staging.is_stage());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329385,"byte_end":329430,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"/ assert!(!Environment::Production.is_stage());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329435,"byte_end":329484,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329489,"byte_end":329496,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329501,"byte_end":329510,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329879,"byte_end":329886,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"is_prod","qualname":"<Environment>::is_prod","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Production`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is `Environment::Production`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329582,"byte_end":329640,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329645,"byte_end":329648,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329653,"byte_end":329666,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329671,"byte_end":329674,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329679,"byte_end":329690,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Environment;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329695,"byte_end":329731,"line_start":83,"line_end":83,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329736,"byte_end":329739,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert!(Environment::Production.is_prod());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329744,"byte_end":329791,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/ assert!(!Environment::Staging.is_prod());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329796,"byte_end":329841,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329846,"byte_end":329853,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329858,"byte_end":329867,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332929,"byte_end":332935,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::config::Config","value":"Config { environment, address, port, workers, keep_alive, log_level, limits, extras }","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230}],"decl_id":null,"docs":" Structure for Rocket application configuration.","sig":null,"attributes":[{"value":"/ Structure for Rocket application configuration.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332293,"byte_end":332344,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332345,"byte_end":332348,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332349,"byte_end":332360,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332361,"byte_end":332364,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A `Config` structure is typically built using [`Config::build()`] and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332365,"byte_end":332438,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ builder methods on the returned [`ConfigBuilder`] structure:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332439,"byte_end":332503,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332504,"byte_end":332507,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332508,"byte_end":332519,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332520,"byte_end":332566,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332567,"byte_end":332570,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332571,"byte_end":332603,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332604,"byte_end":332656,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332657,"byte_end":332686,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/     .port(700)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332687,"byte_end":332705,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/     .workers(12)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332706,"byte_end":332726,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332727,"byte_end":332745,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332746,"byte_end":332753,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332754,"byte_end":332757,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## General Configuration","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332758,"byte_end":332786,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332787,"byte_end":332790,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ For more information about Rocket's configuration, see the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332791,"byte_end":332853,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/ [`config`](::config) module documentation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332854,"byte_end":332900,"line_start":36,"line_end":36,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333010,"byte_end":333021,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::config::Config::environment","value":"config::environment::Environment","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[{"value":"/ The environment that this configuration corresponds to.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":332942,"byte_end":333001,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333077,"byte_end":333084,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"address","qualname":"::config::config::Config::address","value":"std::string::String","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[{"value":"/ The address to serve on.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333040,"byte_end":333068,"line_start":41,"line_end":41,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3221},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333132,"byte_end":333136,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"port","qualname":"::config::config::Config::port","value":"u16","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[{"value":"/ The port to serve on.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333098,"byte_end":333123,"line_start":43,"line_end":43,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3222},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333202,"byte_end":333209,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::config::Config::workers","value":"u16","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" The number of workers to run concurrently.\n","sig":null,"attributes":[{"value":"/ The number of workers to run concurrently.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333147,"byte_end":333193,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3223},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333283,"byte_end":333293,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"keep_alive","qualname":"::config::config::Config::keep_alive","value":"std::option::Option<u32>","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Keep-alive timeout in seconds or None if disabled.\n","sig":null,"attributes":[{"value":"/ Keep-alive timeout in seconds or None if disabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333220,"byte_end":333274,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3224},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333353,"byte_end":333362,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::config::Config::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[{"value":"/ How much information to log.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333312,"byte_end":333344,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3227},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333540,"byte_end":333546,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::config::Config::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Streaming read size limits.\n","sig":null,"attributes":[{"value":"/ Streaming read size limits.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333500,"byte_end":333531,"line_start":55,"line_end":55,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3228},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333631,"byte_end":333637,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::config::Config::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Extra parameters that aren't part of Rocket's core config.\n","sig":null,"attributes":[{"value":"/ Extra parameters that aren't part of Rocket's core config.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":333560,"byte_end":333622,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334759,"byte_end":334764,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"build","qualname":"<Config>::build","value":"fn (env: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for `Config` structure where the default parameters\n are set to those of `env`.","sig":null,"attributes":[{"value":"/ Returns a builder for `Config` structure where the default parameters","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334319,"byte_end":334392,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ are set to those of `env`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334397,"byte_end":334427,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334432,"byte_end":334435,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334440,"byte_end":334453,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334458,"byte_end":334461,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334466,"byte_end":334477,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334482,"byte_end":334528,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334533,"byte_end":334536,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334541,"byte_end":334573,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334578,"byte_end":334630,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334635,"byte_end":334664,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/     .port(700)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334669,"byte_end":334687,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/     .workers(12)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334692,"byte_end":334712,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334717,"byte_end":334735,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334740,"byte_end":334747,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335212,"byte_end":335215,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (env: Environment) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters for the environment\n `env`. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[{"value":"/ Returns a `Config` with the default parameters for the environment","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334845,"byte_end":334915,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ `env`. See [`config`](::config) for a list of defaults.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334920,"byte_end":334979,"line_start":99,"line_end":99,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334984,"byte_end":334987,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334992,"byte_end":335005,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335010,"byte_end":335013,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335018,"byte_end":335029,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335034,"byte_end":335080,"line_start":104,"line_end":104,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335085,"byte_end":335088,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let mut my_config = Config::new(Environment::Production);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335093,"byte_end":335154,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/ my_config.set_port(1001);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335159,"byte_end":335188,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335193,"byte_end":335200,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336131,"byte_end":336137,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"active","qualname":"<Config>::active","value":"fn () -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the active environment\n as determined by the `ROCKET_ENV` environment variable.","sig":null,"attributes":[{"value":"/ Returns a `Config` with the default parameters of the active environment","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335286,"byte_end":335362,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ as determined by the `ROCKET_ENV` environment variable.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335367,"byte_end":335426,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335431,"byte_end":335434,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If `ROCKET_ENV` is not set, the returned `Config` uses development","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335439,"byte_end":335509,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/ environment parameters when the application was compiled in `debug` mode","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335514,"byte_end":335590,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ and production environment parameters when the application was compiled","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335595,"byte_end":335670,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ in `release` mode.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335675,"byte_end":335697,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335702,"byte_end":335705,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `Config::new(Environment::active()?)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335710,"byte_end":335774,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335779,"byte_end":335782,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335787,"byte_end":335799,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335804,"byte_end":335807,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns a `BadEnv` error if `ROCKET_ENV` is set and contains an invalid","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335812,"byte_end":335887,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ or unknown environment name.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335892,"byte_end":335924,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335929,"byte_end":335932,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335937,"byte_end":335950,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335955,"byte_end":335958,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335963,"byte_end":335974,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Config;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":335979,"byte_end":336010,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336015,"byte_end":336018,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut my_config = Config::active().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336023,"byte_end":336073,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/ my_config.set_port(1001);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336078,"byte_end":336107,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336112,"byte_end":336119,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336576,"byte_end":336587,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"development","qualname":"<Config>::development","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the development\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[{"value":"/ Returns a `Config` with the default parameters of the development","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336219,"byte_end":336288,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ environment. See [`config`](::config) for a list of defaults.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336293,"byte_end":336358,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336363,"byte_end":336366,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336371,"byte_end":336384,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336389,"byte_end":336392,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336397,"byte_end":336408,"line_start":145,"line_end":145,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336413,"byte_end":336459,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336464,"byte_end":336467,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut my_config = Config::development();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336472,"byte_end":336518,"line_start":148,"line_end":148,"column_start":5,"column_end":51}},{"value":"/ my_config.set_port(1001);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336523,"byte_end":336552,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336557,"byte_end":336564,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337008,"byte_end":337015,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"staging","qualname":"<Config>::staging","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the staging\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[{"value":"/ Returns a `Config` with the default parameters of the staging","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336659,"byte_end":336724,"line_start":155,"line_end":155,"column_start":5,"column_end":70}},{"value":"/ environment. See [`config`](::config) for a list of defaults.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336729,"byte_end":336794,"line_start":156,"line_end":156,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336799,"byte_end":336802,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336807,"byte_end":336820,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336825,"byte_end":336828,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336833,"byte_end":336844,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336849,"byte_end":336895,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336900,"byte_end":336903,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let mut my_config = Config::staging();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336908,"byte_end":336950,"line_start":163,"line_end":163,"column_start":5,"column_end":47}},{"value":"/ my_config.set_port(1001);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336955,"byte_end":336984,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":336989,"byte_end":336996,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337438,"byte_end":337448,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"production","qualname":"<Config>::production","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the production\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[{"value":"/ Returns a `Config` with the default parameters of the production","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337083,"byte_end":337151,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ environment. See [`config`](::config) for a list of defaults.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337156,"byte_end":337221,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337226,"byte_end":337229,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337234,"byte_end":337247,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337252,"byte_end":337255,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337260,"byte_end":337271,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337276,"byte_end":337322,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337327,"byte_end":337330,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut my_config = Config::production();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337335,"byte_end":337380,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ my_config.set_port(1001);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337385,"byte_end":337414,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":337419,"byte_end":337426,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343127,"byte_end":343135,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"set_root","qualname":"<Config>::set_root","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the root directory of this configuration to `root`.","sig":null,"attributes":[{"value":"/ Sets the root directory of this configuration to `root`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342694,"byte_end":342754,"line_start":321,"line_end":321,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342759,"byte_end":342762,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342767,"byte_end":342780,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342785,"byte_end":342788,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342793,"byte_end":342804,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/ # use std::path::Path;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342809,"byte_end":342835,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342840,"byte_end":342886,"line_start":327,"line_end":327,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342891,"byte_end":342894,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342899,"byte_end":342954,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/ config.set_root(\"/var/my_app\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342959,"byte_end":342994,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":342999,"byte_end":343002,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(not(windows))]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343007,"byte_end":343033,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(config.root().unwrap(), Path::new(\"/var/my_app\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343038,"byte_end":343103,"line_start":333,"line_end":333,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343108,"byte_end":343115,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343763,"byte_end":343774,"line_start":356,"line_end":356,"column_start":12,"column_end":23},"name":"set_address","qualname":"<Config>::set_address","value":"fn <A> (&mut self, address: A) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the address of `self` to `address`.","sig":null,"attributes":[{"value":"/ Sets the address of `self` to `address`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343238,"byte_end":343282,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343287,"byte_end":343290,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343295,"byte_end":343307,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343312,"byte_end":343315,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If `address` is not a valid IP address or hostname, returns a `BadType`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343320,"byte_end":343395,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343400,"byte_end":343410,"line_start":344,"line_end":344,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343415,"byte_end":343418,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343423,"byte_end":343436,"line_start":346,"line_end":346,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343441,"byte_end":343444,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343449,"byte_end":343460,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343465,"byte_end":343511,"line_start":349,"line_end":349,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343516,"byte_end":343519,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343524,"byte_end":343579,"line_start":351,"line_end":351,"column_start":5,"column_end":60}},{"value":"/ assert!(config.set_address(\"localhost\").is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343584,"byte_end":343637,"line_start":352,"line_end":352,"column_start":5,"column_end":58}},{"value":"/ assert!(config.set_address(\"::\").is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343642,"byte_end":343688,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/ assert!(config.set_address(\"?\").is_err());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343693,"byte_end":343739,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":343744,"byte_end":343751,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344399,"byte_end":344407,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"set_port","qualname":"<Config>::set_port","value":"fn (&mut self, port: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` of `self` to `port`.","sig":null,"attributes":[{"value":"/ Sets the `port` of `self` to `port`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344082,"byte_end":344122,"line_start":366,"line_end":366,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344127,"byte_end":344130,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344135,"byte_end":344148,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344153,"byte_end":344156,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344161,"byte_end":344172,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344177,"byte_end":344223,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344228,"byte_end":344231,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344236,"byte_end":344291,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ config.set_port(1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344296,"byte_end":344322,"line_start":374,"line_end":374,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(config.port, 1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344327,"byte_end":344361,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344366,"byte_end":344373,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344378,"byte_end":344387,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344804,"byte_end":344815,"line_start":394,"line_end":394,"column_start":12,"column_end":23},"name":"set_workers","qualname":"<Config>::set_workers","value":"fn (&mut self, workers: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of `workers` in `self` to `workers`.","sig":null,"attributes":[{"value":"/ Sets the number of `workers` in `self` to `workers`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344469,"byte_end":344525,"line_start":382,"line_end":382,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344530,"byte_end":344533,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344538,"byte_end":344551,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344556,"byte_end":344559,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344564,"byte_end":344575,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344580,"byte_end":344626,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344631,"byte_end":344634,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344639,"byte_end":344694,"line_start":389,"line_end":389,"column_start":5,"column_end":60}},{"value":"/ config.set_workers(64);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344699,"byte_end":344726,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(config.workers, 64);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344731,"byte_end":344766,"line_start":391,"line_end":391,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344771,"byte_end":344778,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344783,"byte_end":344792,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345431,"byte_end":345445,"line_start":417,"line_end":417,"column_start":12,"column_end":26},"name":"set_keep_alive","qualname":"<Config>::set_keep_alive","value":"fn (&mut self, timeout: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,\n keep-alive is disabled.","sig":null,"attributes":[{"value":"/ Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344886,"byte_end":344960,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ keep-alive is disabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344965,"byte_end":344992,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":344997,"byte_end":345000,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345005,"byte_end":345018,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345023,"byte_end":345026,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345031,"byte_end":345042,"line_start":403,"line_end":403,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Config;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345047,"byte_end":345078,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345083,"byte_end":345086,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::development();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345091,"byte_end":345134,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345139,"byte_end":345142,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ // Set keep-alive timeout to 10 seconds.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345147,"byte_end":345191,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/ config.set_keep_alive(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345196,"byte_end":345226,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(config.keep_alive, Some(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345231,"byte_end":345275,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345280,"byte_end":345283,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ // Disable keep-alive.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345288,"byte_end":345314,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/ config.set_keep_alive(0);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345319,"byte_end":345348,"line_start":413,"line_end":413,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(config.keep_alive, None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345353,"byte_end":345393,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345398,"byte_end":345405,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345410,"byte_end":345419,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346233,"byte_end":346247,"line_start":443,"line_end":443,"column_start":12,"column_end":26},"name":"set_secret_key","qualname":"<Config>::set_secret_key","value":"fn <K> (&mut self, key: K) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in `self` to `key` which must be a 256-bit base64\n encoded string.","sig":null,"attributes":[{"value":"/ Sets the `secret_key` in `self` to `key` which must be a 256-bit base64","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345618,"byte_end":345693,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ encoded string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345698,"byte_end":345717,"line_start":426,"line_end":426,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345722,"byte_end":345725,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345730,"byte_end":345742,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345747,"byte_end":345750,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ If `key` is not a valid 256-bit base64 encoded string, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345755,"byte_end":345823,"line_start":430,"line_end":430,"column_start":5,"column_end":73}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345828,"byte_end":345848,"line_start":431,"line_end":431,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345853,"byte_end":345856,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345861,"byte_end":345874,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345879,"byte_end":345882,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345887,"byte_end":345898,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345903,"byte_end":345949,"line_start":436,"line_end":436,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345954,"byte_end":345957,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":345962,"byte_end":346017,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/ let key = \"8Xui8SN4mI+7egV/9dlfYYLGQJeEx4+DwmSQLwDVXJg=\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346022,"byte_end":346083,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/ assert!(config.set_secret_key(key).is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346088,"byte_end":346136,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/ assert!(config.set_secret_key(\"hello? anyone there?\").is_err());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346141,"byte_end":346209,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346214,"byte_end":346221,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347152,"byte_end":347165,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"set_log_level","qualname":"<Config>::set_log_level","value":"fn (&mut self, log_level: LoggingLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the logging level for `self` to `log_level`.","sig":null,"attributes":[{"value":"/ Sets the logging level for `self` to `log_level`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346762,"byte_end":346815,"line_start":461,"line_end":461,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346820,"byte_end":346823,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346828,"byte_end":346841,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346846,"byte_end":346849,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346854,"byte_end":346865,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, LoggingLevel, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346870,"byte_end":346930,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346935,"byte_end":346938,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":346943,"byte_end":346998,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"/ config.set_log_level(LoggingLevel::Critical);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347003,"byte_end":347052,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(config.log_level, LoggingLevel::Critical);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347057,"byte_end":347114,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347119,"byte_end":347126,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347131,"byte_end":347140,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347566,"byte_end":347576,"line_start":488,"line_end":488,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Config>::set_limits","value":"fn (&mut self, limits: Limits) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the receive limits in `self` to `limits`.","sig":null,"attributes":[{"value":"/ Sets the receive limits in `self` to `limits`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347251,"byte_end":347301,"line_start":477,"line_end":477,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347306,"byte_end":347309,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347314,"byte_end":347327,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347332,"byte_end":347335,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347340,"byte_end":347351,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Limits};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347356,"byte_end":347397,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347402,"byte_end":347405,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::development();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347410,"byte_end":347453,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/ config.set_limits(Limits::default().limit(\"json\", 4 * (1 << 20)));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347458,"byte_end":347528,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347533,"byte_end":347540,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":347545,"byte_end":347554,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":349496,"byte_end":349503,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"set_tls","qualname":"<Config>::set_tls","value":"fn (&mut self, _: &str, _: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"tls\"))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":349456,"byte_end":349484,"line_start":542,"line_end":542,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350491,"byte_end":350501,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"set_extras","qualname":"<Config>::set_extras","value":"fn (&mut self, extras: HashMap<String, Value>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the extras for `self` to be the key/value pairs in `extras`.\n encoded string.","sig":null,"attributes":[{"value":"/ Sets the extras for `self` to be the key/value pairs in `extras`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":349895,"byte_end":349964,"line_start":558,"line_end":558,"column_start":5,"column_end":74}},{"value":"/ encoded string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":349969,"byte_end":349988,"line_start":559,"line_end":559,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":349993,"byte_end":349996,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350001,"byte_end":350014,"line_start":561,"line_end":561,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350019,"byte_end":350022,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350027,"byte_end":350038,"line_start":563,"line_end":563,"column_start":5,"column_end":16}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350043,"byte_end":350077,"line_start":564,"line_end":564,"column_start":5,"column_end":39}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350082,"byte_end":350128,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350133,"byte_end":350136,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350141,"byte_end":350196,"line_start":567,"line_end":567,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350201,"byte_end":350204,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ // Create the `extras` map.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350209,"byte_end":350240,"line_start":569,"line_end":569,"column_start":5,"column_end":36}},{"value":"/ let mut extras = HashMap::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350245,"byte_end":350281,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/ extras.insert(\"another_port\".to_string(), 1044.into());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350286,"byte_end":350345,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/ extras.insert(\"templates\".to_string(), \"my_dir\".into());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350350,"byte_end":350410,"line_start":572,"line_end":572,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350415,"byte_end":350418,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ config.set_extras(extras);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350423,"byte_end":350453,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350458,"byte_end":350465,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350470,"byte_end":350479,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351289,"byte_end":351295,"line_start":602,"line_end":602,"column_start":12,"column_end":18},"name":"extras","qualname":"<Config>::extras","value":"fn <'a> (&'a self) -> impl Iterator<Item = (&'a str, &'a Value)>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names and values of all of the extras in\n `self`.","sig":null,"attributes":[{"value":"/ Returns an iterator over the names and values of all of the extras in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350588,"byte_end":350661,"line_start":581,"line_end":581,"column_start":5,"column_end":78}},{"value":"/ `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350666,"byte_end":350677,"line_start":582,"line_end":582,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350682,"byte_end":350685,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350690,"byte_end":350703,"line_start":584,"line_end":584,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350708,"byte_end":350711,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350716,"byte_end":350727,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350732,"byte_end":350766,"line_start":587,"line_end":587,"column_start":5,"column_end":39}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350771,"byte_end":350817,"line_start":588,"line_end":588,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350822,"byte_end":350825,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350830,"byte_end":350885,"line_start":590,"line_end":590,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(config.extras().count(), 0);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350890,"byte_end":350933,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350938,"byte_end":350941,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ // Add a couple of extras to the config.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350946,"byte_end":350990,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/ let mut extras = HashMap::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":350995,"byte_end":351031,"line_start":594,"line_end":594,"column_start":5,"column_end":41}},{"value":"/ extras.insert(\"another_port\".to_string(), 1044.into());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351036,"byte_end":351095,"line_start":595,"line_end":595,"column_start":5,"column_end":64}},{"value":"/ extras.insert(\"templates\".to_string(), \"my_dir\".into());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351100,"byte_end":351160,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/ config.set_extras(extras);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351165,"byte_end":351195,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351200,"byte_end":351203,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.extras().count(), 2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351208,"byte_end":351251,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351256,"byte_end":351263,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351268,"byte_end":351277,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351561,"byte_end":351572,"line_start":609,"line_end":609,"column_start":12,"column_end":23},"name":"tls_enabled","qualname":"<Config>::tls_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if TLS is enabled.","sig":null,"attributes":[{"value":"/ Returns `true` if TLS is enabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351424,"byte_end":351461,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351466,"byte_end":351469,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Always returns `false` if the `tls` compilation feature is not enabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351474,"byte_end":351549,"line_start":608,"line_end":608,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352425,"byte_end":352434,"line_start":641,"line_end":641,"column_start":12,"column_end":21},"name":"get_extra","qualname":"<Config>::get_extra","value":"fn <'a> (&'a self, name: &str) -> Result<&'a Value>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a raw value.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a raw value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351852,"byte_end":351915,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351920,"byte_end":351923,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351928,"byte_end":351940,"line_start":625,"line_end":625,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351945,"byte_end":351948,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":351953,"byte_end":352026,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352031,"byte_end":352034,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352039,"byte_end":352052,"line_start":629,"line_end":629,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352057,"byte_end":352060,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352065,"byte_end":352076,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment, Value};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352081,"byte_end":352134,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352139,"byte_end":352142,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352147,"byte_end":352199,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/     .extra(\"name\", \"value\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352204,"byte_end":352235,"line_start":635,"line_end":635,"column_start":5,"column_end":36}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352240,"byte_end":352258,"line_start":636,"line_end":636,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352263,"byte_end":352266,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_extra(\"name\"), Ok(&Value::String(\"value\".into())));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352271,"byte_end":352348,"line_start":638,"line_end":638,"column_start":5,"column_end":82}},{"value":"/ assert!(config.get_extra(\"other\").is_err());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352353,"byte_end":352401,"line_start":639,"line_end":639,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352406,"byte_end":352413,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353189,"byte_end":353196,"line_start":664,"line_end":664,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Config>::get_str","value":"fn <'a> (&'a self, name: &str) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a borrowed string.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a borrowed string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352574,"byte_end":352643,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352648,"byte_end":352651,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352656,"byte_end":352668,"line_start":647,"line_end":647,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352673,"byte_end":352676,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352681,"byte_end":352754,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a string, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352759,"byte_end":352830,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352835,"byte_end":352855,"line_start":651,"line_end":651,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352860,"byte_end":352863,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352868,"byte_end":352881,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352886,"byte_end":352889,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352894,"byte_end":352905,"line_start":655,"line_end":655,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352910,"byte_end":352956,"line_start":656,"line_end":656,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352961,"byte_end":352964,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":352969,"byte_end":353021,"line_start":658,"line_end":658,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_extra\", \"extra_value\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353026,"byte_end":353067,"line_start":659,"line_end":659,"column_start":5,"column_end":46}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353072,"byte_end":353090,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353095,"byte_end":353098,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_str(\"my_extra\"), Ok(\"extra_value\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353103,"byte_end":353165,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353170,"byte_end":353177,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354008,"byte_end":354018,"line_start":688,"line_end":688,"column_start":12,"column_end":22},"name":"get_string","qualname":"<Config>::get_string","value":"fn (&self, name: &str) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as an owned string.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as an owned string.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353380,"byte_end":353447,"line_start":669,"line_end":669,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353452,"byte_end":353455,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353460,"byte_end":353472,"line_start":671,"line_end":671,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353477,"byte_end":353480,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353485,"byte_end":353558,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a string, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353563,"byte_end":353634,"line_start":674,"line_end":674,"column_start":5,"column_end":76}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353639,"byte_end":353659,"line_start":675,"line_end":675,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353664,"byte_end":353667,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353672,"byte_end":353685,"line_start":677,"line_end":677,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353690,"byte_end":353693,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353698,"byte_end":353709,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353714,"byte_end":353760,"line_start":680,"line_end":680,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353765,"byte_end":353768,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353773,"byte_end":353825,"line_start":682,"line_end":682,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_extra\", \"extra_value\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353830,"byte_end":353871,"line_start":683,"line_end":683,"column_start":5,"column_end":46}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353876,"byte_end":353894,"line_start":684,"line_end":684,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353899,"byte_end":353902,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_string(\"my_extra\"), Ok(\"extra_value\".to_string()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353907,"byte_end":353984,"line_start":686,"line_end":686,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":353989,"byte_end":353996,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354711,"byte_end":354718,"line_start":711,"line_end":711,"column_start":12,"column_end":19},"name":"get_int","qualname":"<Config>::get_int","value":"fn (&self, name: &str) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as an integer.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as an integer.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354119,"byte_end":354181,"line_start":692,"line_end":692,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354186,"byte_end":354189,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354194,"byte_end":354206,"line_start":694,"line_end":694,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354211,"byte_end":354214,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354219,"byte_end":354292,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not an integer, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354297,"byte_end":354370,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354375,"byte_end":354395,"line_start":698,"line_end":698,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354400,"byte_end":354403,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354408,"byte_end":354421,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354426,"byte_end":354429,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354434,"byte_end":354445,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354450,"byte_end":354496,"line_start":703,"line_end":703,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354501,"byte_end":354504,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354509,"byte_end":354561,"line_start":705,"line_end":705,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_extra\", 1025)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354566,"byte_end":354598,"line_start":706,"line_end":706,"column_start":5,"column_end":37}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354603,"byte_end":354621,"line_start":707,"line_end":707,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354626,"byte_end":354629,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_int(\"my_extra\"), Ok(1025));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354634,"byte_end":354687,"line_start":709,"line_end":709,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354692,"byte_end":354699,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355488,"byte_end":355496,"line_start":735,"line_end":735,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Config>::get_bool","value":"fn (&self, name: &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a boolean.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a boolean.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354897,"byte_end":354958,"line_start":716,"line_end":716,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354963,"byte_end":354966,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354971,"byte_end":354983,"line_start":718,"line_end":718,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354988,"byte_end":354991,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":354996,"byte_end":355069,"line_start":720,"line_end":720,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a boolean, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355074,"byte_end":355146,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355151,"byte_end":355171,"line_start":722,"line_end":722,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355176,"byte_end":355179,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355184,"byte_end":355197,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355202,"byte_end":355205,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355210,"byte_end":355221,"line_start":726,"line_end":726,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355226,"byte_end":355272,"line_start":727,"line_end":727,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355277,"byte_end":355280,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355285,"byte_end":355337,"line_start":729,"line_end":729,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_extra\", true)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355342,"byte_end":355374,"line_start":730,"line_end":730,"column_start":5,"column_end":37}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355379,"byte_end":355397,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355402,"byte_end":355405,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_bool(\"my_extra\"), Ok(true));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355410,"byte_end":355464,"line_start":733,"line_end":733,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355469,"byte_end":355476,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356254,"byte_end":356263,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"get_float","qualname":"<Config>::get_float","value":"fn (&self, name: &str) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a float.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a float.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355672,"byte_end":355731,"line_start":740,"line_end":740,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355736,"byte_end":355739,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355744,"byte_end":355756,"line_start":742,"line_end":742,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355761,"byte_end":355764,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355769,"byte_end":355842,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a float, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355847,"byte_end":355917,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355922,"byte_end":355942,"line_start":746,"line_end":746,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355947,"byte_end":355950,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355955,"byte_end":355968,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355973,"byte_end":355976,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355981,"byte_end":355992,"line_start":750,"line_end":750,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":355997,"byte_end":356043,"line_start":751,"line_end":751,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356048,"byte_end":356051,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356056,"byte_end":356108,"line_start":753,"line_end":753,"column_start":5,"column_end":57}},{"value":"/     .extra(\"pi\", 3.14159)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356113,"byte_end":356142,"line_start":754,"line_end":754,"column_start":5,"column_end":34}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356147,"byte_end":356165,"line_start":755,"line_end":755,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356170,"byte_end":356173,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_float(\"pi\"), Ok(3.14159));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356178,"byte_end":356230,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356235,"byte_end":356242,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357040,"byte_end":357049,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"get_slice","qualname":"<Config>::get_slice","value":"fn (&self, name: &str) -> Result<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a slice of an array.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a slice of an array.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356437,"byte_end":356508,"line_start":764,"line_end":764,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356513,"byte_end":356516,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356521,"byte_end":356533,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356538,"byte_end":356541,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356546,"byte_end":356619,"line_start":768,"line_end":768,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not an array, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356624,"byte_end":356695,"line_start":769,"line_end":769,"column_start":5,"column_end":76}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356700,"byte_end":356720,"line_start":770,"line_end":770,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356725,"byte_end":356728,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356733,"byte_end":356746,"line_start":772,"line_end":772,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356751,"byte_end":356754,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356759,"byte_end":356770,"line_start":774,"line_end":774,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356775,"byte_end":356821,"line_start":775,"line_end":775,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356826,"byte_end":356829,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356834,"byte_end":356886,"line_start":777,"line_end":777,"column_start":5,"column_end":57}},{"value":"/     .extra(\"numbers\", vec![1, 2, 3])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356891,"byte_end":356931,"line_start":778,"line_end":778,"column_start":5,"column_end":45}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356936,"byte_end":356954,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356959,"byte_end":356962,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert!(config.get_slice(\"numbers\").is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":356967,"byte_end":357016,"line_start":781,"line_end":781,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357021,"byte_end":357028,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357949,"byte_end":357958,"line_start":811,"line_end":811,"column_start":12,"column_end":21},"name":"get_table","qualname":"<Config>::get_table","value":"fn (&self, name: &str) -> Result<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a table.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a table.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357227,"byte_end":357286,"line_start":788,"line_end":788,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357291,"byte_end":357294,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357299,"byte_end":357311,"line_start":790,"line_end":790,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357316,"byte_end":357319,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357324,"byte_end":357397,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a table, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357402,"byte_end":357472,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357477,"byte_end":357497,"line_start":794,"line_end":794,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357502,"byte_end":357505,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357510,"byte_end":357523,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357528,"byte_end":357531,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357536,"byte_end":357547,"line_start":798,"line_end":798,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357552,"byte_end":357587,"line_start":799,"line_end":799,"column_start":5,"column_end":40}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357592,"byte_end":357638,"line_start":800,"line_end":800,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357643,"byte_end":357646,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ let mut table = BTreeMap::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357651,"byte_end":357687,"line_start":802,"line_end":802,"column_start":5,"column_end":41}},{"value":"/ table.insert(\"my_value\".to_string(), 1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357692,"byte_end":357736,"line_start":803,"line_end":803,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357741,"byte_end":357744,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357749,"byte_end":357801,"line_start":805,"line_end":805,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_table\", table)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357806,"byte_end":357839,"line_start":806,"line_end":806,"column_start":5,"column_end":38}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357844,"byte_end":357862,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357867,"byte_end":357870,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ assert!(config.get_table(\"my_table\").is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357875,"byte_end":357925,"line_start":809,"line_end":809,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":357930,"byte_end":357937,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358864,"byte_end":358876,"line_start":837,"line_end":837,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Config>::get_datetime","value":"fn (&self, name: &str) -> Result<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a datetime value.","sig":null,"attributes":[{"value":"/ Attempts to retrieve the extra named `name` as a datetime value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358135,"byte_end":358203,"line_start":816,"line_end":816,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358208,"byte_end":358211,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358216,"byte_end":358228,"line_start":818,"line_end":818,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358233,"byte_end":358236,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If an extra with `name` doesn't exist, returns an `Err` of `Missing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358241,"byte_end":358314,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ If an extra with `name` _does_ exist but is not a datetime, returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358319,"byte_end":358392,"line_start":821,"line_end":821,"column_start":5,"column_end":78}},{"value":"/ `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358397,"byte_end":358417,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358422,"byte_end":358425,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358430,"byte_end":358443,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358448,"byte_end":358451,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358456,"byte_end":358467,"line_start":826,"line_end":826,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment, Value, Datetime};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358472,"byte_end":358535,"line_start":827,"line_end":827,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358540,"byte_end":358543,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let date = \"1979-05-27T00:32:00-07:00\".parse::<Datetime>().unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358548,"byte_end":358620,"line_start":829,"line_end":829,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358625,"byte_end":358628,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358633,"byte_end":358685,"line_start":831,"line_end":831,"column_start":5,"column_end":57}},{"value":"/     .extra(\"my_date\", Value::Datetime(date.clone()))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358690,"byte_end":358746,"line_start":832,"line_end":832,"column_start":5,"column_end":61}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358751,"byte_end":358769,"line_start":833,"line_end":833,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358774,"byte_end":358777,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_datetime(\"my_date\"), Ok(&date));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358782,"byte_end":358840,"line_start":835,"line_end":835,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":358845,"byte_end":358852,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359909,"byte_end":359913,"line_start":864,"line_end":864,"column_start":12,"column_end":16},"name":"root","qualname":"<Config>::root","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root path of the configuration, if one is known.","sig":null,"attributes":[{"value":"/ Returns the root path of the configuration, if one is known.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359075,"byte_end":359139,"line_start":843,"line_end":843,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359144,"byte_end":359147,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ For configurations loaded from a `Rocket.toml` file, this will be the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359152,"byte_end":359225,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ directory in which the file is stored. For instance, if the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359230,"byte_end":359293,"line_start":846,"line_end":846,"column_start":5,"column_end":68}},{"value":"/ configuration file is at `/tmp/Rocket.toml`, the path `/tmp` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359298,"byte_end":359365,"line_start":847,"line_end":847,"column_start":5,"column_end":72}},{"value":"/ returned. For other configurations, this will be the path set via","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359370,"byte_end":359439,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/ [`Config::set_root()`] or [`ConfigBuilder::root()`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359444,"byte_end":359500,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359505,"byte_end":359508,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359513,"byte_end":359526,"line_start":851,"line_end":851,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359531,"byte_end":359534,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359539,"byte_end":359550,"line_start":853,"line_end":853,"column_start":5,"column_end":16}},{"value":"/ use std::env::current_dir;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359555,"byte_end":359585,"line_start":854,"line_end":854,"column_start":5,"column_end":35}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359590,"byte_end":359636,"line_start":855,"line_end":855,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359641,"byte_end":359644,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359649,"byte_end":359704,"line_start":857,"line_end":857,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(config.root(), None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359709,"byte_end":359745,"line_start":858,"line_end":858,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359750,"byte_end":359753,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let cwd = current_dir().expect(\"have cwd\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359758,"byte_end":359805,"line_start":860,"line_end":860,"column_start":5,"column_end":52}},{"value":"/ config.set_root(&cwd);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359810,"byte_end":359836,"line_start":861,"line_end":861,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(config.root().unwrap(), cwd);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359841,"byte_end":359885,"line_start":862,"line_end":862,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":359890,"byte_end":359897,"line_start":863,"line_end":863,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361392,"byte_end":361405,"line_start":903,"line_end":903,"column_start":12,"column_end":25},"name":"root_relative","qualname":"<Config>::root_relative","value":"fn <P> (&self, path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns `path` relative to this configuration.","sig":null,"attributes":[{"value":"/ Returns `path` relative to this configuration.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360003,"byte_end":360053,"line_start":868,"line_end":868,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360058,"byte_end":360061,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ The path that is returned depends on whether:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360066,"byte_end":360115,"line_start":870,"line_end":870,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360120,"byte_end":360123,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/   1. Whether `path` is absolute or relative.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360128,"byte_end":360176,"line_start":872,"line_end":872,"column_start":5,"column_end":53}},{"value":"/   2. Whether there is a [`Config::root()`] configured.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360181,"byte_end":360239,"line_start":873,"line_end":873,"column_start":5,"column_end":63}},{"value":"/   3. Whether there is a current directory.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360244,"byte_end":360290,"line_start":874,"line_end":874,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360295,"byte_end":360298,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it is returned unaltered. Otherwise, if `path` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360303,"byte_end":360379,"line_start":876,"line_end":876,"column_start":5,"column_end":81}},{"value":"/ relative and there is a root configured, the root is prepended to `path`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360384,"byte_end":360460,"line_start":877,"line_end":877,"column_start":5,"column_end":81}},{"value":"/ and the newlt concatenated path is returned. Otherwise, if there is a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360465,"byte_end":360538,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ current directory, it is preprended to `path` and the newly concatenated","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360543,"byte_end":360619,"line_start":879,"line_end":879,"column_start":5,"column_end":81}},{"value":"/ path is returned. Finally, if all else fails, the path is simply","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360624,"byte_end":360692,"line_start":880,"line_end":880,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360697,"byte_end":360710,"line_start":881,"line_end":881,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360715,"byte_end":360718,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360723,"byte_end":360736,"line_start":883,"line_end":883,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360741,"byte_end":360744,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360749,"byte_end":360760,"line_start":885,"line_end":885,"column_start":5,"column_end":16}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360765,"byte_end":360789,"line_start":886,"line_end":886,"column_start":5,"column_end":29}},{"value":"/ use std::env::current_dir;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360794,"byte_end":360824,"line_start":887,"line_end":887,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360829,"byte_end":360832,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360837,"byte_end":360883,"line_start":889,"line_end":889,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360888,"byte_end":360891,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::new(Environment::Staging);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360896,"byte_end":360951,"line_start":891,"line_end":891,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360956,"byte_end":360959,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let cwd = current_dir().expect(\"have cwd\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":360964,"byte_end":361011,"line_start":893,"line_end":893,"column_start":5,"column_end":52}},{"value":"/ config.set_root(&cwd);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361016,"byte_end":361042,"line_start":894,"line_end":894,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(config.root().unwrap(), cwd);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361047,"byte_end":361091,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361096,"byte_end":361099,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.root_relative(\"abc\"), cwd.join(\"abc\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361104,"byte_end":361165,"line_start":897,"line_end":897,"column_start":5,"column_end":66}},{"value":"/ # #[cfg(not(windows))]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361170,"byte_end":361196,"line_start":898,"line_end":898,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(config.root_relative(\"/abc\"), Path::new(\"/abc\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361201,"byte_end":361265,"line_start":899,"line_end":899,"column_start":5,"column_end":69}},{"value":"/ # #[cfg(windows)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361270,"byte_end":361291,"line_start":900,"line_end":900,"column_start":5,"column_end":26}},{"value":"/ # assert_eq!(config.root_relative(\"C:\\\\abc\"), Path::new(\"C:\\\\abc\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361296,"byte_end":361368,"line_start":901,"line_end":901,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361373,"byte_end":361380,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":362980,"byte_end":362993,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"ConfigBuilder","qualname":"::config::builder::ConfigBuilder","value":"ConfigBuilder { environment, address, port, workers, keep_alive, log_level, secret_key, tls, limits, extras, root }","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252}],"decl_id":null,"docs":" Structure following the builder pattern for building `Config` structures.\n","sig":null,"attributes":[{"value":"/ Structure following the builder pattern for building `Config` structures.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":362874,"byte_end":362951,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3242},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363068,"byte_end":363079,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::builder::ConfigBuilder::environment","value":"config::environment::Environment","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[{"value":"/ The environment that this configuration corresponds to.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363000,"byte_end":363059,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363135,"byte_end":363142,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"address","qualname":"::config::builder::ConfigBuilder::address","value":"std::string::String","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[{"value":"/ The address to serve on.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363098,"byte_end":363126,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3244},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363190,"byte_end":363194,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"port","qualname":"::config::builder::ConfigBuilder::port","value":"u16","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[{"value":"/ The port to serve on.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363156,"byte_end":363181,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3245},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363259,"byte_end":363266,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::builder::ConfigBuilder::workers","value":"u16","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The number of workers to run in parallel.\n","sig":null,"attributes":[{"value":"/ The number of workers to run in parallel.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363205,"byte_end":363250,"line_start":15,"line_end":15,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3246},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363337,"byte_end":363347,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"keep_alive","qualname":"::config::builder::ConfigBuilder::keep_alive","value":"u32","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" Keep-alive timeout in seconds or disabled if 0.\n","sig":null,"attributes":[{"value":"/ Keep-alive timeout in seconds or disabled if 0.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363277,"byte_end":363328,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3247},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363399,"byte_end":363408,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::builder::ConfigBuilder::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[{"value":"/ How much information to log.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363358,"byte_end":363390,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3248},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363456,"byte_end":363466,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"name":"secret_key","qualname":"::config::builder::ConfigBuilder::secret_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The secret key.\n","sig":null,"attributes":[{"value":"/ The secret key.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363428,"byte_end":363447,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3249},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363573,"byte_end":363576,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"tls","qualname":"::config::builder::ConfigBuilder::tls","value":"std::option::Option<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" TLS configuration (path to certificates file, path to private key file).\n","sig":null,"attributes":[{"value":"/ TLS configuration (path to certificates file, path to private key file).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363488,"byte_end":363564,"line_start":23,"line_end":23,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3250},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363633,"byte_end":363639,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::builder::ConfigBuilder::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" Size limits.\n","sig":null,"attributes":[{"value":"/ Size limits.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363608,"byte_end":363624,"line_start":25,"line_end":25,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3251},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363723,"byte_end":363729,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::builder::ConfigBuilder::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" Any extra parameters that aren't part of Rocket's config.\n","sig":null,"attributes":[{"value":"/ Any extra parameters that aren't part of Rocket's config.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363653,"byte_end":363714,"line_start":27,"line_end":27,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3252},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363814,"byte_end":363818,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"root","qualname":"::config::builder::ConfigBuilder::root","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The root directory of this config, if any.\n","sig":null,"attributes":[{"value":"/ The root directory of this config, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363759,"byte_end":363805,"line_start":29,"line_end":29,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364397,"byte_end":364400,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfigBuilder>::new","value":"fn (environment: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ConfigBuilder` instance using the default parameters from\n the given `environment`.","sig":null,"attributes":[{"value":"/ Create a new `ConfigBuilder` instance using the default parameters from","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363865,"byte_end":363940,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ the given `environment`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363945,"byte_end":363973,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363978,"byte_end":363981,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method is typically called indirectly via [`Config::build()`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363986,"byte_end":364057,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364062,"byte_end":364065,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364070,"byte_end":364083,"line_start":39,"line_end":39,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364088,"byte_end":364091,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364096,"byte_end":364107,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364112,"byte_end":364158,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364163,"byte_end":364166,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364171,"byte_end":364223,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364228,"byte_end":364257,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"/     .port(700)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364262,"byte_end":364280,"line_start":46,"line_end":46,"column_start":5,"column_end":23}},{"value":"/     .workers(12)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364285,"byte_end":364305,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364310,"byte_end":364330,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364335,"byte_end":364338,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # assert!(config.is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364343,"byte_end":364373,"line_start":50,"line_end":50,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364378,"byte_end":364385,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365301,"byte_end":365308,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"address","qualname":"<ConfigBuilder>::address","value":"fn <A> (mut self, address: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `address` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `address` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364932,"byte_end":364988,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":364993,"byte_end":364996,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365001,"byte_end":365014,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365019,"byte_end":365022,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365027,"byte_end":365038,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365043,"byte_end":365089,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365094,"byte_end":365097,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365102,"byte_end":365154,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365159,"byte_end":365188,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365193,"byte_end":365211,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365216,"byte_end":365219,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.address.as_str(), \"127.0.0.1\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365224,"byte_end":365277,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365282,"byte_end":365289,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365772,"byte_end":365776,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"port","qualname":"<ConfigBuilder>::port","value":"fn (mut self, port: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `port` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365421,"byte_end":365474,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365479,"byte_end":365482,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365487,"byte_end":365500,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365505,"byte_end":365508,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365513,"byte_end":365524,"line_start":91,"line_end":91,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365529,"byte_end":365575,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365580,"byte_end":365583,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365588,"byte_end":365640,"line_start":94,"line_end":94,"column_start":5,"column_end":57}},{"value":"/     .port(1329)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365645,"byte_end":365664,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365669,"byte_end":365687,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365692,"byte_end":365695,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.port, 1329);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365700,"byte_end":365734,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365739,"byte_end":365746,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365751,"byte_end":365760,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366210,"byte_end":366217,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"workers","qualname":"<ConfigBuilder>::workers","value":"fn (mut self, workers: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets `workers` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets `workers` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365858,"byte_end":365910,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365915,"byte_end":365918,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365923,"byte_end":365936,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365941,"byte_end":365944,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365949,"byte_end":365960,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":365965,"byte_end":366011,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366016,"byte_end":366019,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366024,"byte_end":366076,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/     .workers(64)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366081,"byte_end":366101,"line_start":114,"line_end":114,"column_start":5,"column_end":25}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366106,"byte_end":366124,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366129,"byte_end":366132,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.workers, 64);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366137,"byte_end":366172,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366177,"byte_end":366184,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366189,"byte_end":366198,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366894,"byte_end":366904,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<ConfigBuilder>::keep_alive","value":"fn (mut self, timeout: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,\n keep-alive is disabled.","sig":null,"attributes":[{"value":"/ Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366308,"byte_end":366382,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ keep-alive is disabled.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366387,"byte_end":366414,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366419,"byte_end":366422,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366427,"byte_end":366440,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366445,"byte_end":366448,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366453,"byte_end":366464,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366469,"byte_end":366515,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366520,"byte_end":366523,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366528,"byte_end":366580,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/     .keep_alive(10)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366585,"byte_end":366608,"line_start":134,"line_end":134,"column_start":5,"column_end":28}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366613,"byte_end":366631,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366636,"byte_end":366639,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.keep_alive, Some(10));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366644,"byte_end":366688,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366693,"byte_end":366696,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366701,"byte_end":366753,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/     .keep_alive(0)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366758,"byte_end":366780,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366785,"byte_end":366803,"line_start":141,"line_end":141,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366808,"byte_end":366811,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.keep_alive, None);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366816,"byte_end":366856,"line_start":143,"line_end":143,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366861,"byte_end":366868,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366873,"byte_end":366882,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367414,"byte_end":367423,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"log_level","qualname":"<ConfigBuilder>::log_level","value":"fn (mut self, log_level: LoggingLevel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `log_level` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `log_level` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":366998,"byte_end":367056,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367061,"byte_end":367064,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367069,"byte_end":367082,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367087,"byte_end":367090,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367095,"byte_end":367106,"line_start":155,"line_end":155,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment, LoggingLevel};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367111,"byte_end":367171,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367176,"byte_end":367179,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367184,"byte_end":367236,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/     .log_level(LoggingLevel::Critical)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367241,"byte_end":367283,"line_start":159,"line_end":159,"column_start":5,"column_end":47}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367288,"byte_end":367306,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367311,"byte_end":367314,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.log_level, LoggingLevel::Critical);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367319,"byte_end":367376,"line_start":162,"line_end":162,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367381,"byte_end":367388,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367393,"byte_end":367402,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367914,"byte_end":367924,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"secret_key","qualname":"<ConfigBuilder>::secret_key","value":"fn <K> (mut self, key: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `secret_key` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367529,"byte_end":367588,"line_start":170,"line_end":170,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367593,"byte_end":367596,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367601,"byte_end":367614,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367619,"byte_end":367622,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367627,"byte_end":367638,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment, LoggingLevel};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367643,"byte_end":367703,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367708,"byte_end":367711,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let key = \"8Xui8SN4mI+7egV/9dlfYYLGQJeEx4+DwmSQLwDVXJg=\";","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367716,"byte_end":367777,"line_start":177,"line_end":177,"column_start":5,"column_end":66}},{"value":"/ let mut config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367782,"byte_end":367838,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/     .secret_key(key)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367843,"byte_end":367867,"line_start":179,"line_end":179,"column_start":5,"column_end":29}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367872,"byte_end":367890,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":367895,"byte_end":367902,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368382,"byte_end":368388,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"limits","qualname":"<ConfigBuilder>::limits","value":"fn (mut self, limits: Limits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `limits` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `limits` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368038,"byte_end":368093,"line_start":187,"line_end":187,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368098,"byte_end":368101,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368106,"byte_end":368119,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368124,"byte_end":368127,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368132,"byte_end":368143,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment, Limits};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368148,"byte_end":368202,"line_start":192,"line_end":192,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368207,"byte_end":368210,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368215,"byte_end":368271,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/     .limits(Limits::new().limit(\"json\", 5 * (1 << 20)))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368276,"byte_end":368335,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368340,"byte_end":368358,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368363,"byte_end":368370,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369086,"byte_end":369089,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"tls","qualname":"<ConfigBuilder>::tls","value":"fn <C, K> (mut self, certs_path: C, key_path: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the TLS configuration in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the TLS configuration in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368479,"byte_end":368543,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368548,"byte_end":368551,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Certificates are read from `certs_path`. The certificate chain must be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368556,"byte_end":368630,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ in X.509 PEM format. The private key is read from `key_path`. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368635,"byte_end":368704,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ private key must be an RSA key in either PKCS#1 or PKCS#8 PEM format.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368709,"byte_end":368782,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368787,"byte_end":368790,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368795,"byte_end":368808,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368813,"byte_end":368816,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368821,"byte_end":368832,"line_start":211,"line_end":211,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368837,"byte_end":368883,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368888,"byte_end":368891,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368896,"byte_end":368952,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/     .tls(\"/path/to/certs.pem\", \"/path/to/key.pem\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":368957,"byte_end":369011,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/ # ; /*","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369016,"byte_end":369026,"line_start":216,"line_end":216,"column_start":5,"column_end":15}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369031,"byte_end":369049,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369054,"byte_end":369062,"line_start":218,"line_end":218,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369067,"byte_end":369074,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369692,"byte_end":369703,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"environment","qualname":"<ConfigBuilder>::environment","value":"fn (mut self, env: Environment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `environment` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `environment` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369282,"byte_end":369342,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369347,"byte_end":369350,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369355,"byte_end":369368,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369373,"byte_end":369376,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369381,"byte_end":369392,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369397,"byte_end":369443,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369448,"byte_end":369451,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369456,"byte_end":369508,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/     .environment(Environment::Production)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369513,"byte_end":369558,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369563,"byte_end":369581,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369586,"byte_end":369589,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.environment, Environment::Production);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369594,"byte_end":369654,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369659,"byte_end":369666,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369671,"byte_end":369680,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370206,"byte_end":370210,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"root","qualname":"<ConfigBuilder>::root","value":"fn <P> (mut self, path: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `root` in the configuration being built.","sig":null,"attributes":[{"value":"/ Sets the `root` in the configuration being built.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369798,"byte_end":369851,"line_start":246,"line_end":246,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369856,"byte_end":369859,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369864,"byte_end":369877,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369882,"byte_end":369885,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369890,"byte_end":369901,"line_start":250,"line_end":250,"column_start":5,"column_end":16}},{"value":"/ # use std::path::Path;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369906,"byte_end":369932,"line_start":251,"line_end":251,"column_start":5,"column_end":31}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369937,"byte_end":369983,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369988,"byte_end":369991,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":369996,"byte_end":370048,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/     .root(\"/my_app/dir\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370053,"byte_end":370081,"line_start":255,"line_end":255,"column_start":5,"column_end":33}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370086,"byte_end":370104,"line_start":256,"line_end":256,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370109,"byte_end":370112,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.root().unwrap(), Path::new(\"/my_app/dir\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370117,"byte_end":370182,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370187,"byte_end":370194,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371064,"byte_end":371069,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"extra","qualname":"<ConfigBuilder>::extra","value":"fn <V> (mut self, name: &str, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra configuration parameter with `name` and `value` to the\n configuration being built. The value can be any type that implements\n `Into<Value>` including `&str`, `String`, `Vec<V: Into<Value>>`,\n `HashMap<S: Into<String>, V: Into<Value>>`, and most integer and float\n types.","sig":null,"attributes":[{"value":"/ Adds an extra configuration parameter with `name` and `value` to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370335,"byte_end":370407,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ configuration being built. The value can be any type that implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370412,"byte_end":370484,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ `Into<Value>` including `&str`, `String`, `Vec<V: Into<Value>>`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370489,"byte_end":370557,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/ `HashMap<S: Into<String>, V: Into<Value>>`, and most integer and float","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370562,"byte_end":370636,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370641,"byte_end":370651,"line_start":269,"line_end":269,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370656,"byte_end":370659,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370664,"byte_end":370677,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370682,"byte_end":370685,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370690,"byte_end":370701,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370706,"byte_end":370752,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370757,"byte_end":370760,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370765,"byte_end":370817,"line_start":276,"line_end":276,"column_start":5,"column_end":57}},{"value":"/     .extra(\"pi\", 3.14)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370822,"byte_end":370848,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/     .extra(\"custom_dir\", \"/a/b/c\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370853,"byte_end":370891,"line_start":278,"line_end":278,"column_start":5,"column_end":43}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370896,"byte_end":370914,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370919,"byte_end":370922,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.get_float(\"pi\"), Ok(3.14));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370927,"byte_end":370976,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(config.get_str(\"custom_dir\"), Ok(\"/a/b/c\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":370981,"byte_end":371040,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371045,"byte_end":371052,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371939,"byte_end":371947,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ConfigBuilder>::finalize","value":"fn (self) -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"/ Return the `Config` structure that was being built by this builder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371207,"byte_end":371278,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371283,"byte_end":371286,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371291,"byte_end":371303,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371308,"byte_end":371311,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the address or secret key fail to parse, returns a `BadType` error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371316,"byte_end":371390,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371395,"byte_end":371398,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371403,"byte_end":371416,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371421,"byte_end":371424,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371429,"byte_end":371440,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371445,"byte_end":371491,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371496,"byte_end":371499,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371504,"byte_end":371556,"line_start":300,"line_end":300,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371561,"byte_end":371590,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/     .port(700)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371595,"byte_end":371613,"line_start":302,"line_end":302,"column_start":5,"column_end":23}},{"value":"/     .workers(12)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371618,"byte_end":371638,"line_start":303,"line_end":303,"column_start":5,"column_end":25}},{"value":"/     .keep_alive(0)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371643,"byte_end":371665,"line_start":304,"line_end":304,"column_start":5,"column_end":27}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371670,"byte_end":371690,"line_start":305,"line_end":305,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371695,"byte_end":371698,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert!(config.is_ok());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371703,"byte_end":371731,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371736,"byte_end":371739,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371744,"byte_end":371796,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/     .address(\"123.123.123.123.123 whoops!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371801,"byte_end":371848,"line_start":310,"line_end":310,"column_start":5,"column_end":52}},{"value":"/     .finalize();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371853,"byte_end":371873,"line_start":311,"line_end":311,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371878,"byte_end":371881,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ assert!(config.is_err());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371886,"byte_end":371915,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":371920,"byte_end":371927,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373195,"byte_end":373201,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ConfigBuilder>::unwrap","value":"fn (self) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"/ Return the `Config` structure that was being built by this builder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372660,"byte_end":372731,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372736,"byte_end":372739,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372744,"byte_end":372756,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372761,"byte_end":372764,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics if the supplied address, secret key, or TLS configuration fail to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372769,"byte_end":372845,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ parse.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372850,"byte_end":372860,"line_start":345,"line_end":345,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372865,"byte_end":372868,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372873,"byte_end":372886,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372891,"byte_end":372894,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372899,"byte_end":372910,"line_start":349,"line_end":349,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372915,"byte_end":372961,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372966,"byte_end":372969,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":372974,"byte_end":373026,"line_start":352,"line_end":352,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373031,"byte_end":373060,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/     .unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373065,"byte_end":373083,"line_start":354,"line_end":354,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373088,"byte_end":373091,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.address.as_str(), \"127.0.0.1\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373096,"byte_end":373149,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373154,"byte_end":373161,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373166,"byte_end":373183,"line_start":358,"line_end":358,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373914,"byte_end":373920,"line_start":382,"line_end":382,"column_start":12,"column_end":18},"name":"expect","qualname":"<ConfigBuilder>::expect","value":"fn (self, msg: &str) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"/ Returns the `Config` structure that was being built by this builder.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373296,"byte_end":373368,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373373,"byte_end":373376,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373381,"byte_end":373393,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373398,"byte_end":373401,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Panics if the supplied address, secret key, or TLS configuration fail to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373406,"byte_end":373482,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/ parse. If a panic occurs, the error message `msg` is printed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373487,"byte_end":373552,"line_start":368,"line_end":368,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373557,"byte_end":373560,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373565,"byte_end":373578,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373583,"byte_end":373586,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373591,"byte_end":373602,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373607,"byte_end":373653,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373658,"byte_end":373661,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373666,"byte_end":373718,"line_start":375,"line_end":375,"column_start":5,"column_end":57}},{"value":"/     .address(\"127.0.0.1\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373723,"byte_end":373752,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/     .expect(\"the configuration is bad!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373757,"byte_end":373802,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373807,"byte_end":373810,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(config.address.as_str(), \"127.0.0.1\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373815,"byte_end":373868,"line_start":379,"line_end":379,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373873,"byte_end":373880,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":373885,"byte_end":373902,"line_start":381,"line_end":381,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3310},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381310,"byte_end":381316,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Limits","qualname":"::config::custom_values::Limits","value":"Limits {  }","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312}],"decl_id":null,"docs":" Mapping from data type to size limits.","sig":null,"attributes":[{"value":"/ Mapping from data type to size limits.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380463,"byte_end":380505,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380506,"byte_end":380509,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ A `Limits` structure contains a mapping from a given data type (\"forms\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380510,"byte_end":380586,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ \"json\", and so on) to the maximum size in bytes that should be accepted by a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380587,"byte_end":380667,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ Rocket application for that data type. For instance, if the limit for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380668,"byte_end":380741,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ \"forms\" is set to `256`, only 256 bytes from an incoming form request will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380742,"byte_end":380820,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ be read.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380821,"byte_end":380833,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380834,"byte_end":380837,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Defaults","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380838,"byte_end":380852,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380853,"byte_end":380856,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ As documented in [`config`](::config), the default limits are as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380857,"byte_end":380934,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380935,"byte_end":380938,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/   * **forms**: 32KiB","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380939,"byte_end":380963,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380964,"byte_end":380967,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380968,"byte_end":380979,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380980,"byte_end":380983,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ A `Limits` structure is created following the builder pattern:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":380984,"byte_end":381050,"line_start":73,"line_end":73,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381051,"byte_end":381054,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381055,"byte_end":381066,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use rocket::config::Limits;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381067,"byte_end":381098,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381099,"byte_end":381102,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Set a limit of 64KiB for forms and 3MiB for JSON.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381103,"byte_end":381159,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/ let limits = Limits::new()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381160,"byte_end":381190,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/     .limit(\"forms\", 64 * 1024)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381191,"byte_end":381225,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/     .limit(\"json\", 3 * 1024 * 1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381226,"byte_end":381266,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381267,"byte_end":381274,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381919,"byte_end":381922,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Limits>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Limits` structure with the default limits set.","sig":null,"attributes":[{"value":"/ Construct a new `Limits` structure with the default limits set.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381626,"byte_end":381693,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381698,"byte_end":381701,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381706,"byte_end":381719,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381724,"byte_end":381727,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381732,"byte_end":381743,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Limits;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381748,"byte_end":381779,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381784,"byte_end":381787,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let limits = Limits::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381792,"byte_end":381823,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(limits.get(\"forms\"), Some(32 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381828,"byte_end":381881,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381886,"byte_end":381893,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381898,"byte_end":381907,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382577,"byte_end":382582,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limits>::limit","value":"fn <S> (mut self, name: S, limit: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds or replaces a limit in `self`, consuming `self` and returning a new\n `Limits` structure with the added or replaced limit.","sig":null,"attributes":[{"value":"/ Adds or replaces a limit in `self`, consuming `self` and returning a new","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381972,"byte_end":382048,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ `Limits` structure with the added or replaced limit.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382053,"byte_end":382109,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382114,"byte_end":382117,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382122,"byte_end":382135,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382140,"byte_end":382143,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382148,"byte_end":382159,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Limits;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382164,"byte_end":382195,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382200,"byte_end":382203,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let limits = Limits::new()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382208,"byte_end":382238,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/     .limit(\"json\", 1 * 1024 * 1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382243,"byte_end":382283,"line_start":122,"line_end":122,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382288,"byte_end":382291,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(limits.get(\"forms\"), Some(32 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382296,"byte_end":382349,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(limits.get(\"json\"), Some(1 * 1024 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382354,"byte_end":382412,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382417,"byte_end":382420,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let new_limits = limits.limit(\"json\", 64 * 1024 * 1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382425,"byte_end":382485,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(new_limits.get(\"json\"), Some(64 * 1024 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382490,"byte_end":382553,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":382558,"byte_end":382565,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383639,"byte_end":383642,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"get","qualname":"<Limits>::get","value":"fn (&self, name: &str) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the set limit, if any, for the data type with name `name`.","sig":null,"attributes":[{"value":"/ Retrieve the set limit, if any, for the data type with name `name`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383189,"byte_end":383260,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383265,"byte_end":383268,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383273,"byte_end":383286,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383291,"byte_end":383294,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383299,"byte_end":383310,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::Limits;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383315,"byte_end":383346,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383351,"byte_end":383354,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let limits = Limits::new()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383359,"byte_end":383389,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/     .limit(\"json\", 64 * 1024 * 1024);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383394,"byte_end":383435,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383440,"byte_end":383443,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(limits.get(\"forms\"), Some(32 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383448,"byte_end":383501,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(limits.get(\"json\"), Some(64 * 1024 * 1024));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383506,"byte_end":383565,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/ assert!(limits.get(\"msgpack\").is_none());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383570,"byte_end":383615,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383620,"byte_end":383627,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1536},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284578,"byte_end":284584,"line_start":224,"line_end":224,"column_start":10,"column_end":16},"name":"Result","qualname":"::config::Result","value":"::std::result::Result<T, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Wraps `std::result` with the error type of [`ConfigError`].\n","sig":null,"attributes":[{"value":"/ Wraps `std::result` with the error type of [`ConfigError`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284505,"byte_end":284568,"line_start":223,"line_end":223,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3317},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284684,"byte_end":284696,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"RocketConfig","qualname":"::config::RocketConfig","value":"RocketConfig { active_env }","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3318},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284707,"byte_end":284717,"line_start":229,"line_end":229,"column_start":9,"column_end":19},"name":"active_env","qualname":"::config::RocketConfig::active_env","value":"config::environment::Environment","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284947,"byte_end":284951,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"read","qualname":"<RocketConfig>::read","value":"fn () -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration from the `Rocket.toml` file. The file is search\n for recursively up the tree, starting from the CWD.\n","sig":null,"attributes":[{"value":"/ Read the configuration from the `Rocket.toml` file. The file is search","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284801,"byte_end":284875,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ for recursively up the tree, starting from the CWD.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284880,"byte_end":284935,"line_start":235,"line_end":235,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":285677,"byte_end":285696,"line_start":253,"line_end":253,"column_start":12,"column_end":31},"name":"active_default_from","qualname":"<RocketConfig>::active_default_from","value":"fn (filename: Option<&Path>) -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Return the default configuration for all environments and marks the\n active environment (via the CONFIG_ENV variable) as active.\n","sig":null,"attributes":[{"value":"/ Return the default configuration for all environments and marks the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":285526,"byte_end":285597,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ active environment (via the CONFIG_ENV variable) as active.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":285602,"byte_end":285665,"line_start":252,"line_end":252,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":286713,"byte_end":286727,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"active_default","qualname":"<RocketConfig>::active_default","value":"fn () -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Return the default configuration for all environments and marks the\n active environment (via the CONFIG_ENV variable) as active.\n","sig":null,"attributes":[{"value":"/ Return the default configuration for all environments and marks the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":286562,"byte_end":286633,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/ active environment (via the CONFIG_ENV variable) as active.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":286638,"byte_end":286701,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":288385,"byte_end":288388,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"get","qualname":"<RocketConfig>::get","value":"fn (&self, env: Environment) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the environment `env`.\n","sig":null,"attributes":[{"value":"/ Retrieves the `Config` for the environment `env`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":288320,"byte_end":288373,"line_start":324,"line_end":324,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":288667,"byte_end":288673,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"active","qualname":"<RocketConfig>::active","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the active environment.\n","sig":null,"attributes":[{"value":"/ Retrieves the `Config` for the active environment.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":288587,"byte_end":288641,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":288646,"byte_end":288655,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1560},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1606},{"krate":0,"index":1627},{"krate":0,"index":1647},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736}],"decl_id":null,"docs":" Types and traits for handling incoming body data.\n","sig":null,"attributes":[{"value":"! Types and traits for handling incoming body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/mod.rs","byte_start":387098,"byte_end":387151,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1587},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389474,"byte_end":389478,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"Data","qualname":"::data::data::Data","value":"Data {  }","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"decl_id":null,"docs":" Type representing the data in the body of an incoming request.","sig":null,"attributes":[{"value":"/ Type representing the data in the body of an incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388110,"byte_end":388176,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388177,"byte_end":388180,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type is the only means by which the body of a request can be retrieved.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388181,"byte_end":388261,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ This type is not usually used directly. Instead, types that implement","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388262,"byte_end":388335,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ [`FromData`](::data::Data) are used via code generation by specifying the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388336,"byte_end":388413,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ `data = \"<var>\"` route parameter as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388414,"byte_end":388462,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388463,"byte_end":388466,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388467,"byte_end":388478,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388479,"byte_end":388528,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388529,"byte_end":388568,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ # type DataGuard = ::rocket::data::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388569,"byte_end":388613,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/ #[post(\"/submit\", data = \"<var>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388614,"byte_end":388652,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ fn submit(var: DataGuard) { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388653,"byte_end":388696,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388697,"byte_end":388716,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388717,"byte_end":388724,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388725,"byte_end":388728,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Above, `DataGuard` can be any type that implements `FromData`. Note that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388729,"byte_end":388805,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ `Data` itself implements `FromData`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388806,"byte_end":388846,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388847,"byte_end":388850,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Reading Data","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388851,"byte_end":388869,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388870,"byte_end":388873,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Data may be read from a `Data` object by calling either the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388874,"byte_end":388937,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/ [`open()`](Data::open()) or [`peek()`](Data::peek()) methods.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":388938,"byte_end":389003,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389004,"byte_end":389007,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The `open` method consumes the `Data` object and returns the raw data","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389008,"byte_end":389081,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/ stream. The `Data` object is consumed for safety reasons: consuming the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389082,"byte_end":389157,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ object ensures that holding a `Data` object means that all of the data is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389158,"byte_end":389235,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ available for reading.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389236,"byte_end":389262,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389263,"byte_end":389266,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `peek` method returns a slice containing at most 512 bytes of buffered","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389267,"byte_end":389345,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ body data. This enables partially or fully reading from a `Data` object","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389346,"byte_end":389421,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ without consuming the `Data` object.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389422,"byte_end":389462,"line_start":57,"line_end":57,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":390055,"byte_end":390059,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"open","qualname":"<Data>::open","value":"fn (mut self) -> DataStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw data stream.","sig":null,"attributes":[{"value":"/ Returns the raw data stream.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389568,"byte_end":389600,"line_start":65,"line_end":65,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389605,"byte_end":389608,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The stream contains all of the data in the body of the request,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389613,"byte_end":389680,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ including that in the `peek` buffer. The method consumes the `Data`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389685,"byte_end":389756,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ instance. This ensures that a `Data` type _always_ represents _all_ of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389761,"byte_end":389835,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ the data in a request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389840,"byte_end":389866,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389871,"byte_end":389874,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389879,"byte_end":389892,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389897,"byte_end":389900,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389905,"byte_end":389916,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389921,"byte_end":389942,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389947,"byte_end":389950,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ fn handler(data: Data) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389955,"byte_end":389983,"line_start":77,"line_end":77,"column_start":5,"column_end":33}},{"value":"/     let stream = data.open();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389988,"byte_end":390021,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":390026,"byte_end":390031,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":390036,"byte_end":390043,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393115,"byte_end":393119,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"peek","qualname":"<Data>::peek","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `peek` buffer.","sig":null,"attributes":[{"value":"/ Retrieve the `peek` buffer.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392555,"byte_end":392586,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392591,"byte_end":392594,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The peek buffer contains at most 512 bytes of the body of the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392599,"byte_end":392673,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ The actual size of the returned buffer varies by web request. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392678,"byte_end":392747,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ [`peek_complete`](#method.peek_complete) method can be used to determine","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392752,"byte_end":392828,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ if this buffer contains _all_ of the data in the body of the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392833,"byte_end":392906,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392911,"byte_end":392914,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392919,"byte_end":392932,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392937,"byte_end":392940,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392945,"byte_end":392956,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392961,"byte_end":392982,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392987,"byte_end":392990,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ fn handler(data: Data) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":392995,"byte_end":393023,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/     let peek = data.peek();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393028,"byte_end":393059,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393064,"byte_end":393069,"line_start":154,"line_end":154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393074,"byte_end":393081,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393086,"byte_end":393103,"line_start":156,"line_end":156,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393744,"byte_end":393757,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"peek_complete","qualname":"<Data>::peek_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `peek` buffer contains all of the data in the body\n of the request. Returns `false` if it does not or if it is not known if\n it does.","sig":null,"attributes":[{"value":"/ Returns true if the `peek` buffer contains all of the data in the body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393284,"byte_end":393358,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ of the request. Returns `false` if it does not or if it is not known if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393363,"byte_end":393438,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ it does.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393443,"byte_end":393455,"line_start":167,"line_end":167,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393460,"byte_end":393463,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393468,"byte_end":393481,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393486,"byte_end":393489,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393494,"byte_end":393505,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393510,"byte_end":393531,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393536,"byte_end":393539,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ fn handler(data: Data) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393544,"byte_end":393572,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/     if data.peek_complete() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393577,"byte_end":393610,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/         println!(\"All of the data: {:?}\", data.peek());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393615,"byte_end":393674,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393679,"byte_end":393688,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393693,"byte_end":393698,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393703,"byte_end":393710,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393715,"byte_end":393732,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394335,"byte_end":394344,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"stream_to","qualname":"<Data>::stream_to","value":"fn <W> (self, writer: &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to any `Write` type.","sig":null,"attributes":[{"value":"/ A helper method to write the body of the request to any `Write` type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393811,"byte_end":393884,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393889,"byte_end":393892,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method is identical to `io::copy(&mut data.open(), writer)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393897,"byte_end":393966,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393971,"byte_end":393974,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393979,"byte_end":393992,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":393997,"byte_end":394000,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394005,"byte_end":394016,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394021,"byte_end":394037,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394042,"byte_end":394063,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394068,"byte_end":394071,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ fn handler(mut data: Data) -> io::Result<String> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394076,"byte_end":394130,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"/     // write all of the data to stdout","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394135,"byte_end":394177,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"/     data.stream_to(&mut io::stdout())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394182,"byte_end":394223,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"/         .map(|n| format!(\"Wrote {} bytes.\", n))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394228,"byte_end":394279,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394284,"byte_end":394289,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394294,"byte_end":394301,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394306,"byte_end":394323,"line_start":201,"line_end":201,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":395003,"byte_end":395017,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"stream_to_file","qualname":"<Data>::stream_to_file","value":"fn <P> (self, path: P) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to a file at the path\n determined by `path`.","sig":null,"attributes":[{"value":"/ A helper method to write the body of the request to a file at the path","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394452,"byte_end":394526,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ determined by `path`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394531,"byte_end":394556,"line_start":207,"line_end":207,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394561,"byte_end":394564,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is identical to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394569,"byte_end":394600,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ `io::copy(&mut self.open(), &mut File::create(path)?)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394605,"byte_end":394664,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394669,"byte_end":394672,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394677,"byte_end":394690,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394695,"byte_end":394698,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394703,"byte_end":394714,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394719,"byte_end":394735,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/ use rocket::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394740,"byte_end":394761,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394766,"byte_end":394769,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ fn handler(mut data: Data) -> io::Result<String> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394774,"byte_end":394828,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/     data.stream_to_file(\"/static/file\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394833,"byte_end":394876,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/         .map(|n| format!(\"Wrote {} bytes to /static/file\", n))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394881,"byte_end":394947,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394952,"byte_end":394957,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394962,"byte_end":394969,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":394974,"byte_end":394991,"line_start":223,"line_end":223,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1617},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397661,"byte_end":397671,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DataStream","qualname":"::data::data_stream::DataStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw data stream of a request body.","sig":null,"attributes":[{"value":"/ Raw data stream of a request body.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397353,"byte_end":397391,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397392,"byte_end":397395,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This stream can only be obtained by calling","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397396,"byte_end":397443,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/ [`Data::open()`](::data::Data::open()). The stream contains all of the data","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397444,"byte_end":397523,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ in the body of the request. It exposes no methods directly. Instead, it must","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397524,"byte_end":397604,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ be used as an opaque [`Read`] structure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397605,"byte_end":397649,"line_start":16,"line_end":16,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1656},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402070,"byte_end":402077,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::data::from_data::Outcome","value":"outcome::Outcome<S, (Status, E), Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromData` conversion.\n","sig":null,"attributes":[{"value":"/ Type alias for the `Outcome` of a `FromData` conversion.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402000,"byte_end":402060,"line_start":9,"line_end":9,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402945,"byte_end":402950,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Owned","qualname":"::data::from_data::Transform::Owned","value":"Transform::Owned(T)","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Indicates that data should be or has been transformed into the\n [`FromData::Owned`] variant.\n","sig":null,"attributes":[{"value":"/ Indicates that data should be or has been transformed into the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402837,"byte_end":402903,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ [`FromData::Owned`] variant.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402908,"byte_end":402940,"line_start":39,"line_end":39,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403071,"byte_end":403079,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::data::from_data::Transform::Borrowed","value":"Transform::Borrowed(B)","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Indicates that data should be or has been transformed into the\n [`FromData::Borrowed`] variant.\n","sig":null,"attributes":[{"value":"/ Indicates that data should be or has been transformed into the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402960,"byte_end":403026,"line_start":42,"line_end":42,"column_start":5,"column_end":71}},{"value":"/ [`FromData::Borrowed`] variant.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403031,"byte_end":403066,"line_start":43,"line_end":43,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":1667},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402811,"byte_end":402820,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"Transform","qualname":"::data::from_data::Transform","value":"Transform::{Owned, Borrowed}","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1673}],"decl_id":null,"docs":" Indicates how incoming data should be transformed before being parsed and\n validated by a data guard.","sig":null,"attributes":[{"value":"/ Indicates how incoming data should be transformed before being parsed and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402627,"byte_end":402704,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ validated by a data guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402705,"byte_end":402735,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402736,"byte_end":402739,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [`FromData`] for usage details.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402740,"byte_end":402801,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403493,"byte_end":403498,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"owned","qualname":"<Transform<T, B>>::owned","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Owned` value if `self` is `Owned`.","sig":null,"attributes":[{"value":"/ Returns the `Owned` value if `self` is `Owned`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403119,"byte_end":403170,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403175,"byte_end":403178,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403183,"byte_end":403195,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403200,"byte_end":403203,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` is `Borrowed`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403208,"byte_end":403243,"line_start":52,"line_end":52,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403248,"byte_end":403251,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403256,"byte_end":403259,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403264,"byte_end":403277,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403282,"byte_end":403285,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403290,"byte_end":403301,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ use rocket::data::Transform;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403306,"byte_end":403338,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403343,"byte_end":403346,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let owned: Transform<usize, &[usize]> = Transform::Owned(10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403351,"byte_end":403416,"line_start":60,"line_end":60,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(owned.owned(), 10);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403421,"byte_end":403455,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403460,"byte_end":403467,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403472,"byte_end":403481,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404044,"byte_end":404052,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<Transform<T, B>>::borrowed","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Borrowed` value if `self` is `Borrowed`.","sig":null,"attributes":[{"value":"/ Returns the `Borrowed` value if `self` is `Borrowed`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403683,"byte_end":403740,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403745,"byte_end":403748,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403753,"byte_end":403765,"line_start":73,"line_end":73,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403770,"byte_end":403773,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` is `Owned`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403778,"byte_end":403810,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403815,"byte_end":403818,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403823,"byte_end":403834,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ use rocket::data::Transform;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403839,"byte_end":403871,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403876,"byte_end":403879,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let borrowed: Transform<usize, &[usize]> = Transform::Borrowed(&[10]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403884,"byte_end":403958,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(borrowed.borrowed(), &[10]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403963,"byte_end":404006,"line_start":81,"line_end":81,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404011,"byte_end":404018,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404023,"byte_end":404032,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1681},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404773,"byte_end":404784,"line_start":105,"line_end":105,"column_start":10,"column_end":21},"name":"Transformed","qualname":"::data::from_data::Transformed","value":"Transform<Outcome<<T as FromData<'a>>::Owned, <T as FromData<'a>>::Error>,\n          Outcome<&'a <T as FromData<'a>>::Borrowed,\n                  <T as FromData<'a>>::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to the `outcome` input type of [`FromData::from_data`].","sig":null,"attributes":[{"value":"/ Type alias to the `outcome` input type of [`FromData::from_data`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404235,"byte_end":404305,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404306,"byte_end":404309,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This is a hairy type, but the gist is that this is a [`Transform`] where,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404310,"byte_end":404387,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ for a given `T: FromData`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404388,"byte_end":404418,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404419,"byte_end":404422,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/   * The `Owned` variant is an `Outcome` whose `Success` value is of type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404423,"byte_end":404499,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/     [`FromData::Owned`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404500,"byte_end":404528,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404529,"byte_end":404532,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/   * The `Borrowed` variant is an `Outcome` whose `Success` value is a borrow","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404533,"byte_end":404613,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/     of type [`FromData::Borrowed`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404614,"byte_end":404653,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404654,"byte_end":404657,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/   * In either case, the `Outcome`'s `Failure` variant is a value of type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404658,"byte_end":404734,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/     [`FromData::Error`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404735,"byte_end":404763,"line_start":104,"line_end":104,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1684},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413583,"byte_end":413591,"line_start":322,"line_end":322,"column_start":11,"column_end":19},"name":"FromData","qualname":"::data::from_data::FromData","value":"FromData<'a>: Sized","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690}],"decl_id":null,"docs":" Trait implemented by data guards to derive a value from request body data.","sig":null,"attributes":[{"value":"/ Trait implemented by data guards to derive a value from request body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":404969,"byte_end":405047,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405048,"byte_end":405051,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Data Guards","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405052,"byte_end":405069,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405070,"byte_end":405073,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ A data guard is a [request guard] that operates on a request's body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405074,"byte_end":405151,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/ Data guards validate, parse, and optionally convert request body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405152,"byte_end":405226,"line_start":116,"line_end":116,"column_start":1,"column_end":75}},{"value":"/ Validation and parsing/conversion is implemented through `FromData`. In","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405227,"byte_end":405302,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ other words, every type that implements `FromData` is a data guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405303,"byte_end":405374,"line_start":118,"line_end":118,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405375,"byte_end":405378,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Data guards are used as the target of the `data` route attribute parameter.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405379,"byte_end":405458,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ A handler can have at most one data guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405459,"byte_end":405505,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405506,"byte_end":405509,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ For many data guards, implementing [`FromDataSimple`] will be simpler and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405510,"byte_end":405587,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ sufficient. All types that implement `FromDataSimple` automatically","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405588,"byte_end":405659,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"/ implement `FromData`. Thus, when possible, prefer to implement","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405660,"byte_end":405726,"line_start":125,"line_end":125,"column_start":1,"column_end":67}},{"value":"/ [`FromDataSimple`] instead of `FromData`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405727,"byte_end":405772,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405773,"byte_end":405776,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [request guard]: ::request::FromRequest","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405777,"byte_end":405820,"line_start":128,"line_end":128,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405821,"byte_end":405824,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405825,"byte_end":405839,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405840,"byte_end":405843,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In the example below, `var` is used as the argument name for the data guard","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405844,"byte_end":405923,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ type `DataGuard`. When the `submit` route matches, Rocket will call the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":405924,"byte_end":405999,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ `FromData` implementation for the type `T`. The handler will only be called","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406000,"byte_end":406079,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ if the guard returns successfully.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406080,"byte_end":406118,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406119,"byte_end":406122,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406123,"byte_end":406134,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406135,"byte_end":406184,"line_start":138,"line_end":138,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406185,"byte_end":406224,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/ # type DataGuard = ::rocket::data::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406225,"byte_end":406269,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/ #[post(\"/submit\", data = \"<var>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406270,"byte_end":406308,"line_start":141,"line_end":141,"column_start":1,"column_end":39}},{"value":"/ fn submit(var: DataGuard) { /* ... */ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406309,"byte_end":406352,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/ # fn main() { }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406353,"byte_end":406372,"line_start":143,"line_end":143,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406373,"byte_end":406380,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406381,"byte_end":406384,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Transforming","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406385,"byte_end":406403,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406404,"byte_end":406407,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Data guards can optionally _transform_ incoming data before processing it","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406408,"byte_end":406485,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/ via an implementation of the [`FromData::transform()`] method. This is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406486,"byte_end":406560,"line_start":149,"line_end":149,"column_start":1,"column_end":75}},{"value":"/ useful when a data guard requires or could benefit from a reference to body","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406561,"byte_end":406640,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ data as opposed to an owned version. If a data guard has no need to operate","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406641,"byte_end":406720,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ on a reference to body data, [`FromDataSimple`] should be implemented","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406721,"byte_end":406794,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/ instead; it is simpler to implement and less error prone. All types that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406795,"byte_end":406871,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ implement `FromDataSimple` automatically implement `FromData`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406872,"byte_end":406938,"line_start":154,"line_end":154,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406939,"byte_end":406942,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ When exercising a data guard, Rocket first calls the guard's","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":406943,"byte_end":407007,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/ [`FromData::transform()`] method and then subsequently calls the guard's","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407008,"byte_end":407084,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ [`FromData::from_data()`] method. Rocket stores data returned by","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407085,"byte_end":407153,"line_start":158,"line_end":158,"column_start":1,"column_end":69}},{"value":"/ [`FromData::transform()`] on the stack. If `transform` returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407154,"byte_end":407222,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ [`Transform::Owned`], Rocket moves the data back to the data guard in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407223,"byte_end":407300,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ subsequent `from_data` call as a `Transform::Owned`. If instead `transform`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407301,"byte_end":407380,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ returns a [`Transform::Borrowed`] variant, Rocket calls `borrow()` on the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407381,"byte_end":407458,"line_start":162,"line_end":162,"column_start":1,"column_end":78}},{"value":"/ owned value, producing a borrow of the associated [`FromData::Borrowed`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407459,"byte_end":407535,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/ type and passing it as a `Transform::Borrowed`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407536,"byte_end":407587,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407588,"byte_end":407591,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407592,"byte_end":407606,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407607,"byte_end":407610,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Consider a data guard type that wishes to hold a slice to two different","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407611,"byte_end":407686,"line_start":168,"line_end":168,"column_start":1,"column_end":76}},{"value":"/ parts of the incoming data:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407687,"byte_end":407718,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407719,"byte_end":407722,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407723,"byte_end":407734,"line_start":171,"line_end":171,"column_start":1,"column_end":12}},{"value":"/ struct Name<'a> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407735,"byte_end":407756,"line_start":172,"line_end":172,"column_start":1,"column_end":22}},{"value":"/     first: &'a str,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407757,"byte_end":407780,"line_start":173,"line_end":173,"column_start":1,"column_end":24}},{"value":"/     last: &'a str","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407781,"byte_end":407802,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407803,"byte_end":407808,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407809,"byte_end":407816,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407817,"byte_end":407820,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Without the ability to transform into a borrow, implementing such a data","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407821,"byte_end":407897,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ guard would be impossible. With transformation, however, we can instruct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407898,"byte_end":407974,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ Rocket to produce a borrow to a `Data` that has been transformed into a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":407975,"byte_end":408050,"line_start":180,"line_end":180,"column_start":1,"column_end":76}},{"value":"/ `String` (an `&str`).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408051,"byte_end":408076,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408077,"byte_end":408080,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408081,"byte_end":408092,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408093,"byte_end":408142,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408143,"byte_end":408182,"line_start":185,"line_end":185,"column_start":1,"column_end":40}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408183,"byte_end":408205,"line_start":186,"line_end":186,"column_start":1,"column_end":23}},{"value":"/ # struct Name<'a> { first: &'a str, last: &'a str, }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408206,"byte_end":408262,"line_start":187,"line_end":187,"column_start":1,"column_end":57}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408263,"byte_end":408293,"line_start":188,"line_end":188,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408294,"byte_end":408297,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ use rocket::{Request, Data, Outcome::*};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408298,"byte_end":408342,"line_start":190,"line_end":190,"column_start":1,"column_end":45}},{"value":"/ use rocket::data::{FromData, Outcome, Transform, Transformed};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408343,"byte_end":408409,"line_start":191,"line_end":191,"column_start":1,"column_end":67}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408410,"byte_end":408439,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408440,"byte_end":408443,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ const NAME_LIMIT: u64 = 256;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408444,"byte_end":408476,"line_start":194,"line_end":194,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408477,"byte_end":408480,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ enum NameError {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408481,"byte_end":408501,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/     Io(io::Error),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408502,"byte_end":408524,"line_start":197,"line_end":197,"column_start":1,"column_end":23}},{"value":"/     Parse","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408525,"byte_end":408538,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408539,"byte_end":408544,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408545,"byte_end":408548,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ impl<'a> FromData<'a> for Name<'a> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408549,"byte_end":408589,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/     type Error = NameError;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408590,"byte_end":408621,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"/     type Owned = String;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408622,"byte_end":408650,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/     type Borrowed = str;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408651,"byte_end":408679,"line_start":204,"line_end":204,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408680,"byte_end":408683,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/     fn transform(_: &Request, data: Data) -> Transform<Outcome<Self::Owned, Self::Error>> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408684,"byte_end":408779,"line_start":206,"line_end":206,"column_start":1,"column_end":96}},{"value":"/         let mut stream = data.open().take(NAME_LIMIT);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408780,"byte_end":408838,"line_start":207,"line_end":207,"column_start":1,"column_end":59}},{"value":"/         let mut string = String::with_capacity((NAME_LIMIT / 2) as usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408839,"byte_end":408917,"line_start":208,"line_end":208,"column_start":1,"column_end":79}},{"value":"/         let outcome = match stream.read_to_string(&mut string) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408918,"byte_end":408986,"line_start":209,"line_end":209,"column_start":1,"column_end":69}},{"value":"/             Ok(_) => Success(string),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":408987,"byte_end":409028,"line_start":210,"line_end":210,"column_start":1,"column_end":42}},{"value":"/             Err(e) => Failure((Status::InternalServerError, NameError::Io(e)))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409029,"byte_end":409111,"line_start":211,"line_end":211,"column_start":1,"column_end":83}},{"value":"/         };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409112,"byte_end":409126,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409127,"byte_end":409130,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/         // Returning `Borrowed` here means we get `Borrowed` in `from_data`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409131,"byte_end":409211,"line_start":214,"line_end":214,"column_start":1,"column_end":81}},{"value":"/         Transform::Borrowed(outcome)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409212,"byte_end":409252,"line_start":215,"line_end":215,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409253,"byte_end":409262,"line_start":216,"line_end":216,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409263,"byte_end":409266,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/     fn from_data(_: &Request, outcome: Transformed<'a, Self>) -> Outcome<Self, Self::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409267,"byte_end":409364,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/         // Retrieve a borrow to the now transformed `String` (an &str). This","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409365,"byte_end":409445,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/         // is only correct because we know we _always_ return a `Borrowed` from","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409446,"byte_end":409529,"line_start":220,"line_end":220,"column_start":1,"column_end":84}},{"value":"/         // `transform` above.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409530,"byte_end":409563,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/         let string = outcome.borrowed()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409564,"byte_end":409609,"line_start":222,"line_end":222,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409610,"byte_end":409613,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/         // Perform a crude, inefficient parse.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409614,"byte_end":409664,"line_start":224,"line_end":224,"column_start":1,"column_end":51}},{"value":"/         let splits: Vec<&str> = string.split(\" \").collect();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409665,"byte_end":409729,"line_start":225,"line_end":225,"column_start":1,"column_end":65}},{"value":"/         if splits.len() != 2 || splits.iter().any(|s| s.is_empty()) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409730,"byte_end":409803,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/             return Failure((Status::UnprocessableEntity, NameError::Parse));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409804,"byte_end":409884,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409885,"byte_end":409898,"line_start":228,"line_end":228,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409899,"byte_end":409902,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/         // Return successfully.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409903,"byte_end":409938,"line_start":230,"line_end":230,"column_start":1,"column_end":36}},{"value":"/         Success(Name { first: splits[0], last: splits[1] })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":409939,"byte_end":410002,"line_start":231,"line_end":231,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410003,"byte_end":410012,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410013,"byte_end":410018,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ # #[post(\"/person\", data = \"<person>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410019,"byte_end":410062,"line_start":234,"line_end":234,"column_start":1,"column_end":44}},{"value":"/ # fn person(person: Name) {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410063,"byte_end":410097,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/ # #[post(\"/person\", data = \"<person>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410098,"byte_end":410141,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/ # fn person2(person: Result<Name, NameError>) {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410142,"byte_end":410196,"line_start":237,"line_end":237,"column_start":1,"column_end":55}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410197,"byte_end":410217,"line_start":238,"line_end":238,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410218,"byte_end":410225,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410226,"byte_end":410229,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ # Outcomes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410230,"byte_end":410244,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410245,"byte_end":410248,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The returned [`Outcome`] of a `from_data` call determines how the incoming","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410249,"byte_end":410327,"line_start":243,"line_end":243,"column_start":1,"column_end":79}},{"value":"/ request will be processed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410328,"byte_end":410358,"line_start":244,"line_end":244,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410359,"byte_end":410362,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ * **Success**(S)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410363,"byte_end":410383,"line_start":246,"line_end":246,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410384,"byte_end":410387,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Success`], then the `Success` value will be used as","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410388,"byte_end":410467,"line_start":248,"line_end":248,"column_start":1,"column_end":80}},{"value":"/   the value for the data parameter.  As long as all other parsed types","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410468,"byte_end":410542,"line_start":249,"line_end":249,"column_start":1,"column_end":75}},{"value":"/   succeed, the request will be handled by the requesting handler.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410543,"byte_end":410612,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410613,"byte_end":410616,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ * **Failure**(Status, E)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410617,"byte_end":410645,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410646,"byte_end":410649,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Failure`], the request will fail with the given","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410650,"byte_end":410725,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/   status code and error. The designated error [`Catcher`](::Catcher) will be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410726,"byte_end":410806,"line_start":255,"line_end":255,"column_start":1,"column_end":81}},{"value":"/   used to respond to the request. Note that users can request types of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410807,"byte_end":410881,"line_start":256,"line_end":256,"column_start":1,"column_end":75}},{"value":"/   `Result<S, E>` and `Option<S>` to catch `Failure`s and retrieve the error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410882,"byte_end":410961,"line_start":257,"line_end":257,"column_start":1,"column_end":80}},{"value":"/   value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410962,"byte_end":410974,"line_start":258,"line_end":258,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410975,"byte_end":410978,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ * **Forward**(Data)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":410979,"byte_end":411002,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411003,"byte_end":411006,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/   If the `Outcome` is [`Forward`], the request will be forwarded to the next","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411007,"byte_end":411087,"line_start":262,"line_end":262,"column_start":1,"column_end":81}},{"value":"/   matching request. This requires that no data has been read from the `Data`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411088,"byte_end":411168,"line_start":263,"line_end":263,"column_start":1,"column_end":81}},{"value":"/   parameter. Note that users can request an `Option<S>` to catch `Forward`s.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411169,"byte_end":411249,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411250,"byte_end":411253,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Provided Implementations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411254,"byte_end":411284,"line_start":266,"line_end":266,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411285,"byte_end":411288,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Rocket implements `FromData` for several built-in types. Their behavior is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411289,"byte_end":411367,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ documented here.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411368,"byte_end":411388,"line_start":269,"line_end":269,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411389,"byte_end":411392,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/   * **Data**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411393,"byte_end":411409,"line_start":271,"line_end":271,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411410,"byte_end":411413,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/     The identity implementation; simply returns [`Data`] directly.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411414,"byte_end":411484,"line_start":273,"line_end":273,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411485,"byte_end":411488,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411489,"byte_end":411547,"line_start":275,"line_end":275,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411548,"byte_end":411551,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/   * **Option&lt;T>** _where_ **T: FromData**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411552,"byte_end":411600,"line_start":277,"line_end":277,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411601,"byte_end":411604,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/     The type `T` is derived from the incoming data using `T`'s `FromData`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411605,"byte_end":411682,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"/     implementation. If the derivation is a `Success`, the derived value is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411683,"byte_end":411761,"line_start":280,"line_end":280,"column_start":1,"column_end":79}},{"value":"/     returned in `Some`. Otherwise, a `None` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411762,"byte_end":411822,"line_start":281,"line_end":281,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411823,"byte_end":411826,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/     _This implementation always returns successfully._","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411827,"byte_end":411885,"line_start":283,"line_end":283,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411886,"byte_end":411889,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/   * **Result&lt;T, T::Error>** _where_ **T: FromData**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411890,"byte_end":411948,"line_start":285,"line_end":285,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411949,"byte_end":411952,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/     The type `T` is derived from the incoming data using `T`'s `FromData`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":411953,"byte_end":412030,"line_start":287,"line_end":287,"column_start":1,"column_end":78}},{"value":"/     implementation. If derivation is a `Success`, the value is returned in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412031,"byte_end":412109,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/     `Ok`. If the derivation is a `Failure`, the error value is returned in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412110,"byte_end":412188,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/     `Err`. If the derivation is a `Forward`, the request is forwarded.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412189,"byte_end":412263,"line_start":290,"line_end":290,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412264,"byte_end":412267,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/   * **String**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412268,"byte_end":412286,"line_start":292,"line_end":292,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412287,"byte_end":412290,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/     **Note:** _An implementation of `FromData` for `String` is only available","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412291,"byte_end":412372,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/     when compiling in debug mode!_","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412373,"byte_end":412411,"line_start":295,"line_end":295,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412412,"byte_end":412415,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/     Reads the entire request body into a `String`. If reading fails, returns","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412416,"byte_end":412496,"line_start":297,"line_end":297,"column_start":1,"column_end":81}},{"value":"/     a `Failure` with the corresponding `io::Error`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412497,"byte_end":412552,"line_start":298,"line_end":298,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412553,"byte_end":412556,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/     **WARNING:** Do **not** use this implementation for anything _but_","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412557,"byte_end":412631,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/     debugging. This is because the implementation reads the entire body into","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412632,"byte_end":412712,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/     memory; since the user controls the size of the body, this is an obvious","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412713,"byte_end":412793,"line_start":302,"line_end":302,"column_start":1,"column_end":81}},{"value":"/     vector for a denial of service attack.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412794,"byte_end":412840,"line_start":303,"line_end":303,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412841,"byte_end":412844,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/   * **Vec&lt;u8>**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412845,"byte_end":412867,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412868,"byte_end":412871,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/     **Note:** _An implementation of `FromData` for `Vec<u8>` is only","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412872,"byte_end":412944,"line_start":307,"line_end":307,"column_start":1,"column_end":73}},{"value":"/     available when compiling in debug mode!_","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412945,"byte_end":412993,"line_start":308,"line_end":308,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412994,"byte_end":412997,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/     Reads the entire request body into a `Vec<u8>`. If reading fails,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":412998,"byte_end":413071,"line_start":310,"line_end":310,"column_start":1,"column_end":74}},{"value":"/     returns a `Failure` with the corresponding `io::Error`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413072,"byte_end":413135,"line_start":311,"line_end":311,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413136,"byte_end":413139,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     **WARNING:** Do **not** use this implementation for anything _but_","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413140,"byte_end":413214,"line_start":313,"line_end":313,"column_start":1,"column_end":75}},{"value":"/     debugging. This is because the implementation reads the entire body into","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413215,"byte_end":413295,"line_start":314,"line_end":314,"column_start":1,"column_end":81}},{"value":"/     memory; since the user controls the size of the body, this is an obvious","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413296,"byte_end":413376,"line_start":315,"line_end":315,"column_start":1,"column_end":81}},{"value":"/     vector for a denial of service attack.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413377,"byte_end":413423,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413424,"byte_end":413427,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ # Simplified `FromData`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413428,"byte_end":413455,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413456,"byte_end":413459,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ For an example of a type that wouldn't require transformation, see the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413460,"byte_end":413534,"line_start":320,"line_end":320,"column_start":1,"column_end":75}},{"value":"/ [`FromDataSimple`] documentation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413535,"byte_end":413572,"line_start":321,"line_end":321,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1686},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413680,"byte_end":413685,"line_start":324,"line_end":324,"column_start":10,"column_end":15},"name":"Error","qualname":"::data::from_data::FromData::Error","value":"type Error;","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" The associated error to be returned when the guard fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned when the guard fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413609,"byte_end":413670,"line_start":323,"line_end":323,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1687},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413891,"byte_end":413896,"line_start":330,"line_end":330,"column_start":10,"column_end":15},"name":"Owned","qualname":"::data::from_data::FromData::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" The owned type returned from [`FromData::transform()`].","sig":null,"attributes":[{"value":"/ The owned type returned from [`FromData::transform()`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413692,"byte_end":413751,"line_start":326,"line_end":326,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413756,"byte_end":413759,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The trait bounds ensures that it is is possible to borrow an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413764,"byte_end":413828,"line_start":328,"line_end":328,"column_start":5,"column_end":69}},{"value":"/ `&Self::Borrowed` from a value of this type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413833,"byte_end":413881,"line_start":329,"line_end":329,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1688},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414210,"byte_end":414218,"line_start":337,"line_end":337,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::data::from_data::FromData::Borrowed","value":"type Borrowed: ?Sized;","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" The _borrowed_ type consumed by [`FromData::from_data()`] when\n [`FromData::transform()`] returns a [`Transform::Borrowed`].","sig":null,"attributes":[{"value":"/ The _borrowed_ type consumed by [`FromData::from_data()`] when","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413927,"byte_end":413993,"line_start":332,"line_end":332,"column_start":5,"column_end":71}},{"value":"/ [`FromData::transform()`] returns a [`Transform::Borrowed`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413998,"byte_end":414062,"line_start":333,"line_end":333,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414067,"byte_end":414070,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If [`FromData::from_data()`] returns a [`Transform::Owned`], this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414075,"byte_end":414144,"line_start":335,"line_end":335,"column_start":5,"column_end":74}},{"value":"/ associated type should be set to `Self::Owned`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414149,"byte_end":414200,"line_start":336,"line_end":336,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415358,"byte_end":415367,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"transform","qualname":"::data::from_data::FromData::transform","value":"fn (request: &Request, data: Data) -> Transform<Outcome<Self::Owned, Self::Error>>","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" Transforms `data` into a value of type `Self::Owned`.","sig":null,"attributes":[{"value":"/ Transforms `data` into a value of type `Self::Owned`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414233,"byte_end":414290,"line_start":339,"line_end":339,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414295,"byte_end":414298,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method returns a `Transform::Owned(Self::Owned)`, then","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414303,"byte_end":414369,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ `from_data` should subsequently be called with a `data` value of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414374,"byte_end":414442,"line_start":342,"line_end":342,"column_start":5,"column_end":73}},{"value":"/ `Transform::Owned(Self::Owned)`. If this method returns a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414447,"byte_end":414508,"line_start":343,"line_end":343,"column_start":5,"column_end":66}},{"value":"/ `Transform::Borrowed(Self::Owned)`, `from_data` should subsequently be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414513,"byte_end":414587,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ called with a `data` value of `Transform::Borrowed(&Self::Borrowed)`. In","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414592,"byte_end":414668,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ other words, the variant of `Transform` returned from this method is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414673,"byte_end":414745,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ used to determine which variant of `Transform` should be passed to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414750,"byte_end":414824,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ `from_data` method. Rocket _always_ makes the subsequent call correctly.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414829,"byte_end":414905,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414910,"byte_end":414913,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ It is very unlikely that a correct implementation of this method is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414918,"byte_end":414989,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ capable of returning either of an `Owned` or `Borrowed` variant.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":414994,"byte_end":415062,"line_start":351,"line_end":351,"column_start":5,"column_end":73}},{"value":"/ Instead, this method should return exactly _one_ of these variants.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415067,"byte_end":415138,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415143,"byte_end":415146,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If transformation succeeds, an outcome of `Success` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415151,"byte_end":415219,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/ If the data is not appropriate given the type of `Self`, `Forward` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415224,"byte_end":415297,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/ returned. On failure, `Failure` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415302,"byte_end":415350,"line_start":356,"line_end":356,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416593,"byte_end":416602,"line_start":386,"line_end":386,"column_start":8,"column_end":17},"name":"from_data","qualname":"::data::from_data::FromData::from_data","value":"fn (request: &Request, outcome: Transformed<'a, Self>) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" Validates, parses, and converts the incoming request body data into an\n instance of `Self`.","sig":null,"attributes":[{"value":"/ Validates, parses, and converts the incoming request body data into an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415453,"byte_end":415527,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ instance of `Self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415532,"byte_end":415555,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415560,"byte_end":415563,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ If validation and parsing succeeds, an outcome of `Success` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415568,"byte_end":415644,"line_start":362,"line_end":362,"column_start":5,"column_end":81}},{"value":"/ If the data is not appropriate given the type of `Self`, `Forward` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415649,"byte_end":415722,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ returned. If parsing or validation fails, `Failure` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415727,"byte_end":415795,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415800,"byte_end":415803,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415808,"byte_end":415821,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415826,"byte_end":415829,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ When implementing this method, you rarely need to destruct the `outcome`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415834,"byte_end":415910,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ parameter. Instead, the first line of the method should be one of the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415915,"byte_end":415988,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ following:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":415993,"byte_end":416007,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416012,"byte_end":416015,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416020,"byte_end":416031,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ # use rocket::data::{Data, FromData, Transformed, Outcome};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416036,"byte_end":416099,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/ # fn f<'a>(outcome: Transformed<'a, Data>) -> Outcome<Data, <Data as FromData<'a>>::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416104,"byte_end":416200,"line_start":374,"line_end":374,"column_start":5,"column_end":101}},{"value":"/ // If `Owned` was returned from `transform`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416205,"byte_end":416253,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/ let data = outcome.owned()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416258,"byte_end":416290,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/ # unimplemented!()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416295,"byte_end":416317,"line_start":377,"line_end":377,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416322,"byte_end":416329,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416334,"byte_end":416337,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # fn g<'a>(outcome: Transformed<'a, Data>) -> Outcome<Data, <Data as FromData<'a>>::Error> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416342,"byte_end":416438,"line_start":380,"line_end":380,"column_start":5,"column_end":101}},{"value":"/ // If `Borrowed` was returned from `transform`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416443,"byte_end":416494,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"/ let data = outcome.borrowed()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416499,"byte_end":416534,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ # unimplemented!()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416539,"byte_end":416561,"line_start":383,"line_end":383,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416566,"byte_end":416573,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416578,"byte_end":416585,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1698},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420296,"byte_end":420310,"line_start":495,"line_end":495,"column_start":11,"column_end":25},"name":"FromDataSimple","qualname":"::data::from_data::FromDataSimple","value":"FromDataSimple: Sized","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700}],"decl_id":null,"docs":" A simple, less complex variant of [`FromData`].","sig":null,"attributes":[{"value":"/ A simple, less complex variant of [`FromData`].","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417184,"byte_end":417235,"line_start":406,"line_end":406,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417236,"byte_end":417239,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ When transformation of incoming data isn't required, data guards should","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417240,"byte_end":417315,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/ implement this trait instead of [`FromData`]. Any type that implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417316,"byte_end":417390,"line_start":409,"line_end":409,"column_start":1,"column_end":75}},{"value":"/ `FromDataSimple` automatically implements `FromData`. For a description of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417391,"byte_end":417469,"line_start":410,"line_end":410,"column_start":1,"column_end":79}},{"value":"/ data guards, see the [`FromData`] documentation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417470,"byte_end":417522,"line_start":411,"line_end":411,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417523,"byte_end":417526,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417527,"byte_end":417540,"line_start":413,"line_end":413,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417541,"byte_end":417544,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ Say that you have a custom type, `Person`:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417545,"byte_end":417591,"line_start":415,"line_end":415,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417592,"byte_end":417595,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417596,"byte_end":417607,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/ struct Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417608,"byte_end":417627,"line_start":418,"line_end":418,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417628,"byte_end":417649,"line_start":419,"line_end":419,"column_start":1,"column_end":22}},{"value":"/     age: u16","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417650,"byte_end":417666,"line_start":420,"line_end":420,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417667,"byte_end":417672,"line_start":421,"line_end":421,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417673,"byte_end":417680,"line_start":422,"line_end":422,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417681,"byte_end":417684,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ `Person` has a custom serialization format, so the built-in `Json` type","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417685,"byte_end":417760,"line_start":424,"line_end":424,"column_start":1,"column_end":76}},{"value":"/ doesn't suffice. The format is `<name>:<age>` with `Content-Type:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417761,"byte_end":417830,"line_start":425,"line_end":425,"column_start":1,"column_end":70}},{"value":"/ application/x-person`. You'd like to use `Person` as a `FromData` type so","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417831,"byte_end":417908,"line_start":426,"line_end":426,"column_start":1,"column_end":78}},{"value":"/ that you can retrieve it directly from a client's request body:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417909,"byte_end":417976,"line_start":427,"line_end":427,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417977,"byte_end":417980,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417981,"byte_end":417992,"line_start":429,"line_end":429,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":417993,"byte_end":418042,"line_start":430,"line_end":430,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418043,"byte_end":418082,"line_start":431,"line_end":431,"column_start":1,"column_end":40}},{"value":"/ # type Person = ::rocket::data::Data;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418083,"byte_end":418124,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/ #[post(\"/person\", data = \"<person>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418125,"byte_end":418166,"line_start":433,"line_end":433,"column_start":1,"column_end":42}},{"value":"/ fn person(person: Person) -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418167,"byte_end":418214,"line_start":434,"line_end":434,"column_start":1,"column_end":48}},{"value":"/     \"Saved the new person to the database!\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418215,"byte_end":418262,"line_start":435,"line_end":435,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418263,"byte_end":418268,"line_start":436,"line_end":436,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418269,"byte_end":418276,"line_start":437,"line_end":437,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418277,"byte_end":418280,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ A `FromDataSimple` implementation allowing this looks like:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418281,"byte_end":418344,"line_start":439,"line_end":439,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418345,"byte_end":418348,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418349,"byte_end":418360,"line_start":441,"line_end":441,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418361,"byte_end":418410,"line_start":442,"line_end":442,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418411,"byte_end":418450,"line_start":443,"line_end":443,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418451,"byte_end":418456,"line_start":444,"line_end":444,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418457,"byte_end":418479,"line_start":445,"line_end":445,"column_start":1,"column_end":23}},{"value":"/ # struct Person { name: String, age: u16 }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418480,"byte_end":418526,"line_start":446,"line_end":446,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418527,"byte_end":418532,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418533,"byte_end":418555,"line_start":448,"line_end":448,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418556,"byte_end":418559,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ use rocket::{Request, Data, Outcome, Outcome::*};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418560,"byte_end":418613,"line_start":450,"line_end":450,"column_start":1,"column_end":54}},{"value":"/ use rocket::data::{self, FromDataSimple};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418614,"byte_end":418659,"line_start":451,"line_end":451,"column_start":1,"column_end":46}},{"value":"/ use rocket::http::{Status, ContentType};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418660,"byte_end":418704,"line_start":452,"line_end":452,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418705,"byte_end":418708,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ // Always use a limit to prevent DoS attacks.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418709,"byte_end":418758,"line_start":454,"line_end":454,"column_start":1,"column_end":50}},{"value":"/ const LIMIT: u64 = 256;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418759,"byte_end":418786,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418787,"byte_end":418790,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ impl FromDataSimple for Person {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418791,"byte_end":418827,"line_start":457,"line_end":457,"column_start":1,"column_end":37}},{"value":"/     type Error = String;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418828,"byte_end":418856,"line_start":458,"line_end":458,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418857,"byte_end":418860,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/     fn from_data(req: &Request, data: Data) -> data::Outcome<Self, String> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418861,"byte_end":418941,"line_start":460,"line_end":460,"column_start":1,"column_end":81}},{"value":"/         // Ensure the content type is correct before opening the data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":418942,"byte_end":419016,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/         let person_ct = ContentType::new(\"application\", \"x-person\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419017,"byte_end":419089,"line_start":462,"line_end":462,"column_start":1,"column_end":73}},{"value":"/         if req.content_type() != Some(&person_ct) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419090,"byte_end":419145,"line_start":463,"line_end":463,"column_start":1,"column_end":56}},{"value":"/             return Outcome::Forward(data);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419146,"byte_end":419192,"line_start":464,"line_end":464,"column_start":1,"column_end":47}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419193,"byte_end":419206,"line_start":465,"line_end":465,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419207,"byte_end":419210,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/         // Read the data into a String.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419211,"byte_end":419254,"line_start":467,"line_end":467,"column_start":1,"column_end":44}},{"value":"/         let mut string = String::new();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419255,"byte_end":419298,"line_start":468,"line_end":468,"column_start":1,"column_end":44}},{"value":"/         if let Err(e) = data.open().take(LIMIT).read_to_string(&mut string) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419299,"byte_end":419380,"line_start":469,"line_end":469,"column_start":1,"column_end":82}},{"value":"/             return Failure((Status::InternalServerError, format!(\"{:?}\", e)));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419381,"byte_end":419463,"line_start":470,"line_end":470,"column_start":1,"column_end":83}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419464,"byte_end":419477,"line_start":471,"line_end":471,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419478,"byte_end":419481,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/         // Split the string into two pieces at ':'.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419482,"byte_end":419537,"line_start":473,"line_end":473,"column_start":1,"column_end":56}},{"value":"/         let (name, age) = match string.find(':') {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419538,"byte_end":419592,"line_start":474,"line_end":474,"column_start":1,"column_end":55}},{"value":"/             Some(i) => (string[..i].to_string(), &string[(i + 1)..]),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419593,"byte_end":419666,"line_start":475,"line_end":475,"column_start":1,"column_end":74}},{"value":"/             None => return Failure((Status::UnprocessableEntity, \"':'\".into()))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419667,"byte_end":419750,"line_start":476,"line_end":476,"column_start":1,"column_end":84}},{"value":"/         };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419751,"byte_end":419765,"line_start":477,"line_end":477,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419766,"byte_end":419769,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/         // Parse the age.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419770,"byte_end":419799,"line_start":479,"line_end":479,"column_start":1,"column_end":30}},{"value":"/         let age: u16 = match age.parse() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419800,"byte_end":419846,"line_start":480,"line_end":480,"column_start":1,"column_end":47}},{"value":"/             Ok(age) => age,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419847,"byte_end":419878,"line_start":481,"line_end":481,"column_start":1,"column_end":32}},{"value":"/             Err(_) => return Failure((Status::UnprocessableEntity, \"Age\".into()))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419879,"byte_end":419964,"line_start":482,"line_end":482,"column_start":1,"column_end":86}},{"value":"/         };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419965,"byte_end":419979,"line_start":483,"line_end":483,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419980,"byte_end":419983,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/         // Return successfully.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":419984,"byte_end":420019,"line_start":485,"line_end":485,"column_start":1,"column_end":36}},{"value":"/         Success(Person { name, age })","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420020,"byte_end":420061,"line_start":486,"line_end":486,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420062,"byte_end":420071,"line_start":487,"line_end":487,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420072,"byte_end":420077,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/ # #[post(\"/person\", data = \"<person>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420078,"byte_end":420121,"line_start":489,"line_end":489,"column_start":1,"column_end":44}},{"value":"/ # fn person(person: Person) {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420122,"byte_end":420158,"line_start":490,"line_end":490,"column_start":1,"column_end":37}},{"value":"/ # #[post(\"/person\", data = \"<person>\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420159,"byte_end":420202,"line_start":491,"line_end":491,"column_start":1,"column_end":44}},{"value":"/ # fn person2(person: Result<Person, String>) {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420203,"byte_end":420256,"line_start":492,"line_end":492,"column_start":1,"column_end":54}},{"value":"/ # fn main() {  }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420257,"byte_end":420277,"line_start":493,"line_end":493,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420278,"byte_end":420285,"line_start":494,"line_end":494,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420395,"byte_end":420400,"line_start":497,"line_end":497,"column_start":10,"column_end":15},"name":"Error","qualname":"::data::from_data::FromDataSimple::Error","value":"type Error;","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":" The associated error to be returned when the guard fails.\n","sig":null,"attributes":[{"value":"/ The associated error to be returned when the guard fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420324,"byte_end":420385,"line_start":496,"line_end":496,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420743,"byte_end":420752,"line_start":505,"line_end":505,"column_start":8,"column_end":17},"name":"from_data","qualname":"::data::from_data::FromDataSimple::from_data","value":"fn (request: &Request, data: Data) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":" Validates, parses, and converts an instance of `Self` from the incoming\n request body data.","sig":null,"attributes":[{"value":"/ Validates, parses, and converts an instance of `Self` from the incoming","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420407,"byte_end":420482,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ request body data.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420487,"byte_end":420509,"line_start":500,"line_end":500,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420514,"byte_end":420517,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ If validation and parsing succeeds, an outcome of `Success` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420522,"byte_end":420598,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ If the data is not appropriate given the type of `Self`, `Forward` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420603,"byte_end":420676,"line_start":503,"line_end":503,"column_start":5,"column_end":78}},{"value":"/ returned. If parsing fails, `Failure` is returned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420681,"byte_end":420735,"line_start":504,"line_end":504,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1742},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handler","qualname":"::handler","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1768},{"krate":0,"index":1770}],"decl_id":null,"docs":" Types and traits for request and error handlers and their return values.\n","sig":null,"attributes":[{"value":"! Types and traits for request and error handlers and their return values.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423249,"byte_end":423325,"line_start":1,"line_end":1,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1751},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423498,"byte_end":423505,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::handler::Outcome","value":"outcome::Outcome<Response<'r>, Status, Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `Handler`.\n","sig":null,"attributes":[{"value":"/ Type alias for the `Outcome` of a `Handler`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423440,"byte_end":423488,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1753},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427457,"byte_end":427464,"line_start":134,"line_end":134,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler: Cloneable + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1754}],"decl_id":null,"docs":" Trait implemented by types that can handle requests.","sig":null,"attributes":[{"value":"/ Trait implemented by types that can handle requests.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423559,"byte_end":423615,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423616,"byte_end":423619,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ In general, you will never need to implement `Handler` manually or be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423620,"byte_end":423693,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ concerned about the `Handler` trait; Rocket's code generation handles","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423694,"byte_end":423767,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ everything for you. You only need to learn about this trait if you want to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423768,"byte_end":423846,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ provide an external, library-based mechanism to handle requests where","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423847,"byte_end":423920,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ request handling depends on input from the user. In other words, if you want","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":423921,"byte_end":424001,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ to write a plugin for Rocket that looks mostly like a static route but need","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424002,"byte_end":424081,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ user provided state to make a request handling decision, you should consider","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424082,"byte_end":424162,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ implementing a custom `Handler`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424163,"byte_end":424199,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424200,"byte_end":424203,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424204,"byte_end":424217,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424218,"byte_end":424221,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Say you'd like to write a handler that changes its functionality based on an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424222,"byte_end":424302,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ enum value that the user provides:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424303,"byte_end":424341,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424342,"byte_end":424345,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424346,"byte_end":424357,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ #[derive(Copy, Clone)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424358,"byte_end":424384,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ enum Kind {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424385,"byte_end":424400,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     Simple,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424401,"byte_end":424416,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     Intermediate,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424417,"byte_end":424438,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     Complex,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424439,"byte_end":424455,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424456,"byte_end":424461,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424462,"byte_end":424469,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424470,"byte_end":424473,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Such a handler might be written and used as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424474,"byte_end":424530,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424531,"byte_end":424534,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424535,"byte_end":424546,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Copy, Clone)] enum Kind { Simple, Intermediate, Complex, }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424547,"byte_end":424620,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ use rocket::{Request, Data, Route, http::Method};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424621,"byte_end":424674,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ use rocket::handler::{self, Handler, Outcome};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424675,"byte_end":424725,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424726,"byte_end":424729,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424730,"byte_end":424750,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/ struct CustomHandler(Kind);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424751,"byte_end":424782,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424783,"byte_end":424786,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl Handler for CustomHandler {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424787,"byte_end":424823,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/     fn handle<'r>(&self, req: &'r Request, data: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424824,"byte_end":424899,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/         match self.0 {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424900,"byte_end":424926,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/             Kind::Simple => Outcome::from(req, \"simple\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424927,"byte_end":424988,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/             Kind::Intermediate => Outcome::from(req, \"intermediate\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":424989,"byte_end":425062,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/             Kind::Complex => Outcome::from(req, \"complex\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425063,"byte_end":425126,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425127,"byte_end":425140,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425141,"byte_end":425150,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425151,"byte_end":425156,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425157,"byte_end":425160,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ impl Into<Vec<Route>> for CustomHandler {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425161,"byte_end":425206,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/     fn into(self) -> Vec<Route> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425207,"byte_end":425244,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/         vec![Route::new(Method::Get, \"/\", self)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425245,"byte_end":425297,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425298,"byte_end":425307,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425308,"byte_end":425313,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425314,"byte_end":425317,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425318,"byte_end":425333,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425334,"byte_end":425350,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425351,"byte_end":425375,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/         .mount(\"/\", CustomHandler(Kind::Simple))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425376,"byte_end":425428,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425429,"byte_end":425451,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425452,"byte_end":425459,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425460,"byte_end":425465,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425466,"byte_end":425473,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425474,"byte_end":425477,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Note the following:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425478,"byte_end":425501,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425502,"byte_end":425505,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/   1. `CustomHandler` implements `Clone`. This is required so that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425506,"byte_end":425575,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/      `CustomHandler` implements `Cloneable` automatically. The `Cloneable`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425576,"byte_end":425654,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/      trait serves no other purpose but to ensure that every `Handler` can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425655,"byte_end":425735,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/      cloned, allowing `Route`s to be cloned.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425736,"byte_end":425784,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/   2. `CustomHandler` implements `Into<Vec<Route>>`, allowing an instance to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425785,"byte_end":425864,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/      be used directly as the second parameter to `rocket.mount()`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425865,"byte_end":425935,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/   3. Unlike static-function-based handlers, this custom handler can make use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":425936,"byte_end":426016,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/      of any internal state.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426017,"byte_end":426048,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426049,"byte_end":426052,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Alternatives","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426053,"byte_end":426071,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426072,"byte_end":426075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The previous example could have been implemented using a combination of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426076,"byte_end":426151,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ managed state and a static route, as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426152,"byte_end":426201,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426202,"byte_end":426205,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426206,"byte_end":426217,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426218,"byte_end":426267,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426268,"byte_end":426307,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426308,"byte_end":426313,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Copy, Clone)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426314,"byte_end":426342,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ # enum Kind {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426343,"byte_end":426360,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"/ #     Simple,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426361,"byte_end":426378,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/ #     Intermediate,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426379,"byte_end":426402,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ #     Complex,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426403,"byte_end":426421,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426422,"byte_end":426429,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426430,"byte_end":426435,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426436,"byte_end":426458,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426459,"byte_end":426462,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426463,"byte_end":426478,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"/ fn custom_handler(state: State<Kind>) -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426479,"byte_end":426538,"line_start":102,"line_end":102,"column_start":1,"column_end":60}},{"value":"/     match *state {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426539,"byte_end":426561,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"/         Kind::Simple => \"simple\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426562,"byte_end":426599,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/         Kind::Intermediate => \"intermediate\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426600,"byte_end":426649,"line_start":105,"line_end":105,"column_start":1,"column_end":50}},{"value":"/         Kind::Complex => \"complex\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426650,"byte_end":426689,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426690,"byte_end":426699,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426700,"byte_end":426705,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426706,"byte_end":426709,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426710,"byte_end":426725,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426726,"byte_end":426742,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426743,"byte_end":426767,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"/         .mount(\"/\", routes![custom_handler])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426768,"byte_end":426816,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"/         .manage(Kind::Simple)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426817,"byte_end":426850,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426851,"byte_end":426873,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426874,"byte_end":426881,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426882,"byte_end":426887,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426888,"byte_end":426895,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426896,"byte_end":426899,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Pros:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426900,"byte_end":426909,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426910,"byte_end":426913,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/   * The handler is easier to implement since Rocket's code generation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426914,"byte_end":426987,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/     ensures type-safety at all levels.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":426988,"byte_end":427030,"line_start":123,"line_end":123,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427031,"byte_end":427034,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Cons:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427035,"byte_end":427044,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427045,"byte_end":427048,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/   * Only one `Kind` can be stored in managed state. As such, only one","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427049,"byte_end":427122,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/     variant of the custom handler can be used.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427123,"byte_end":427173,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/   * The user must remember to manually call `rocket.manage(state)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427174,"byte_end":427245,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427246,"byte_end":427249,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Use this alternative when a single configuration is desired and your custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427250,"byte_end":427329,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ handler is private to your application. For all other cases, a custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427330,"byte_end":427403,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ `Handler` implementation is preferred.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427404,"byte_end":427446,"line_start":133,"line_end":133,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428130,"byte_end":428136,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"fn <'r> (&self, request: &'r Request, data: Data) -> Outcome<'r>","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Called by Rocket when a `Request` with its associated `Data` should be\n handled by this handler.","sig":null,"attributes":[{"value":"/ Called by Rocket when a `Request` with its associated `Data` should be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427506,"byte_end":427580,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ handled by this handler.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427585,"byte_end":427613,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427618,"byte_end":427621,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The variant of `Outcome` returned determines what Rocket does next. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427626,"byte_end":427700,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ the return value is a `Success(Response)`, the wrapped `Response` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427705,"byte_end":427777,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ used to respond to the client. If the return value is a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427782,"byte_end":427841,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/ `Failure(Status)`, the error catcher for `Status` is invoked to generate","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427846,"byte_end":427922,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ a response. Otherwise, if the return value is `Forward(Data)`, the next","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427927,"byte_end":428002,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ matching route is attempted. If there are no other matching routes, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428007,"byte_end":428082,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ `404` error catcher is invoked.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428087,"byte_end":428122,"line_start":144,"line_end":144,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1756},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428497,"byte_end":428506,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"Cloneable","qualname":"::handler::Cloneable","value":"Cloneable","parent":null,"children":[{"krate":0,"index":1757}],"decl_id":null,"docs":" Unfortunate but necessary hack to be able to clone a `Box<Handler>`.","sig":null,"attributes":[{"value":"/ Unfortunate but necessary hack to be able to clone a `Box<Handler>`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428201,"byte_end":428273,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428274,"byte_end":428277,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This trait should _never_ (and cannot, due to coherence) be implemented by","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428278,"byte_end":428356,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"/ any type. Instead, implement `Clone`. All types that implement `Clone` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428357,"byte_end":428435,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ `Handler` automatically implement `Cloneable`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428436,"byte_end":428486,"line_start":152,"line_end":152,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428539,"byte_end":428552,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"clone_handler","qualname":"::handler::Cloneable::clone_handler","value":"fn (&self) -> Box<Handler>","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" Clones `self`.\n","sig":null,"attributes":[{"value":"/ Clones `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428513,"byte_end":428531,"line_start":154,"line_end":154,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1768},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429142,"byte_end":429154,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"ErrorHandler","qualname":"::handler::ErrorHandler","value":"for<'r>fn(&'r Request) -> response::Result<'r>","parent":null,"children":[],"decl_id":null,"docs":" The type of an error handler.\n","sig":null,"attributes":[{"value":"/ The type of an error handler.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429099,"byte_end":429132,"line_start":181,"line_end":181,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429805,"byte_end":429809,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"from","qualname":"<Outcome>::from","value":"fn <T> (req: &Request, responder: T) -> Outcome<'r>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Outcome` of response to `req` from `responder`.","sig":null,"attributes":[{"value":"/ Return the `Outcome` of response to `req` from `responder`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429234,"byte_end":429297,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429302,"byte_end":429305,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ If the responder returns `Ok`, an outcome of `Success` is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429310,"byte_end":429371,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ returned with the response. If the responder returns `Err`, an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429376,"byte_end":429442,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/ outcome of `Failure` is returned with the status code.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429447,"byte_end":429505,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429510,"byte_end":429513,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429518,"byte_end":429531,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429536,"byte_end":429539,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429544,"byte_end":429555,"line_start":193,"line_end":193,"column_start":5,"column_end":16}},{"value":"/ use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429560,"byte_end":429592,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/ use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429597,"byte_end":429630,"line_start":195,"line_end":195,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429635,"byte_end":429638,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ fn str_responder(req: &Request, _: Data) -> Outcome<'static> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429643,"byte_end":429709,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/     Outcome::from(req, \"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429714,"byte_end":429757,"line_start":198,"line_end":198,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429762,"byte_end":429767,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429772,"byte_end":429779,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429784,"byte_end":429793,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430676,"byte_end":430683,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"failure","qualname":"<Outcome>::failure","value":"fn (code: Status) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Failure` with the status code `code`. This is\n equivalent to `Outcome::Failure(code)`.","sig":null,"attributes":[{"value":"/ Return an `Outcome` of `Failure` with the status code `code`. This is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430063,"byte_end":430136,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ equivalent to `Outcome::Failure(code)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430141,"byte_end":430184,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430189,"byte_end":430192,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method exists to be used during manual routing where","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430197,"byte_end":430258,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ `rocket::handler::Outcome` is imported instead of `rocket::Outcome`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430263,"byte_end":430335,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430340,"byte_end":430343,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430348,"byte_end":430361,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430366,"byte_end":430369,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430374,"byte_end":430385,"line_start":217,"line_end":217,"column_start":5,"column_end":16}},{"value":"/ use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430390,"byte_end":430422,"line_start":218,"line_end":218,"column_start":5,"column_end":37}},{"value":"/ use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430427,"byte_end":430460,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430465,"byte_end":430494,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430499,"byte_end":430502,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ fn bad_req_route(_: &Request, _: Data) -> Outcome<'static> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430507,"byte_end":430571,"line_start":222,"line_end":222,"column_start":5,"column_end":69}},{"value":"/     Outcome::failure(Status::BadRequest)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430576,"byte_end":430620,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430625,"byte_end":430630,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430635,"byte_end":430642,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430647,"byte_end":430664,"line_start":226,"line_end":226,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431333,"byte_end":431340,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"forward","qualname":"<Outcome>::forward","value":"fn (data: Data) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Forward` with the data `data`. This is\n equivalent to `Outcome::Forward(data)`.","sig":null,"attributes":[{"value":"/ Return an `Outcome` of `Forward` with the data `data`. This is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430771,"byte_end":430837,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/ equivalent to `Outcome::Forward(data)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430842,"byte_end":430885,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430890,"byte_end":430893,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This method exists to be used during manual routing where","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430898,"byte_end":430959,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/ `rocket::handler::Outcome` is imported instead of `rocket::Outcome`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":430964,"byte_end":431036,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431041,"byte_end":431044,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431049,"byte_end":431062,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431067,"byte_end":431070,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431075,"byte_end":431086,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431091,"byte_end":431123,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/ use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431128,"byte_end":431161,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431166,"byte_end":431169,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ fn always_forward(_: &Request, data: Data) -> Outcome<'static> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431174,"byte_end":431242,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/     Outcome::forward(data)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431247,"byte_end":431277,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431282,"byte_end":431287,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431292,"byte_end":431299,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":431304,"byte_end":431321,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1776},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fairing","qualname":"::fairing","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1782},{"krate":0,"index":1805},{"krate":0,"index":1847},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1873}],"decl_id":null,"docs":" Fairings: callbacks at attach, launch, request, and response time.","sig":null,"attributes":[{"value":"! Fairings: callbacks at attach, launch, request, and response time.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431424,"byte_end":431494,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431495,"byte_end":431498,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Fairings allow for structured interposition at various points in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431499,"byte_end":431571,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! application lifetime. Fairings can be seen as a restricted form of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431572,"byte_end":431642,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! \"middleware\". A fairing is an arbitrary structure with methods representing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431643,"byte_end":431722,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! callbacks that Rocket will run at requested points in a program. You can use","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431723,"byte_end":431803,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! fairings to rewrite or record information about requests and responses, or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431804,"byte_end":431882,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! to perform an action once a Rocket application has launched.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431883,"byte_end":431947,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431948,"byte_end":431951,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! To learn more about writing a fairing, see the [`Fairing`] trait","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":431952,"byte_end":432020,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"! documentation. You can also use [`AdHoc`] to create a fairing on-the-fly","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432021,"byte_end":432097,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"! from a closure or function.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432098,"byte_end":432129,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432130,"byte_end":432133,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ## Attaching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432134,"byte_end":432150,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432151,"byte_end":432154,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! You must inform Rocket about fairings that you wish to be active by calling","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432155,"byte_end":432234,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! [`Rocket::attach()`] method on the application's [`Rocket`] instance and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432235,"byte_end":432311,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! passing in the appropriate [`Fairing`]. For instance, to attach fairings","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432312,"byte_end":432388,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! named `req_fairing` and `res_fairing` to a new Rocket instance, you might","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432389,"byte_end":432466,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! write:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432467,"byte_end":432477,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432478,"byte_end":432481,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432482,"byte_end":432493,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"! # use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432494,"byte_end":432527,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"! # let req_fairing = AdHoc::on_request(\"Request\", |_, _| ());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432528,"byte_end":432592,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"! # let res_fairing = AdHoc::on_response(\"Response\", |_, _| ());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432593,"byte_end":432659,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"! let rocket = rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432660,"byte_end":432693,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"!     .attach(req_fairing)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432694,"byte_end":432722,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"!     .attach(res_fairing);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432723,"byte_end":432752,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432753,"byte_end":432760,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432761,"byte_end":432764,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Once a fairing is attached, Rocket will execute it at the appropriate time,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432765,"byte_end":432844,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! which varies depending on the fairing implementation. See the [`Fairing`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432845,"byte_end":432922,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"! trait documentation for more information on the dispatching of fairing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432923,"byte_end":432997,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! methods.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":432998,"byte_end":433010,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433011,"byte_end":433014,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`Fairing`]: ::fairing::Fairing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433015,"byte_end":433050,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433051,"byte_end":433054,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ## Ordering","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433055,"byte_end":433070,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433071,"byte_end":433074,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! `Fairing`s are executed in the order in which they are attached: the first","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433075,"byte_end":433153,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"! attached fairing has its callbacks executed before all others. Because","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433154,"byte_end":433228,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"! fairing callbacks may not be commutative, the order in which fairings are","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433229,"byte_end":433306,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! attached may be significant. Because of this, it is important to communicate","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433307,"byte_end":433387,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"! to the user every consequence of a fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433388,"byte_end":433435,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433436,"byte_end":433439,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! Furthermore, a `Fairing` should take care to act locally so that the actions","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433440,"byte_end":433520,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"! of other `Fairings` are not jeopardized. For instance, unless it is made","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433521,"byte_end":433597,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! abundantly clear, a fairing should not rewrite every request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":433598,"byte_end":433663,"line_start":48,"line_end":48,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454660,"byte_end":454665,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"AdHoc","qualname":"::fairing::ad_hoc::AdHoc","value":"AdHoc {  }","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"decl_id":null,"docs":" A ad-hoc fairing that can be created from a function or closure.","sig":null,"attributes":[{"value":"/ A ad-hoc fairing that can be created from a function or closure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453381,"byte_end":453449,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453450,"byte_end":453453,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This enum can be used to create a fairing from a simple function or closure","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453454,"byte_end":453533,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ without creating a new structure or implementing `Fairing` directly.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453534,"byte_end":453606,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453607,"byte_end":453610,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453611,"byte_end":453622,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453623,"byte_end":453626,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Use the [`on_attach`](#method.on_attach), [`on_launch`](#method.on_launch),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453627,"byte_end":453706,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ [`on_request`](#method.on_request), or [`on_response`](#method.on_response)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453707,"byte_end":453786,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ constructors to create an `AdHoc` structure from a function or closure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453787,"byte_end":453862,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ Then, simply attach the structure to the `Rocket` instance.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453863,"byte_end":453926,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453927,"byte_end":453930,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453931,"byte_end":453944,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453945,"byte_end":453948,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The following snippet creates a `Rocket` instance with two ad-hoc fairings.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":453949,"byte_end":454028,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ The first, a launch fairing named \"Launch Printer\", simply prints a message","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454029,"byte_end":454108,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ indicating that the application is about to the launch. The second named","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454109,"byte_end":454185,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ \"Put Rewriter\", a request fairing, rewrites the method of all requests to be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454186,"byte_end":454266,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ `PUT`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454267,"byte_end":454277,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454278,"byte_end":454281,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454282,"byte_end":454293,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454294,"byte_end":454325,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454326,"byte_end":454355,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454356,"byte_end":454359,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454360,"byte_end":454380,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/     .attach(AdHoc::on_launch(\"Launch Printer\", |_| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454381,"byte_end":454437,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/         println!(\"Rocket is about to launch! Exciting! Here we go...\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454438,"byte_end":454513,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/     }))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454514,"byte_end":454525,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/     .attach(AdHoc::on_request(\"Put Rewriter\", |req, _| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454526,"byte_end":454586,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/         req.set_method(Method::Put);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454587,"byte_end":454627,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/     }));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454628,"byte_end":454640,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":454641,"byte_end":454648,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455752,"byte_end":455761,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"on_attach","qualname":"<AdHoc>::on_attach","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` attach fairing named `name`. The function `f` will\n be called by Rocket when this fairing is attached.","sig":null,"attributes":[{"value":"/ Constructs an `AdHoc` attach fairing named `name`. The function `f` will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455392,"byte_end":455468,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ be called by Rocket when this fairing is attached.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455473,"byte_end":455527,"line_start":57,"line_end":57,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455532,"byte_end":455535,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455540,"byte_end":455553,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455558,"byte_end":455561,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455566,"byte_end":455577,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455582,"byte_end":455613,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455618,"byte_end":455621,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ // The no-op attach fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455626,"byte_end":455658,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ let fairing = AdHoc::on_attach(\"No-Op\", |rocket| Ok(rocket));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455663,"byte_end":455728,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455733,"byte_end":455740,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456412,"byte_end":456421,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"on_launch","qualname":"<AdHoc>::on_launch","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` launch fairing named `name`. The function `f` will\n be called by Rocket just prior to launching.","sig":null,"attributes":[{"value":"/ Constructs an `AdHoc` launch fairing named `name`. The function `f` will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455971,"byte_end":456047,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ be called by Rocket just prior to launching.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456052,"byte_end":456100,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456105,"byte_end":456108,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456113,"byte_end":456126,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456131,"byte_end":456134,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456139,"byte_end":456150,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456155,"byte_end":456186,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456191,"byte_end":456194,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // A fairing that prints a message just before launching.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456199,"byte_end":456260,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/ let fairing = AdHoc::on_launch(\"Launch Count\", |rocket| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456265,"byte_end":456326,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/     println!(\"Launching in T-3..2..1..\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456331,"byte_end":456376,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456381,"byte_end":456388,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456393,"byte_end":456400,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457069,"byte_end":457079,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"on_request","qualname":"<AdHoc>::on_request","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` request fairing named `name`. The function `f`\n will be called by Rocket when a new request is received.","sig":null,"attributes":[{"value":"/ Constructs an `AdHoc` request fairing named `name`. The function `f`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456606,"byte_end":456678,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ will be called by Rocket when a new request is received.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456683,"byte_end":456743,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456748,"byte_end":456751,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456756,"byte_end":456769,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456774,"byte_end":456777,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456782,"byte_end":456793,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456798,"byte_end":456829,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456834,"byte_end":456837,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // The no-op request fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456842,"byte_end":456875,"line_start":100,"line_end":100,"column_start":5,"column_end":38}},{"value":"/ let fairing = AdHoc::on_request(\"Dummy\", |req, data| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456880,"byte_end":456938,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     // do something with the request and data...","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":456943,"byte_end":456995,"line_start":102,"line_end":102,"column_start":5,"column_end":57}},{"value":"/ #   let (_, _) = (req, data);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457000,"byte_end":457033,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457038,"byte_end":457045,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457050,"byte_end":457057,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457745,"byte_end":457756,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"on_response","qualname":"<AdHoc>::on_response","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` response fairing named `name`. The function `f`\n will be called by Rocket when a response is ready to be sent.","sig":null,"attributes":[{"value":"/ Constructs an `AdHoc` response fairing named `name`. The function `f`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457262,"byte_end":457335,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ will be called by Rocket when a response is ready to be sent.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457340,"byte_end":457405,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457410,"byte_end":457413,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457418,"byte_end":457431,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457436,"byte_end":457439,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457444,"byte_end":457455,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457460,"byte_end":457491,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457496,"byte_end":457499,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // The no-op response fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457504,"byte_end":457538,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ let fairing = AdHoc::on_response(\"Dummy\", |req, resp| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457543,"byte_end":457602,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/     // do something with the request and pending response...","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457607,"byte_end":457671,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ #   let (_, _) = (req, resp);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457676,"byte_end":457709,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457714,"byte_end":457721,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457726,"byte_end":457733,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1849},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460037,"byte_end":460041,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Info","qualname":"::fairing::info_kind::Info","value":"Info { name, kind }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":" Information about a [`Fairing`](::fairing::Fairing).","sig":null,"attributes":[{"value":"/ Information about a [`Fairing`](::fairing::Fairing).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459366,"byte_end":459422,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459423,"byte_end":459426,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The `name` field is an arbitrary name for a fairing. The `kind` field is a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459427,"byte_end":459505,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ is an `or`d set of [`Kind`] structures. Rocket uses the values set in `Kind`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459506,"byte_end":459586,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ to determine which callbacks from a given `Fairing` implementation to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459587,"byte_end":459660,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ actually call.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459661,"byte_end":459679,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459680,"byte_end":459683,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459684,"byte_end":459697,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459698,"byte_end":459701,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A simple `Info` structure that can be used for a `Fairing` that implements","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459702,"byte_end":459780,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ all four callbacks:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459781,"byte_end":459804,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459805,"byte_end":459808,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459809,"byte_end":459816,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rocket::fairing::{Info, Kind};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459817,"byte_end":459855,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459856,"byte_end":459859,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # let _unused_info =","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459860,"byte_end":459884,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459885,"byte_end":459895,"line_start":19,"line_end":19,"column_start":1,"column_end":11}},{"value":"/     name: \"Example Fairing\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459896,"byte_end":459928,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     kind: Kind::Attach | Kind::Launch | Kind::Request | Kind::Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":459929,"byte_end":460003,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460004,"byte_end":460009,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # ;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460010,"byte_end":460017,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460018,"byte_end":460025,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460085,"byte_end":460089,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"name","qualname":"::fairing::info_kind::Info::name","value":"&'static str","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The name of the fairing.\n","sig":null,"attributes":[{"value":"/ The name of the fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460048,"byte_end":460076,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460185,"byte_end":460189,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"kind","qualname":"::fairing::info_kind::Info::kind","value":"fairing::info_kind::Kind","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" A set representing the callbacks the fairing wishes to receive.\n","sig":null,"attributes":[{"value":"/ A set representing the callbacks the fairing wishes to receive.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460109,"byte_end":460176,"line_start":28,"line_end":28,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3342},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460801,"byte_end":460805,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Kind","qualname":"::fairing::info_kind::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bitset representing the kinds of callbacks a\n [`Fairing`](::fairing::Fairing) wishes to receive.","sig":null,"attributes":[{"value":"/ A bitset representing the kinds of callbacks a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460199,"byte_end":460249,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/ [`Fairing`](::fairing::Fairing) wishes to receive.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460250,"byte_end":460304,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460305,"byte_end":460308,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A fairing can request any combination of any of the following kinds of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460309,"byte_end":460383,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ callbacks:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460384,"byte_end":460398,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460399,"byte_end":460402,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/   * Attach","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460403,"byte_end":460417,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/   * Launch","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460418,"byte_end":460432,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/   * Request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460433,"byte_end":460448,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/   * Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460449,"byte_end":460465,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460466,"byte_end":460469,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Two `Kind` structures can be `or`d together to represent a combination. For","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460470,"byte_end":460549,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ instance, to represent a fairing that is both a launch and request fairing,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460550,"byte_end":460629,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ use `Kind::Launch | Kind::Request`. Similarly, to represent a fairing that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460630,"byte_end":460708,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ is only an attach fairing, use `Kind::Attach`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460709,"byte_end":460759,"line_start":46,"line_end":46,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1853},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460943,"byte_end":460949,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"Attach","qualname":"::fairing::info_kind::Kind::Attach","value":"Kind","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for an 'attach' callback.\n","sig":null,"attributes":[{"value":"/ `Kind` flag representing a request for an 'attach' callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460864,"byte_end":460928,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":1854},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461054,"byte_end":461060,"line_start":55,"line_end":55,"column_start":15,"column_end":21},"name":"Launch","qualname":"::fairing::info_kind::Kind::Launch","value":"Kind","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'launch' callback.\n","sig":null,"attributes":[{"value":"/ `Kind` flag representing a request for a 'launch' callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460976,"byte_end":461039,"line_start":54,"line_end":54,"column_start":5,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":1855},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461166,"byte_end":461173,"line_start":57,"line_end":57,"column_start":15,"column_end":22},"name":"Request","qualname":"::fairing::info_kind::Kind::Request","value":"Kind","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'request' callback.\n","sig":null,"attributes":[{"value":"/ `Kind` flag representing a request for a 'request' callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461087,"byte_end":461151,"line_start":56,"line_end":56,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":1856},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461280,"byte_end":461288,"line_start":59,"line_end":59,"column_start":15,"column_end":23},"name":"Response","qualname":"::fairing::info_kind::Kind::Response","value":"Kind","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'response' callback.\n","sig":null,"attributes":[{"value":"/ `Kind` flag representing a request for a 'response' callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461200,"byte_end":461265,"line_start":58,"line_end":58,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462038,"byte_end":462040,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"is","qualname":"<Kind>::is","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a superset of `other`. In other words,\n returns `true` if all of the kinds in `other` are also in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a superset of `other`. In other words,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461316,"byte_end":461386,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ returns `true` if all of the kinds in `other` are also in `self`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461391,"byte_end":461460,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461465,"byte_end":461468,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461473,"byte_end":461486,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461491,"byte_end":461494,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461499,"byte_end":461510,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::Kind;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461515,"byte_end":461545,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461550,"byte_end":461553,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let launch_and_req = Kind::Launch | Kind::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461558,"byte_end":461612,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/ assert!(launch_and_req.is(Kind::Launch | Kind::Request));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461617,"byte_end":461678,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461683,"byte_end":461686,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(launch_and_req.is(Kind::Launch));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461691,"byte_end":461736,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/ assert!(launch_and_req.is(Kind::Request));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461741,"byte_end":461787,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461792,"byte_end":461795,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert!(!launch_and_req.is(Kind::Response));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461800,"byte_end":461848,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/ assert!(!launch_and_req.is(Kind::Launch | Kind::Response));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461853,"byte_end":461916,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ assert!(!launch_and_req.is(Kind::Launch | Kind::Request | Kind::Response));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":461921,"byte_end":462000,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462005,"byte_end":462012,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462017,"byte_end":462026,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462695,"byte_end":462705,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"is_exactly","qualname":"<Kind>::is_exactly","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is exactly `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is exactly `other`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462119,"byte_end":462167,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462172,"byte_end":462175,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462180,"byte_end":462193,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462198,"byte_end":462201,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462206,"byte_end":462217,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::Kind;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462222,"byte_end":462252,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462257,"byte_end":462260,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let launch_and_req = Kind::Launch | Kind::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462265,"byte_end":462319,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ assert!(launch_and_req.is_exactly(Kind::Launch | Kind::Request));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462324,"byte_end":462393,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462398,"byte_end":462401,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert!(!launch_and_req.is_exactly(Kind::Launch));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462406,"byte_end":462460,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ assert!(!launch_and_req.is_exactly(Kind::Request));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462465,"byte_end":462520,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/ assert!(!launch_and_req.is_exactly(Kind::Response));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462525,"byte_end":462581,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/ assert!(!launch_and_req.is_exactly(Kind::Launch | Kind::Response));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462586,"byte_end":462657,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462662,"byte_end":462669,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462674,"byte_end":462683,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1867},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446092,"byte_end":446099,"line_start":325,"line_end":325,"column_start":11,"column_end":18},"name":"Fairing","qualname":"::fairing::Fairing","value":"Fairing: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"decl_id":null,"docs":" Trait implemented by fairings: Rocket's structured middleware.","sig":null,"attributes":[{"value":"/ Trait implemented by fairings: Rocket's structured middleware.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434702,"byte_end":434768,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434769,"byte_end":434772,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Considerations","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434773,"byte_end":434793,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434794,"byte_end":434797,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Fairings are a large hammer that can easily be abused and misused. If you","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434798,"byte_end":434875,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ are considering writing a `Fairing` implementation, first consider if it is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434876,"byte_end":434955,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ appropriate to do so. While middleware is often the best solution to some","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":434956,"byte_end":435033,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ problems in other frameworks, it is often a suboptimal solution in Rocket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435034,"byte_end":435112,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ This is because Rocket provides richer mechanisms such as [request guards]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435113,"byte_end":435191,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ and [data guards] that can be used to accomplish the same objective in a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435192,"byte_end":435268,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ cleaner, more composable, and more robust manner.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435269,"byte_end":435322,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435323,"byte_end":435326,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ As a general rule of thumb, only _globally applicable actions_ should be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435327,"byte_end":435403,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ implemented via fairings. For instance, you should _not_ use a fairing to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435404,"byte_end":435481,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ implement authentication or authorization (preferring to use a [request","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435482,"byte_end":435557,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ guard] instead) _unless_ the authentication or authorization applies to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435558,"byte_end":435637,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ entire application. On the other hand, you _should_ use a fairing to record","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435638,"byte_end":435717,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ timing and/or usage statistics or to implement global security policies.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435718,"byte_end":435794,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435795,"byte_end":435798,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [request guard]: ::request::FromRequest","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435799,"byte_end":435842,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [request guards]: ::request::FromRequest","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435843,"byte_end":435887,"line_start":92,"line_end":92,"column_start":1,"column_end":45}},{"value":"/ [data guards]: ::data::FromData","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435888,"byte_end":435923,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435924,"byte_end":435927,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Fairing Callbacks","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435928,"byte_end":435952,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435953,"byte_end":435956,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ There are four kinds of fairing callbacks: attach, launch, request, and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":435957,"byte_end":436032,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ response. A fairing can request any combination of these callbacks through","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436033,"byte_end":436111,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ the `kind` field of the `Info` structure returned from the `info` method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436112,"byte_end":436189,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ Rocket will only invoke the callbacks set in the `kind` field.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436190,"byte_end":436256,"line_start":100,"line_end":100,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436257,"byte_end":436260,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The four callback kinds are as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436261,"byte_end":436304,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436305,"byte_end":436308,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/   * **Attach (`on_attach`)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436309,"byte_end":436341,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436342,"byte_end":436345,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     An attach callback, represented by the [`Fairing::on_attach()`] method,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436346,"byte_end":436425,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/     is called when a fairing is first attached via [`Rocket::attach()`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436426,"byte_end":436501,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/     method. The state of the `Rocket` instance is, at this point, not","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436502,"byte_end":436575,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/     finalized, as the user may still add additional information to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436576,"byte_end":436650,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/     `Rocket` instance. As a result, it is unwise to depend on the state of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436651,"byte_end":436729,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/     the `Rocket` instance.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436730,"byte_end":436760,"line_start":111,"line_end":111,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436761,"byte_end":436764,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     An attach callback can arbitrarily modify the `Rocket` instance being","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436765,"byte_end":436842,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/     constructed. It returns `Ok` if it would like launching to proceed","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436843,"byte_end":436917,"line_start":114,"line_end":114,"column_start":1,"column_end":75}},{"value":"/     nominally and `Err` otherwise. If an attach callback returns `Err`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436918,"byte_end":436993,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/     launch will be aborted. All attach callbacks are executed on `launch`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":436994,"byte_end":437072,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/     even if one or more signal a failure.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437073,"byte_end":437118,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437119,"byte_end":437122,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/   * **Launch (`on_launch`)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437123,"byte_end":437155,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437156,"byte_end":437159,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     A launch callback, represented by the [`Fairing::on_launch()`] method,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437160,"byte_end":437238,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/     is called immediately before the Rocket application has launched. At","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437239,"byte_end":437315,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/     this point, Rocket has opened a socket for listening but has not yet","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437316,"byte_end":437392,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/     begun accepting connections. A launch callback can inspect the `Rocket`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437393,"byte_end":437472,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/     instance being launched.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437473,"byte_end":437505,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437506,"byte_end":437509,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/   * **Request (`on_request`)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437510,"byte_end":437544,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437545,"byte_end":437548,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/     A request callback, represented by the [`Fairing::on_request()`] method,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437549,"byte_end":437629,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/     is called just after a request is received, immediately after","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437630,"byte_end":437699,"line_start":130,"line_end":130,"column_start":1,"column_end":70}},{"value":"/     pre-processing the request with method changes due to `_method` form","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437700,"byte_end":437776,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/     fields. At this point, Rocket has parsed the incoming HTTP request into","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437777,"byte_end":437856,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/     [`Request`] and [`Data`] structures but has not routed the request. A","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437857,"byte_end":437934,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/     request callback can modify the request at will and [`Data::peek()`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":437935,"byte_end":438011,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/     into the incoming data. It may not, however, abort or respond directly","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438012,"byte_end":438090,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/     to the request; these issues are better handled via [request guards] or","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438091,"byte_end":438170,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/     via response callbacks. Any modifications to a request are persisted and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438171,"byte_end":438251,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/     can potentially alter how a request is routed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438252,"byte_end":438306,"line_start":138,"line_end":138,"column_start":1,"column_end":55}},{"value":"/=","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438307,"byte_end":438311,"line_start":139,"line_end":139,"column_start":1,"column_end":5}},{"value":"/   * **Response (`on_response`)**","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438312,"byte_end":438348,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438349,"byte_end":438352,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/     A response callback, represented by the [`Fairing::on_response()`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438353,"byte_end":438427,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/     method, is called when a response is ready to be sent to the client. At","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438428,"byte_end":438507,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/     this point, Rocket has completed all routing, including to error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438508,"byte_end":438580,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/     catchers, and has generated the would-be final response. A response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438581,"byte_end":438656,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/     callback can modify the response at will. For example, a response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438657,"byte_end":438730,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/     callback can provide a default response when the user fails to handle","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438731,"byte_end":438808,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/     the request by checking for 404 responses. Note that a given `Request`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438809,"byte_end":438887,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/     may have changed between `on_request` and `on_response` invocations.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438888,"byte_end":438964,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/     Apart from any change made by other fairings, Rocket sets the method for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":438965,"byte_end":439045,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/     `HEAD` requests to `GET` if there is no matching `HEAD` handler for that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439046,"byte_end":439126,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/     request. Additionally, Rocket will automatically strip the body for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439127,"byte_end":439202,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/     `HEAD` requests _after_ response fairings have run.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439203,"byte_end":439262,"line_start":153,"line_end":153,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439263,"byte_end":439266,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439267,"byte_end":439285,"line_start":155,"line_end":155,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439286,"byte_end":439289,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ A `Fairing` implementation has one required method: [`info`]. A `Fairing`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439290,"byte_end":439367,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ can also implement any of the available callbacks: `on_attach`, `on_launch`,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439368,"byte_end":439448,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ `on_request`, and `on_response`. A `Fairing` _must_ set the appropriate","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439449,"byte_end":439524,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"/ callback kind in the `kind` field of the returned `Info` structure from","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439525,"byte_end":439600,"line_start":160,"line_end":160,"column_start":1,"column_end":76}},{"value":"/ [`info`] for a callback to actually be called by Rocket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439601,"byte_end":439661,"line_start":161,"line_end":161,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439662,"byte_end":439665,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ## Fairing `Info`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439666,"byte_end":439687,"line_start":163,"line_end":163,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439688,"byte_end":439691,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Every `Fairing` must implement the [`info`] method, which returns an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439692,"byte_end":439764,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/ [`Info`] structure. This structure is used by Rocket to:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439765,"byte_end":439825,"line_start":166,"line_end":166,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439826,"byte_end":439829,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/   1. Assign a name to the `Fairing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439830,"byte_end":439870,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439871,"byte_end":439874,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/      This is the `name` field, which can be any arbitrary string. Name your","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439875,"byte_end":439954,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/      fairing something illustrative. The name will be logged during the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":439955,"byte_end":440030,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/      application's launch procedures.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440031,"byte_end":440072,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440073,"byte_end":440076,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/   2. Determine which callbacks to actually issue on the `Fairing`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440077,"byte_end":440147,"line_start":174,"line_end":174,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440148,"byte_end":440151,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/      This is the `kind` field of type [`Kind`]. This field is a bitset that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440152,"byte_end":440231,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/      represents the kinds of callbacks the fairing wishes to receive. Rocket","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440232,"byte_end":440312,"line_start":177,"line_end":177,"column_start":1,"column_end":81}},{"value":"/      will only invoke the callbacks that are flagged in this set. `Kind`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440313,"byte_end":440389,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/      structures can be `or`d together to represent any combination of kinds","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440390,"byte_end":440469,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"/      of callbacks. For instance, to request launch and response callbacks,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440470,"byte_end":440548,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/      return a `kind` field with the value `Kind::Launch | Kind::Response`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440549,"byte_end":440627,"line_start":181,"line_end":181,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440628,"byte_end":440631,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ [`info`]: Fairing::info()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440632,"byte_end":440661,"line_start":183,"line_end":183,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440662,"byte_end":440665,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ## Restrictions","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440666,"byte_end":440685,"line_start":185,"line_end":185,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440686,"byte_end":440689,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ A `Fairing` must be [`Send`] + [`Sync`] + `'static`. This means that the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440690,"byte_end":440766,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ fairing must be sendable across thread boundaries (`Send`), thread-safe","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440767,"byte_end":440842,"line_start":188,"line_end":188,"column_start":1,"column_end":76}},{"value":"/ (`Sync`), and have only `'static` references, if any (`'static`). Note that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440843,"byte_end":440922,"line_start":189,"line_end":189,"column_start":1,"column_end":80}},{"value":"/ these bounds _do not_ prohibit a `Fairing` from holding state: the state","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":440923,"byte_end":440999,"line_start":190,"line_end":190,"column_start":1,"column_end":77}},{"value":"/ need simply be thread-safe and statically available or heap allocated.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441000,"byte_end":441074,"line_start":191,"line_end":191,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441075,"byte_end":441078,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441079,"byte_end":441093,"line_start":193,"line_end":193,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441094,"byte_end":441097,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Imagine that we want to record the number of `GET` and `POST` requests that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441098,"byte_end":441177,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ our application has received. While we could do this with [request guards]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441178,"byte_end":441256,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ and [managed state](::request::State), it would require us to annotate every","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441257,"byte_end":441337,"line_start":197,"line_end":197,"column_start":1,"column_end":81}},{"value":"/ `GET` and `POST` request with custom types, polluting handler signatures.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441338,"byte_end":441415,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ Instead, we can create a simple fairing that acts globally.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441416,"byte_end":441479,"line_start":199,"line_end":199,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441480,"byte_end":441483,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The `Counter` fairing below records the number of all `GET` and `POST`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441484,"byte_end":441558,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ requests received. It makes these counts available at a special `'/counts'`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441559,"byte_end":441638,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/ path.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441639,"byte_end":441648,"line_start":203,"line_end":203,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441649,"byte_end":441652,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441653,"byte_end":441664,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441665,"byte_end":441689,"line_start":206,"line_end":206,"column_start":1,"column_end":25}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441690,"byte_end":441741,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441742,"byte_end":441745,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ use rocket::{Request, Data, Response};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441746,"byte_end":441788,"line_start":209,"line_end":209,"column_start":1,"column_end":43}},{"value":"/ use rocket::fairing::{Fairing, Info, Kind};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441789,"byte_end":441836,"line_start":210,"line_end":210,"column_start":1,"column_end":48}},{"value":"/ use rocket::http::{Method, ContentType, Status};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441837,"byte_end":441889,"line_start":211,"line_end":211,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441890,"byte_end":441893,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441894,"byte_end":441916,"line_start":213,"line_end":213,"column_start":1,"column_end":23}},{"value":"/ struct Counter {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441917,"byte_end":441937,"line_start":214,"line_end":214,"column_start":1,"column_end":21}},{"value":"/     get: AtomicUsize,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441938,"byte_end":441963,"line_start":215,"line_end":215,"column_start":1,"column_end":26}},{"value":"/     post: AtomicUsize,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441964,"byte_end":441990,"line_start":216,"line_end":216,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441991,"byte_end":441996,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":441997,"byte_end":442000,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Fairing for Counter {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442001,"byte_end":442031,"line_start":219,"line_end":219,"column_start":1,"column_end":31}},{"value":"/     fn info(&self) -> Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442032,"byte_end":442064,"line_start":220,"line_end":220,"column_start":1,"column_end":33}},{"value":"/         Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442065,"byte_end":442083,"line_start":221,"line_end":221,"column_start":1,"column_end":19}},{"value":"/             name: \"GET/POST Counter\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442084,"byte_end":442125,"line_start":222,"line_end":222,"column_start":1,"column_end":42}},{"value":"/             kind: Kind::Request | Kind::Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442126,"byte_end":442178,"line_start":223,"line_end":223,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442179,"byte_end":442192,"line_start":224,"line_end":224,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442193,"byte_end":442202,"line_start":225,"line_end":225,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442203,"byte_end":442206,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/     fn on_request(&self, request: &mut Request, _: &Data) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442207,"byte_end":442270,"line_start":227,"line_end":227,"column_start":1,"column_end":64}},{"value":"/         if request.method() == Method::Get {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442271,"byte_end":442319,"line_start":228,"line_end":228,"column_start":1,"column_end":49}},{"value":"/             self.get.fetch_add(1, Ordering::Relaxed);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442320,"byte_end":442377,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/         } else if request.method() == Method::Post {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442378,"byte_end":442434,"line_start":230,"line_end":230,"column_start":1,"column_end":57}},{"value":"/             self.post.fetch_add(1, Ordering::Relaxed);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442435,"byte_end":442493,"line_start":231,"line_end":231,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442494,"byte_end":442507,"line_start":232,"line_end":232,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442508,"byte_end":442517,"line_start":233,"line_end":233,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442518,"byte_end":442521,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     fn on_response(&self, request: &Request, response: &mut Response) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442522,"byte_end":442597,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/         // Don't change a successful user's response, ever.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442598,"byte_end":442661,"line_start":236,"line_end":236,"column_start":1,"column_end":64}},{"value":"/         if response.status() != Status::NotFound {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442662,"byte_end":442716,"line_start":237,"line_end":237,"column_start":1,"column_end":55}},{"value":"/             return","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442717,"byte_end":442739,"line_start":238,"line_end":238,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442740,"byte_end":442753,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442754,"byte_end":442757,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/         if request.method() == Method::Get && request.uri().path() == \"/counts\" {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442758,"byte_end":442843,"line_start":241,"line_end":241,"column_start":1,"column_end":86}},{"value":"/             let get_count = self.get.load(Ordering::Relaxed);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442844,"byte_end":442909,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/             let post_count = self.post.load(Ordering::Relaxed);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442910,"byte_end":442977,"line_start":243,"line_end":243,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442978,"byte_end":442981,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/             let body = format!(\"Get: {}\\nPost: {}\", get_count, post_count);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":442982,"byte_end":443061,"line_start":245,"line_end":245,"column_start":1,"column_end":80}},{"value":"/             response.set_status(Status::Ok);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443062,"byte_end":443110,"line_start":246,"line_end":246,"column_start":1,"column_end":49}},{"value":"/             response.set_header(ContentType::Plain);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443111,"byte_end":443167,"line_start":247,"line_end":247,"column_start":1,"column_end":57}},{"value":"/             response.set_sized_body(Cursor::new(body));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443168,"byte_end":443227,"line_start":248,"line_end":248,"column_start":1,"column_end":60}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443228,"byte_end":443241,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443242,"byte_end":443251,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443252,"byte_end":443257,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443258,"byte_end":443265,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443266,"byte_end":443269,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ## Request-Local State","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443270,"byte_end":443296,"line_start":254,"line_end":254,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443297,"byte_end":443300,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Fairings can use [request-local state] to persist or carry data between","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443301,"byte_end":443376,"line_start":256,"line_end":256,"column_start":1,"column_end":76}},{"value":"/ requests and responses, or to pass data to a request guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443377,"byte_end":443440,"line_start":257,"line_end":257,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443441,"byte_end":443444,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ As an example, the following fairing uses request-local state to time","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443445,"byte_end":443518,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ requests, setting an `X-Response-Time` header on all responses with the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443519,"byte_end":443594,"line_start":260,"line_end":260,"column_start":1,"column_end":76}},{"value":"/ elapsed time. It also exposes the start time of a request via a `StartTime`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443595,"byte_end":443674,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/ request guard.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443675,"byte_end":443693,"line_start":262,"line_end":262,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443694,"byte_end":443697,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443698,"byte_end":443709,"line_start":264,"line_end":264,"column_start":1,"column_end":12}},{"value":"/ # use std::time::{Duration, SystemTime};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443710,"byte_end":443754,"line_start":265,"line_end":265,"column_start":1,"column_end":45}},{"value":"/ # use rocket::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443755,"byte_end":443781,"line_start":266,"line_end":266,"column_start":1,"column_end":27}},{"value":"/ # use rocket::{Request, Data, Response};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443782,"byte_end":443826,"line_start":267,"line_end":267,"column_start":1,"column_end":45}},{"value":"/ # use rocket::fairing::{Fairing, Info, Kind};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443827,"byte_end":443876,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ # use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443877,"byte_end":443908,"line_start":269,"line_end":269,"column_start":1,"column_end":32}},{"value":"/ # use rocket::request::{self, FromRequest};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443909,"byte_end":443956,"line_start":270,"line_end":270,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443957,"byte_end":443962,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"/ /// Fairing for timing requests.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":443963,"byte_end":443999,"line_start":272,"line_end":272,"column_start":1,"column_end":37}},{"value":"/ pub struct RequestTimer;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444000,"byte_end":444028,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444029,"byte_end":444032,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ /// Value stored in request-local state.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444033,"byte_end":444077,"line_start":275,"line_end":275,"column_start":1,"column_end":45}},{"value":"/ #[derive(Copy, Clone)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444078,"byte_end":444104,"line_start":276,"line_end":276,"column_start":1,"column_end":27}},{"value":"/ struct TimerStart(Option<SystemTime>);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444105,"byte_end":444147,"line_start":277,"line_end":277,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444148,"byte_end":444151,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ impl Fairing for RequestTimer {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444152,"byte_end":444187,"line_start":279,"line_end":279,"column_start":1,"column_end":36}},{"value":"/     fn info(&self) -> Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444188,"byte_end":444220,"line_start":280,"line_end":280,"column_start":1,"column_end":33}},{"value":"/         Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444221,"byte_end":444239,"line_start":281,"line_end":281,"column_start":1,"column_end":19}},{"value":"/             name: \"Request Timer\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444240,"byte_end":444278,"line_start":282,"line_end":282,"column_start":1,"column_end":39}},{"value":"/             kind: Kind::Request | Kind::Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444279,"byte_end":444331,"line_start":283,"line_end":283,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444332,"byte_end":444345,"line_start":284,"line_end":284,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444346,"byte_end":444355,"line_start":285,"line_end":285,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444356,"byte_end":444359,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/     /// Stores the start time of the request in request-local state.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444360,"byte_end":444432,"line_start":287,"line_end":287,"column_start":1,"column_end":73}},{"value":"/     fn on_request(&self, request: &mut Request, _: &Data) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444433,"byte_end":444496,"line_start":288,"line_end":288,"column_start":1,"column_end":64}},{"value":"/         // Store a `TimerStart` instead of directly storing a `SystemTime`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444497,"byte_end":444575,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/         // to ensure that this usage doesn't conflict with anything else","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444576,"byte_end":444652,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/         // that might store a `SystemTime` in request-local cache.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444653,"byte_end":444723,"line_start":291,"line_end":291,"column_start":1,"column_end":71}},{"value":"/         request.local_cache(|| TimerStart(Some(SystemTime::now())));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444724,"byte_end":444796,"line_start":292,"line_end":292,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444797,"byte_end":444806,"line_start":293,"line_end":293,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444807,"byte_end":444810,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/     /// Adds a header to the response indicating how long the server took to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444811,"byte_end":444891,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/     /// process the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444892,"byte_end":444924,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/     fn on_response(&self, request: &Request, response: &mut Response) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":444925,"byte_end":445000,"line_start":297,"line_end":297,"column_start":1,"column_end":76}},{"value":"/         let start_time = request.local_cache(|| TimerStart(None));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445001,"byte_end":445071,"line_start":298,"line_end":298,"column_start":1,"column_end":71}},{"value":"/         if let Some(Ok(duration)) = start_time.0.map(|st| st.elapsed()) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445072,"byte_end":445149,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/             let ms = duration.as_secs() * 1000 + duration.subsec_millis() as u64;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445150,"byte_end":445235,"line_start":300,"line_end":300,"column_start":1,"column_end":86}},{"value":"/             response.set_raw_header(\"X-Response-Time\", format!(\"{} ms\", ms));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445236,"byte_end":445317,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445318,"byte_end":445331,"line_start":302,"line_end":302,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445332,"byte_end":445341,"line_start":303,"line_end":303,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445342,"byte_end":445347,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445348,"byte_end":445351,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ /// Request guard used to retrieve the start time of a request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445352,"byte_end":445419,"line_start":306,"line_end":306,"column_start":1,"column_end":68}},{"value":"/ #[derive(Copy, Clone)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445420,"byte_end":445446,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/ pub struct StartTime(pub SystemTime);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445447,"byte_end":445488,"line_start":308,"line_end":308,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445489,"byte_end":445492,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ // Allows a route to access the time a request was initiated.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445493,"byte_end":445558,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"/ impl<'a, 'r> FromRequest<'a, 'r> for StartTime {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445559,"byte_end":445611,"line_start":311,"line_end":311,"column_start":1,"column_end":53}},{"value":"/     type Error = ();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445612,"byte_end":445636,"line_start":312,"line_end":312,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445637,"byte_end":445640,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/     fn from_request(request: &'a Request<'r>) -> request::Outcome<StartTime, ()> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445641,"byte_end":445727,"line_start":314,"line_end":314,"column_start":1,"column_end":87}},{"value":"/         match *request.local_cache(|| TimerStart(None)) {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445728,"byte_end":445789,"line_start":315,"line_end":315,"column_start":1,"column_end":62}},{"value":"/             TimerStart(Some(time)) => Outcome::Success(StartTime(time)),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445790,"byte_end":445866,"line_start":316,"line_end":316,"column_start":1,"column_end":77}},{"value":"/             TimerStart(None) => Outcome::Failure((Status::InternalServerError, ())),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445867,"byte_end":445955,"line_start":317,"line_end":317,"column_start":1,"column_end":89}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445956,"byte_end":445969,"line_start":318,"line_end":318,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445970,"byte_end":445979,"line_start":319,"line_end":319,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445980,"byte_end":445985,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445986,"byte_end":445993,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445994,"byte_end":445997,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ [request-local state]: https://rocket.rs/v0.4/guide/state/#request-local-state","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":445998,"byte_end":446080,"line_start":323,"line_end":323,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447418,"byte_end":447422,"line_start":359,"line_end":359,"column_start":8,"column_end":12},"name":"info","qualname":"::fairing::Fairing::info","value":"fn (&self) -> Info","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" Returns an [`Info`] structure containing the `name` and [`Kind`] of this\n fairing. The `name` can be any arbitrary string. `Kind` must be an `or`d\n set of `Kind` variants.","sig":null,"attributes":[{"value":"/ Returns an [`Info`] structure containing the `name` and [`Kind`] of this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446129,"byte_end":446205,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ fairing. The `name` can be any arbitrary string. `Kind` must be an `or`d","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446210,"byte_end":446286,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ set of `Kind` variants.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446291,"byte_end":446318,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446323,"byte_end":446326,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This is the only required method of a `Fairing`. All other methods have","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446331,"byte_end":446406,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ no-op default implementations.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446411,"byte_end":446445,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446450,"byte_end":446453,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Rocket will only dispatch callbacks to this fairing for the kinds in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446458,"byte_end":446534,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ `kind` field of the returned `Info` structure. For instance, if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446539,"byte_end":446606,"line_start":334,"line_end":334,"column_start":5,"column_end":72}},{"value":"/ `Kind::Launch | Kind::Request` is used, then Rocket will only call the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446611,"byte_end":446685,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ `on_launch` and `on_request` methods of the fairing. Similarly, if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446690,"byte_end":446760,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ `Kind::Response` is used, Rocket will only call the `on_response` method","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446765,"byte_end":446841,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/ of this fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446846,"byte_end":446866,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446871,"byte_end":446874,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446879,"byte_end":446892,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446897,"byte_end":446900,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ An `info` implementation for `MyFairing`: a fairing named \"My Custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446905,"byte_end":446977,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ Fairing\" that is both a launch and response fairing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446982,"byte_end":447038,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447043,"byte_end":447046,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447051,"byte_end":447062,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ use rocket::fairing::{Fairing, Info, Kind};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447067,"byte_end":447114,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447119,"byte_end":447122,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ struct MyFairing;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447127,"byte_end":447148,"line_start":348,"line_end":348,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447153,"byte_end":447156,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ impl Fairing for MyFairing {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447161,"byte_end":447193,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/     fn info(&self) -> Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447198,"byte_end":447230,"line_start":351,"line_end":351,"column_start":5,"column_end":37}},{"value":"/         Info {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447235,"byte_end":447253,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/             name: \"My Custom Fairing\",","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447258,"byte_end":447300,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/             kind: Kind::Launch | Kind::Response","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447305,"byte_end":447356,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447361,"byte_end":447374,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447379,"byte_end":447388,"line_start":356,"line_end":356,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447393,"byte_end":447398,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447403,"byte_end":447410,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447962,"byte_end":447971,"line_start":372,"line_end":372,"column_start":8,"column_end":17},"name":"on_attach","qualname":"::fairing::Fairing::on_attach","value":"fn (&self, rocket: Rocket) -> Result<Rocket, Rocket>","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The attach callback. Returns `Ok` if launch should proceed and `Err` if\n launch should be aborted.","sig":null,"attributes":[{"value":"/ The attach callback. Returns `Ok` if launch should proceed and `Err` if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447444,"byte_end":447519,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ launch should be aborted.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447524,"byte_end":447553,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447558,"byte_end":447561,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method is called when a fairing is attached if `Kind::Attach` is in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447566,"byte_end":447642,"line_start":364,"line_end":364,"column_start":5,"column_end":81}},{"value":"/ the `kind` field of the `Info` structure for this fairing. The `rocket`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447647,"byte_end":447722,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ parameter is the `Rocket` instance that is currently being built for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447727,"byte_end":447799,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ this application.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447804,"byte_end":447825,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447830,"byte_end":447833,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447838,"byte_end":447867,"line_start":369,"line_end":369,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447872,"byte_end":447875,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method simply returns `Ok(rocket)`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":447880,"byte_end":447954,"line_start":371,"line_end":371,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448481,"byte_end":448490,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"on_launch","qualname":"::fairing::Fairing::on_launch","value":"fn (&self, rocket: &Rocket) -> ()","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The launch callback.","sig":null,"attributes":[{"value":"/ The launch callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448041,"byte_end":448065,"line_start":374,"line_end":374,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448070,"byte_end":448073,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This method is called just prior to launching the application if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448078,"byte_end":448146,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/ `Kind::Launch` is in the `kind` field of the `Info` structure for this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448151,"byte_end":448225,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ fairing. The `&Rocket` parameter corresponds to the application that","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448230,"byte_end":448302,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ will be launched.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448307,"byte_end":448328,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448333,"byte_end":448336,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448341,"byte_end":448370,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448375,"byte_end":448378,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method does nothing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448383,"byte_end":448442,"line_start":383,"line_end":383,"column_start":5,"column_end":64}},{"value":"allow(unused_variables)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448447,"byte_end":448473,"line_start":384,"line_end":384,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448995,"byte_end":449005,"line_start":398,"line_end":398,"column_start":8,"column_end":18},"name":"on_request","qualname":"::fairing::Fairing::on_request","value":"fn (&self, request: &mut Request, data: &Data) -> ()","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The request callback.","sig":null,"attributes":[{"value":"/ The request callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448523,"byte_end":448548,"line_start":387,"line_end":387,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448553,"byte_end":448556,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is called when a new request is received if `Kind::Request`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448561,"byte_end":448636,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ is in the `kind` field of the `Info` structure for this fairing. The","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448641,"byte_end":448713,"line_start":390,"line_end":390,"column_start":5,"column_end":77}},{"value":"/ `&mut Request` parameter is the incoming request, and the `&Data`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448718,"byte_end":448787,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ parameter is the incoming data in the request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448792,"byte_end":448842,"line_start":392,"line_end":392,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448847,"byte_end":448850,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448855,"byte_end":448884,"line_start":394,"line_end":394,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448889,"byte_end":448892,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method does nothing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448897,"byte_end":448956,"line_start":396,"line_end":396,"column_start":5,"column_end":64}},{"value":"allow(unused_variables)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":448961,"byte_end":448987,"line_start":397,"line_end":397,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449551,"byte_end":449562,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"on_response","qualname":"::fairing::Fairing::on_response","value":"fn (&self, request: &Request, response: &mut Response) -> ()","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The response callback.","sig":null,"attributes":[{"value":"/ The response callback.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449057,"byte_end":449083,"line_start":400,"line_end":400,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449088,"byte_end":449091,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This method is called when a response is ready to be issued to a client","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449096,"byte_end":449171,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ if `Kind::Response` is in the `kind` field of the `Info` structure for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449176,"byte_end":449250,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ this fairing. The `&Request` parameter is the request that was routed,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449255,"byte_end":449329,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ and the `&mut Response` parameter is the resulting response.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449334,"byte_end":449398,"line_start":405,"line_end":405,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449403,"byte_end":449406,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449411,"byte_end":449440,"line_start":407,"line_end":407,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449445,"byte_end":449448,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method does nothing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449453,"byte_end":449512,"line_start":409,"line_end":409,"column_start":5,"column_end":64}},{"value":"allow(unused_variables)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449517,"byte_end":449543,"line_start":410,"line_end":410,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1880},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":3350},{"krate":0,"index":3366},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":3368},{"krate":0,"index":3376},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1922}],"decl_id":null,"docs":" Types representing various errors that can occur in a Rocket application.\n","sig":null,"attributes":[{"value":"! Types representing various errors that can occur in a Rocket application.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":462917,"byte_end":462994,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3351},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463684,"byte_end":463688,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Bind","qualname":"::error::LaunchErrorKind::Bind","value":"LaunchErrorKind::Bind(hyper::Error)","parent":{"krate":0,"index":3350},"children":[],"decl_id":null,"docs":" Binding to the provided address/port failed.\n","sig":null,"attributes":[{"value":"/ Binding to the provided address/port failed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463631,"byte_end":463679,"line_start":21,"line_end":21,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3354},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463753,"byte_end":463755,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::LaunchErrorKind::Io","value":"LaunchErrorKind::Io(io::Error)","parent":{"krate":0,"index":3350},"children":[],"decl_id":null,"docs":" An I/O error occurred during launch.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred during launch.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463708,"byte_end":463748,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463812,"byte_end":463821,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Collision","qualname":"::error::LaunchErrorKind::Collision","value":"LaunchErrorKind::Collision(Vec<(Route, Route)>)","parent":{"krate":0,"index":3350},"children":[],"decl_id":null,"docs":" Route collisions were detected.\n","sig":null,"attributes":[{"value":"/ Route collisions were detected.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463772,"byte_end":463807,"line_start":25,"line_end":25,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3360},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463892,"byte_end":463906,"line_start":28,"line_end":28,"column_start":5,"column_end":19},"name":"FailedFairings","qualname":"::error::LaunchErrorKind::FailedFairings","value":"LaunchErrorKind::FailedFairings(Vec<&'static str>)","parent":{"krate":0,"index":3350},"children":[],"decl_id":null,"docs":" A launch fairing reported an error.\n","sig":null,"attributes":[{"value":"/ A launch fairing reported an error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463848,"byte_end":463887,"line_start":27,"line_end":27,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463996,"byte_end":464003,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::LaunchErrorKind::Unknown","value":"LaunchErrorKind::Unknown(Box<::std::error::Error + Send + Sync>)","parent":{"krate":0,"index":3350},"children":[],"decl_id":null,"docs":" An otherwise uncategorized error occurred during launch.\n","sig":null,"attributes":[{"value":"/ An otherwise uncategorized error occurred during launch.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463931,"byte_end":463991,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":3350},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463609,"byte_end":463624,"line_start":20,"line_end":20,"column_start":10,"column_end":25},"name":"LaunchErrorKind","qualname":"::error::LaunchErrorKind","value":"LaunchErrorKind::{Bind, Io, Collision, FailedFairings, Unknown}","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3363}],"decl_id":null,"docs":" The kind of launch error that occurred.","sig":null,"attributes":[{"value":"/ The kind of launch error that occurred.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463120,"byte_end":463163,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463164,"byte_end":463167,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ In almost every instance, a launch error occurs because of an I/O error;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463168,"byte_end":463244,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ this is represented by the `Io` variant. A launch error may also occur","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463245,"byte_end":463319,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ because of ill-defined routes that lead to collisions or because a fairing","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463320,"byte_end":463398,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ encountered an error; these are represented by the `Collision` and","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463399,"byte_end":463469,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ `FailedFairing` variants, respectively. The `Unknown` variant captures all","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463470,"byte_end":463548,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ other kinds of launch errors.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":463549,"byte_end":463582,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1890},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465847,"byte_end":465858,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"LaunchError","qualname":"::error::LaunchError","value":"LaunchError {  }","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892}],"decl_id":null,"docs":" An error that occurs during launch.","sig":null,"attributes":[{"value":"/ An error that occurs during launch.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464047,"byte_end":464086,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464087,"byte_end":464090,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `LaunchError` is returned by [`launch()`](::Rocket::launch()) when","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464091,"byte_end":464163,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ launching an application fails.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464164,"byte_end":464199,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464200,"byte_end":464203,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464204,"byte_end":464216,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464217,"byte_end":464220,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ A value of this type panics if it is dropped without first being inspected.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464221,"byte_end":464300,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ An _inspection_ occurs when any method is called. For instance, if","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464301,"byte_end":464371,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ `println!(\"Error: {}\", e)` is called, where `e: LaunchError`, the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464372,"byte_end":464441,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ `Display::fmt` method being called by `println!` results in `e` being marked","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464442,"byte_end":464522,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ as inspected; a subsequent `drop` of the value will _not_ result in a panic.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464523,"byte_end":464603,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ The following snippet illustrates this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464604,"byte_end":464647,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464648,"byte_end":464651,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464652,"byte_end":464663,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464664,"byte_end":464680,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ let error = rocket::ignite().launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464681,"byte_end":464723,"line_start":49,"line_end":49,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464724,"byte_end":464727,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // This line is only reached if launching failed. This \"inspects\" the error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464728,"byte_end":464808,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ println!(\"Launch failed! Error: {}\", error);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464809,"byte_end":464857,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464858,"byte_end":464861,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // This call to drop (explicit here for demonstration) will do nothing.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464862,"byte_end":464937,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ drop(error);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464938,"byte_end":464954,"line_start":55,"line_end":55,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464955,"byte_end":464962,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464963,"byte_end":464970,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464971,"byte_end":464974,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ When a value of this type panics, the corresponding error message is pretty","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":464975,"byte_end":465054,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ printed to the console. The following illustrates this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465055,"byte_end":465114,"line_start":60,"line_end":60,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465115,"byte_end":465118,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465119,"byte_end":465130,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465131,"byte_end":465147,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ let error = rocket::ignite().launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465148,"byte_end":465190,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465191,"byte_end":465194,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // This call to drop (explicit here for demonstration) will result in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465195,"byte_end":465268,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ // `error` being pretty-printed to the console along with a `panic!`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465269,"byte_end":465342,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ drop(error);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465343,"byte_end":465359,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465360,"byte_end":465367,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465368,"byte_end":465375,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465376,"byte_end":465379,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465380,"byte_end":465391,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465392,"byte_end":465395,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ A `LaunchError` value should usually be allowed to `drop` without","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465396,"byte_end":465465,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/ inspection. There are two exceptions to this suggestion.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465466,"byte_end":465526,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465527,"byte_end":465530,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/   1. If you are writing a library or high-level application on-top of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465531,"byte_end":465604,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/      Rocket, you likely want to inspect the value before it drops to avoid a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465605,"byte_end":465685,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/      Rocket-specific `panic!`. This typically means simply printing the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465686,"byte_end":465761,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/      value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465762,"byte_end":465777,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465778,"byte_end":465781,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/   2. You want to display your own error messages.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465782,"byte_end":465835,"line_start":82,"line_end":82,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466620,"byte_end":466624,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"kind","qualname":"<LaunchError>::kind","value":"fn (&self) -> &LaunchErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `kind` of the launch error.","sig":null,"attributes":[{"value":"/ Retrieve the `kind` of the launch error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466306,"byte_end":466350,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466355,"byte_end":466358,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466363,"byte_end":466376,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466381,"byte_end":466384,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466389,"byte_end":466400,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466405,"byte_end":466421,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/ let error = rocket::ignite().launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466426,"byte_end":466468,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466473,"byte_end":466476,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // This line is only reached if launch failed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466481,"byte_end":466531,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ let error_kind = error.kind();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466536,"byte_end":466570,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466575,"byte_end":466582,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466587,"byte_end":466594,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466599,"byte_end":466608,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470386,"byte_end":470393,"line_start":231,"line_end":231,"column_start":5,"column_end":12},"name":"Segment","qualname":"::error::RouteUriError::Segment","value":"RouteUriError::Segment","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":" The base (mount point) or route path contains invalid segments.\n","sig":null,"attributes":[{"value":"/ The base (mount point) or route path contains invalid segments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470314,"byte_end":470381,"line_start":230,"line_end":230,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3371},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470441,"byte_end":470444,"line_start":233,"line_end":233,"column_start":5,"column_end":8},"name":"Uri","qualname":"::error::RouteUriError::Uri","value":"RouteUriError::Uri(uri::Error<'static>)","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":" The route URI is not a valid URI.\n","sig":null,"attributes":[{"value":"/ The route URI is not a valid URI.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470399,"byte_end":470436,"line_start":232,"line_end":232,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470529,"byte_end":470540,"line_start":235,"line_end":235,"column_start":5,"column_end":16},"name":"DynamicBase","qualname":"::error::RouteUriError::DynamicBase","value":"RouteUriError::DynamicBase","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":" The base (mount point) contains dynamic segments.\n","sig":null,"attributes":[{"value":"/ The base (mount point) contains dynamic segments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470471,"byte_end":470524,"line_start":234,"line_end":234,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3368},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470294,"byte_end":470307,"line_start":229,"line_end":229,"column_start":10,"column_end":23},"name":"RouteUriError","qualname":"::error::RouteUriError","value":"RouteUriError::{Segment, Uri, DynamicBase}","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3374}],"decl_id":null,"docs":" Error returned by [`set_uri()`](::Route::set_uri()) on invalid URIs.\n","sig":null,"attributes":[{"value":"/ Error returned by [`set_uri()`](::Route::set_uri()) on invalid URIs.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470195,"byte_end":470267,"line_start":227,"line_end":227,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":1924},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3872,"byte_end":3876,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"name":"http","qualname":"::http","value":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1925}],"decl_id":null,"docs":" Types that map to concepts in HTTP.","sig":null,"attributes":[{"value":"! Types that map to concepts in HTTP.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3883,"byte_end":3922,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"!","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3927,"byte_end":3930,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"! This module exports types that map to HTTP concepts or to the underlying","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3935,"byte_end":4011,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"! HTTP library when needed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4016,"byte_end":4045,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490787,"byte_end":490800,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"collides_with","qualname":"<Route>::collides_with","value":"fn (&self, other: &Route) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if two routes can match against some request. That is, if two\n routes `collide`, there exists a request that can match against both\n routes.","sig":null,"attributes":[{"value":"/ Determines if two routes can match against some request. That is, if two","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490107,"byte_end":490183,"line_start":8,"line_end":8,"column_start":5,"column_end":81}},{"value":"/ routes `collide`, there exists a request that can match against both","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490188,"byte_end":490260,"line_start":9,"line_end":9,"column_start":5,"column_end":77}},{"value":"/ routes.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490265,"byte_end":490276,"line_start":10,"line_end":10,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490281,"byte_end":490284,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ This implementation is used at initialization to check if two user","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490289,"byte_end":490359,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ routes collide before launching. Format collisions works like this:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490364,"byte_end":490435,"line_start":13,"line_end":13,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490440,"byte_end":490443,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/   * If route specifies a format, it only gets requests for that format.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490448,"byte_end":490523,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/   * If route doesn't specify a format, it gets requests for any format.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490528,"byte_end":490603,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490608,"byte_end":490611,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Because query parsing is lenient, and dynamic query parameters can be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490616,"byte_end":490689,"line_start":18,"line_end":18,"column_start":5,"column_end":78}},{"value":"/ missing, queries do not impact whether two routes collide.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490694,"byte_end":490756,"line_start":19,"line_end":19,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491795,"byte_end":491802,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"matches","qualname":"<Route>::matches","value":"fn (&self, req: &Request) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if this route matches against the given request. This means\n that:","sig":null,"attributes":[{"value":"/ Determines if this route matches against the given request. This means","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491005,"byte_end":491079,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ that:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491084,"byte_end":491093,"line_start":29,"line_end":29,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491098,"byte_end":491101,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/   * The route's method matches that of the incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491106,"byte_end":491170,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/   * The route's format (if any) matches that of the incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491175,"byte_end":491248,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/     - If route specifies format, it only gets requests for that format.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491253,"byte_end":491328,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/     - If route doesn't specify format, it gets requests for any format.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491333,"byte_end":491408,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/   * All static components in the route's path match the corresponding","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491413,"byte_end":491486,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/     components in the same position in the incoming request.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491491,"byte_end":491555,"line_start":36,"line_end":36,"column_start":5,"column_end":69}},{"value":"/   * All static components in the route's query string are also in the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491560,"byte_end":491633,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/     request query string, though in any position.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491638,"byte_end":491691,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/     - If no query in route, requests with/without queries match.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":491696,"byte_end":491764,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512143,"byte_end":512148,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Route","qualname":"::router::route::Route","value":"Route { name, method, handler, base, uri, rank, format }","parent":null,"children":[{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386}],"decl_id":null,"docs":" A route: a method, its handler, path, rank, and format/media type.\n","sig":null,"attributes":[{"value":"/ A route: a method, its handler, path, rank, and format/media type.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512044,"byte_end":512114,"line_start":14,"line_end":14,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3379},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512209,"byte_end":512213,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"name","qualname":"::router::route::Route::name","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The name of this route, if one was given.\n","sig":null,"attributes":[{"value":"/ The name of this route, if one was given.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512155,"byte_end":512200,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3380},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512292,"byte_end":512298,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"method","qualname":"::router::route::Route::method","value":"rocket_http::Method","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The method this route matches against.\n","sig":null,"attributes":[{"value":"/ The method this route matches against.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512241,"byte_end":512283,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512383,"byte_end":512390,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"handler","qualname":"::router::route::Route::handler","value":"std::boxed::Box<(dyn handler::Handler + 'static)>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The function that should be called when the route matches.\n","sig":null,"attributes":[{"value":"/ The function that should be called when the route matches.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512312,"byte_end":512374,"line_start":21,"line_end":21,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3382},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512460,"byte_end":512464,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"base","qualname":"::router::route::Route::base","value":"rocket_http::uri::Origin<'static>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The base mount point of this `Route`.\n","sig":null,"attributes":[{"value":"/ The base mount point of this `Route`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512410,"byte_end":512451,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3383},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512622,"byte_end":512625,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"uri","qualname":"::router::route::Route::uri","value":"rocket_http::uri::Origin<'static>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The uri (in Rocket's route format) that should be matched against. This\n URI already includes the base mount point.\n","sig":null,"attributes":[{"value":"/ The uri (in Rocket's route format) that should be matched against. This","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512487,"byte_end":512562,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ URI already includes the base mount point.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512567,"byte_end":512613,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3384},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512720,"byte_end":512724,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"rank","qualname":"::router::route::Route::rank","value":"isize","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The rank of this route. Lower ranks have higher priorities.\n","sig":null,"attributes":[{"value":"/ The rank of this route. Lower ranks have higher priorities.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512648,"byte_end":512711,"line_start":28,"line_end":28,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3385},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512800,"byte_end":512806,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"format","qualname":"::router::route::Route::format","value":"std::option::Option<rocket_http::MediaType>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The media type this route matches against, if any.\n","sig":null,"attributes":[{"value":"/ The media type this route matches against, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":512737,"byte_end":512791,"line_start":30,"line_end":30,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517206,"byte_end":517209,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<Route>::new","value":"fn <S, H> (method: Method, path: S, handler: H) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given method, path, and handler with a base\n of `/`.","sig":null,"attributes":[{"value":"/ Creates a new route with the given method, path, and handler with a base","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514762,"byte_end":514838,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ of `/`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514843,"byte_end":514854,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514859,"byte_end":514862,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Ranking","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514867,"byte_end":514880,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514885,"byte_end":514888,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The route's rank is set so that routes with static paths (no dynamic","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514893,"byte_end":514965,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ parameters) are ranked higher than routes with dynamic paths, routes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514970,"byte_end":515042,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ with query strings with static segments are ranked higher than routes","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515047,"byte_end":515120,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ with fully dynamic queries, and routes with queries are ranked higher","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515125,"byte_end":515198,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ than routes without queries. This default ranking is summarized by the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515203,"byte_end":515277,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ table below:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515282,"byte_end":515298,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515303,"byte_end":515306,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ | static path | query         | rank |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515311,"byte_end":515353,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/ |-------------|---------------|------|","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515358,"byte_end":515400,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ | yes         | partly static | -6   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515405,"byte_end":515447,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ | yes         | fully dynamic | -5   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515452,"byte_end":515494,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ | yes         | none          | -4   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515499,"byte_end":515541,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ | no          | partly static | -3   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515546,"byte_end":515588,"line_start":101,"line_end":101,"column_start":5,"column_end":47}},{"value":"/ | no          | fully dynamic | -2   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515593,"byte_end":515635,"line_start":102,"line_end":102,"column_start":5,"column_end":47}},{"value":"/ | no          | none          | -1   |","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515640,"byte_end":515682,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515687,"byte_end":515690,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515695,"byte_end":515708,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515713,"byte_end":515716,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515721,"byte_end":515732,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ use rocket::Route;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515737,"byte_end":515759,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515764,"byte_end":515793,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ # use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515798,"byte_end":515832,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ # use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515837,"byte_end":515872,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/ # fn handler<'r>(request: &'r Request, _data: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515877,"byte_end":515949,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ #     Outcome::from(request, \"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":515954,"byte_end":516003,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516008,"byte_end":516015,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516020,"byte_end":516023,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // this is rank -6 (static path, ~static query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516028,"byte_end":516079,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ let route = Route::new(Method::Get, \"/foo?bar=baz&<zoo>\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516084,"byte_end":516155,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(route.rank, -6);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516160,"byte_end":516191,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516196,"byte_end":516199,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // this is rank -5 (static path, fully dynamic query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516204,"byte_end":516261,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"/ let route = Route::new(Method::Get, \"/foo?<zoo..>\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516266,"byte_end":516331,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(route.rank, -5);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516336,"byte_end":516367,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516372,"byte_end":516375,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ // this is a rank -4 route (static path, no query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516380,"byte_end":516434,"line_start":124,"line_end":124,"column_start":5,"column_end":59}},{"value":"/ let route = Route::new(Method::Get, \"/\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516439,"byte_end":516493,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(route.rank, -4);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516498,"byte_end":516529,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516534,"byte_end":516537,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ // this is a rank -3 route (dynamic path, ~static query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516542,"byte_end":516602,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/ let route = Route::new(Method::Get, \"/foo/<bar>?blue\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516607,"byte_end":516675,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(route.rank, -3);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516680,"byte_end":516711,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516716,"byte_end":516719,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ // this is a rank -2 route (dynamic path, fully dynamic query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516724,"byte_end":516790,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ let route = Route::new(Method::Get, \"/<bar>?<blue>\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516795,"byte_end":516861,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(route.rank, -2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516866,"byte_end":516897,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516902,"byte_end":516905,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ // this is a rank -1 route (dynamic path, no query)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516910,"byte_end":516965,"line_start":136,"line_end":136,"column_start":5,"column_end":60}},{"value":"/ let route = Route::new(Method::Get, \"/<bar>/foo/<baz..>\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":516970,"byte_end":517041,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(route.rank, -1);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517046,"byte_end":517077,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517082,"byte_end":517089,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517094,"byte_end":517097,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517102,"byte_end":517114,"line_start":141,"line_end":141,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517119,"byte_end":517122,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Panics if `path` is not a valid origin URI or Rocket route URI.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517127,"byte_end":517194,"line_start":143,"line_end":143,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518147,"byte_end":518153,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"ranked","qualname":"<Route>::ranked","value":"fn <S, H> (rank: isize, method: Method, path: S, handler: H) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given rank, method, path, and handler with\n a base of `/`.","sig":null,"attributes":[{"value":"/ Creates a new route with the given rank, method, path, and handler with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517451,"byte_end":517526,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ a base of `/`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517531,"byte_end":517549,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517554,"byte_end":517557,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517562,"byte_end":517575,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517580,"byte_end":517583,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517588,"byte_end":517599,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ use rocket::Route;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517604,"byte_end":517626,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517631,"byte_end":517660,"line_start":159,"line_end":159,"column_start":5,"column_end":34}},{"value":"/ # use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517665,"byte_end":517699,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/ # use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517704,"byte_end":517739,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ # fn handler<'r>(request: &'r Request, _data: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517744,"byte_end":517816,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ #     Outcome::from(request, \"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517821,"byte_end":517870,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517875,"byte_end":517882,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517887,"byte_end":517890,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // this is a rank 1 route matching requests to `GET /`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517895,"byte_end":517953,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/ let index = Route::ranked(1, Method::Get, \"/\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":517958,"byte_end":518018,"line_start":167,"line_end":167,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518023,"byte_end":518030,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518035,"byte_end":518038,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518043,"byte_end":518055,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518060,"byte_end":518063,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Panics if `path` is not a valid origin URI or Rocket route URI.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":518068,"byte_end":518135,"line_start":172,"line_end":172,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519690,"byte_end":519694,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"base","qualname":"<Route>::base","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the path of the base mount point of this route as an `&str`.","sig":null,"attributes":[{"value":"/ Retrieves the path of the base mount point of this route as an `&str`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519081,"byte_end":519155,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519160,"byte_end":519163,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519168,"byte_end":519181,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519186,"byte_end":519189,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519194,"byte_end":519205,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/ use rocket::Route;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519210,"byte_end":519232,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/ use rocket::http::Method;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519237,"byte_end":519266,"line_start":209,"line_end":209,"column_start":5,"column_end":34}},{"value":"/ # use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519271,"byte_end":519305,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ # use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519310,"byte_end":519345,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519350,"byte_end":519355,"line_start":212,"line_end":212,"column_start":5,"column_end":10}},{"value":"/ # fn handler<'r>(request: &'r Request, _data: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519360,"byte_end":519432,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ #     Outcome::from(request, \"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519437,"byte_end":519486,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519491,"byte_end":519498,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519503,"byte_end":519506,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut index = Route::new(Method::Get, \"/\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519511,"byte_end":519569,"line_start":217,"line_end":217,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(index.base(), \"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519574,"byte_end":519608,"line_start":218,"line_end":218,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(index.base.path(), \"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519613,"byte_end":519652,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519657,"byte_end":519664,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519669,"byte_end":519678,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":521113,"byte_end":521120,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Route>::set_uri","value":"fn <'a> (&mut self, mut base: Origin<'a>, path: Origin<'a>) -> Result<(), RouteUriError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the base mount point of the route to `base` and sets the path to\n `path`. The `path` should _not_ contains the `base` mount point. If\n `base` contains a query, it is ignored. Note that `self.uri` will\n include the new `base` after this method is called.","sig":null,"attributes":[{"value":"/ Sets the base mount point of the route to `base` and sets the path to","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519748,"byte_end":519821,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ `path`. The `path` should _not_ contains the `base` mount point. If","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519826,"byte_end":519897,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ `base` contains a query, it is ignored. Note that `self.uri` will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519902,"byte_end":519971,"line_start":228,"line_end":228,"column_start":5,"column_end":74}},{"value":"/ include the new `base` after this method is called.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":519976,"byte_end":520031,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520036,"byte_end":520039,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520044,"byte_end":520056,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520061,"byte_end":520064,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Returns an error if any of the following occur:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520069,"byte_end":520120,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520125,"byte_end":520128,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/   * The base mount point contains dynamic parameters.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520133,"byte_end":520190,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/   * The base mount point or path contain encoded characters.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520195,"byte_end":520259,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/   * The path is not a valid Rocket route URI.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520264,"byte_end":520313,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520318,"byte_end":520321,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520326,"byte_end":520339,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520344,"byte_end":520347,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520352,"byte_end":520363,"line_start":241,"line_end":241,"column_start":5,"column_end":16}},{"value":"/ use rocket::Route;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520368,"byte_end":520390,"line_start":242,"line_end":242,"column_start":5,"column_end":27}},{"value":"/ use rocket::http::{Method, uri::Origin};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520395,"byte_end":520439,"line_start":243,"line_end":243,"column_start":5,"column_end":49}},{"value":"/ # use rocket::{Request, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520444,"byte_end":520478,"line_start":244,"line_end":244,"column_start":5,"column_end":39}},{"value":"/ # use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520483,"byte_end":520518,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520523,"byte_end":520528,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ # fn handler<'r>(request: &'r Request, _data: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520533,"byte_end":520605,"line_start":247,"line_end":247,"column_start":5,"column_end":77}},{"value":"/ #     Outcome::from(request, \"Hello, world!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520610,"byte_end":520659,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520664,"byte_end":520671,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520676,"byte_end":520679,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let mut index = Route::new(Method::Get, \"/\", handler);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520684,"byte_end":520742,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(index.base(), \"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520747,"byte_end":520781,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(index.base.path(), \"/\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520786,"byte_end":520825,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520830,"byte_end":520833,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let new_base = Origin::parse(\"/greeting\").unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520838,"byte_end":520893,"line_start":255,"line_end":255,"column_start":5,"column_end":60}},{"value":"/ let new_uri = Origin::parse(\"/hi\").unwrap();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520898,"byte_end":520946,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/ index.set_uri(new_base, new_uri);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520951,"byte_end":520988,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(index.base(), \"/greeting\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":520993,"byte_end":521035,"line_start":258,"line_end":258,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(index.uri.path(), \"/greeting/hi\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":521040,"byte_end":521089,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":521094,"byte_end":521101,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":523951,"byte_end":523957,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Rocket","qualname":"::rocket::Rocket","value":"Rocket {  }","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076}],"decl_id":null,"docs":" The main `Rocket` type: used to mount routes and catchers and launch the\n application.\n","sig":null,"attributes":[{"value":"/ The main `Rocket` type: used to mount routes and catchers and launch the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":523846,"byte_end":523922,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ application.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":523923,"byte_end":523939,"line_start":30,"line_end":30,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537373,"byte_end":537379,"line_start":365,"line_end":365,"column_start":12,"column_end":18},"name":"ignite","qualname":"<Rocket>::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rocket` application using the configuration information in\n `Rocket.toml`. If the file does not exist or if there is an I/O error\n reading the file, the defaults are used. See the [`config`]\n documentation for more information on defaults.","sig":null,"attributes":[{"value":"/ Create a new `Rocket` application using the configuration information in","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536677,"byte_end":536753,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ `Rocket.toml`. If the file does not exist or if there is an I/O error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536758,"byte_end":536831,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ reading the file, the defaults are used. See the [`config`]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536836,"byte_end":536899,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/ documentation for more information on defaults.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536904,"byte_end":536955,"line_start":347,"line_end":347,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536960,"byte_end":536963,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method is typically called through the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":536968,"byte_end":537015,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/ [`rocket::ignite()`](::ignite) alias.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537020,"byte_end":537061,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537066,"byte_end":537069,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537074,"byte_end":537086,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537091,"byte_end":537094,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If there is an error parsing the `Rocket.toml` file, this functions","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537099,"byte_end":537170,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ prints a nice error message and then exits the process.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537175,"byte_end":537234,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537239,"byte_end":537242,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537247,"byte_end":537261,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537266,"byte_end":537269,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537274,"byte_end":537285,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537290,"byte_end":537297,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537302,"byte_end":537322,"line_start":361,"line_end":361,"column_start":5,"column_end":25}},{"value":"/ # };","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537327,"byte_end":537335,"line_start":362,"line_end":362,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537340,"byte_end":537347,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537352,"byte_end":537361,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538338,"byte_end":538344,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"custom","qualname":"<Rocket>::custom","value":"fn (config: Config) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rocket` application using the supplied custom\n configuration. The `Rocket.toml` file, if present, is ignored. Any\n environment variables setting config parameters are ignored.","sig":null,"attributes":[{"value":"/ Creates a new `Rocket` application using the supplied custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537515,"byte_end":537579,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/ configuration. The `Rocket.toml` file, if present, is ignored. Any","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537584,"byte_end":537654,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ environment variables setting config parameters are ignored.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537659,"byte_end":537723,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537728,"byte_end":537731,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This method is typically called through the `rocket::custom` alias.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537736,"byte_end":537807,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537812,"byte_end":537815,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537820,"byte_end":537834,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537839,"byte_end":537842,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537847,"byte_end":537858,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/ use rocket::config::{Config, Environment};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537863,"byte_end":537909,"line_start":379,"line_end":379,"column_start":5,"column_end":51}},{"value":"/ # use rocket::config::ConfigError;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537914,"byte_end":537952,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537957,"byte_end":537960,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537965,"byte_end":537990,"line_start":382,"line_end":382,"column_start":5,"column_end":30}},{"value":"/ # fn try_config() -> Result<(), ConfigError> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":537995,"byte_end":538045,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"/ let config = Config::build(Environment::Staging)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538050,"byte_end":538102,"line_start":384,"line_end":384,"column_start":5,"column_end":57}},{"value":"/     .address(\"1.2.3.4\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538107,"byte_end":538134,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/     .port(9234)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538139,"byte_end":538158,"line_start":386,"line_end":386,"column_start":5,"column_end":24}},{"value":"/     .finalize()?;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538163,"byte_end":538184,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538189,"byte_end":538192,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # #[allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538197,"byte_end":538229,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/ let app = rocket::custom(config);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538234,"byte_end":538271,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538276,"byte_end":538288,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538293,"byte_end":538300,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538305,"byte_end":538312,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":538317,"byte_end":538326,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542474,"byte_end":542479,"line_start":504,"line_end":504,"column_start":12,"column_end":17},"name":"mount","qualname":"<Rocket>::mount","value":"fn <R> (mut self, base: &str, routes: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mounts all of the routes in the supplied vector at the given `base`\n path. Mounting a route with path `path` at path `base` makes the route\n available at `base/path`.","sig":null,"attributes":[{"value":"/ Mounts all of the routes in the supplied vector at the given `base`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540576,"byte_end":540647,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ path. Mounting a route with path `path` at path `base` makes the route","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540652,"byte_end":540726,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ available at `base/path`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540731,"byte_end":540760,"line_start":451,"line_end":451,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540765,"byte_end":540768,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540773,"byte_end":540785,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540790,"byte_end":540793,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Panics if the `base` mount point is not a valid static path: a valid","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540798,"byte_end":540870,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/ origin URI without dynamic parameters.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540875,"byte_end":540917,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540922,"byte_end":540925,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Panics if any route's URI is not a valid origin URI. This kind of panic","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":540930,"byte_end":541005,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ is guaranteed not to occur if the routes were generated using Rocket's","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541010,"byte_end":541084,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ code generation.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541089,"byte_end":541109,"line_start":460,"line_end":460,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541114,"byte_end":541117,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541122,"byte_end":541136,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541141,"byte_end":541144,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Use the `routes!` macro to mount routes created using the code","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541149,"byte_end":541215,"line_start":464,"line_end":464,"column_start":5,"column_end":71}},{"value":"/ generation facilities. Requests to the `/hello/world` URI will be","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541220,"byte_end":541289,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/ dispatched to the `hi` route.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541294,"byte_end":541327,"line_start":466,"line_end":466,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541332,"byte_end":541335,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541340,"byte_end":541351,"line_start":468,"line_end":468,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541356,"byte_end":541405,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541410,"byte_end":541449,"line_start":470,"line_end":470,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541454,"byte_end":541459,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ #[get(\"/world\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541464,"byte_end":541484,"line_start":472,"line_end":472,"column_start":5,"column_end":25}},{"value":"/ fn hi() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541489,"byte_end":541518,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/     \"Hello!\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541523,"byte_end":541539,"line_start":474,"line_end":474,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541544,"byte_end":541549,"line_start":475,"line_end":475,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541554,"byte_end":541557,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541562,"byte_end":541577,"line_start":477,"line_end":477,"column_start":5,"column_end":20}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541582,"byte_end":541660,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/     rocket::ignite().mount(\"/hello\", routes![hi])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541665,"byte_end":541718,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ #       .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541723,"byte_end":541745,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541750,"byte_end":541757,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541762,"byte_end":541767,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541772,"byte_end":541779,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541784,"byte_end":541787,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Manually create a route named `hi` at path `\"/world\"` mounted at base","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541792,"byte_end":541865,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ `\"/hello\"`. Requests to the `/hello/world` URI will be dispatched to the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541870,"byte_end":541946,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ `hi` route.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541951,"byte_end":541966,"line_start":487,"line_end":487,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541971,"byte_end":541974,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541979,"byte_end":541990,"line_start":489,"line_end":489,"column_start":5,"column_end":16}},{"value":"/ use rocket::{Request, Route, Data};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":541995,"byte_end":542034,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/ use rocket::handler::Outcome;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542039,"byte_end":542072,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ use rocket::http::Method::*;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542077,"byte_end":542109,"line_start":492,"line_end":492,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542114,"byte_end":542117,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ fn hi<'r>(req: &'r Request, _: Data) -> Outcome<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542122,"byte_end":542179,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/     Outcome::from(req, \"Hello!\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542184,"byte_end":542220,"line_start":495,"line_end":495,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542225,"byte_end":542230,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542235,"byte_end":542238,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542243,"byte_end":542321,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ rocket::ignite().mount(\"/hello\", vec![Route::new(Get, \"/world\", hi)])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542326,"byte_end":542399,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ #     .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542404,"byte_end":542424,"line_start":500,"line_end":500,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542429,"byte_end":542436,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542441,"byte_end":542448,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":542453,"byte_end":542462,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544273,"byte_end":544281,"line_start":564,"line_end":564,"column_start":12,"column_end":20},"name":"register","qualname":"<Rocket>::register","value":"fn (mut self, catchers: Vec<Catcher>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers all of the catchers in the supplied vector.","sig":null,"attributes":[{"value":"/ Registers all of the catchers in the supplied vector.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543450,"byte_end":543507,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543512,"byte_end":543515,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543520,"byte_end":543534,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543539,"byte_end":543542,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543547,"byte_end":543558,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543563,"byte_end":543612,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543617,"byte_end":543656,"line_start":542,"line_end":542,"column_start":5,"column_end":44}},{"value":"/ use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543661,"byte_end":543685,"line_start":543,"line_end":543,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543690,"byte_end":543693,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ #[catch(500)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543698,"byte_end":543715,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/ fn internal_error() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543720,"byte_end":543761,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/     \"Whoops! Looks like we messed up.\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543766,"byte_end":543808,"line_start":547,"line_end":547,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543813,"byte_end":543818,"line_start":548,"line_end":548,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543823,"byte_end":543826,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ #[catch(400)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543831,"byte_end":543848,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/ fn not_found(req: &Request) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543853,"byte_end":543896,"line_start":551,"line_end":551,"column_start":5,"column_end":48}},{"value":"/     format!(\"I couldn't find '{}'. Try something else?\", req.uri())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543901,"byte_end":543972,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543977,"byte_end":543982,"line_start":553,"line_end":553,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543987,"byte_end":543990,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":543995,"byte_end":544010,"line_start":555,"line_end":555,"column_start":5,"column_end":20}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544015,"byte_end":544093,"line_start":556,"line_end":556,"column_start":5,"column_end":83}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544098,"byte_end":544122,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         .register(catchers![internal_error, not_found])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544127,"byte_end":544186,"line_start":558,"line_end":558,"column_start":5,"column_end":64}},{"value":"/ #       .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544191,"byte_end":544213,"line_start":559,"line_end":559,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544218,"byte_end":544225,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544230,"byte_end":544235,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544240,"byte_end":544247,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544252,"byte_end":544261,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545995,"byte_end":546001,"line_start":617,"line_end":617,"column_start":12,"column_end":18},"name":"manage","qualname":"<Rocket>::manage","value":"fn <T> (self, state: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add `state` to the state managed by this instance of Rocket.","sig":null,"attributes":[{"value":"/ Add `state` to the state managed by this instance of Rocket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544740,"byte_end":544804,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544809,"byte_end":544812,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This method can be called any number of times as long as each call","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544817,"byte_end":544887,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/ refers to a different `T`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544892,"byte_end":544922,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544927,"byte_end":544930,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Managed state can be retrieved by any request handler via the","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":544935,"byte_end":545000,"line_start":584,"line_end":584,"column_start":5,"column_end":70}},{"value":"/ [`State`](::State) request guard. In particular, if a value of type `T`","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545005,"byte_end":545080,"line_start":585,"line_end":585,"column_start":5,"column_end":80}},{"value":"/ is managed by Rocket, adding `State<T>` to the list of arguments in a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545085,"byte_end":545158,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ request handler instructs Rocket to retrieve the managed value.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545163,"byte_end":545230,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545235,"byte_end":545238,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545243,"byte_end":545255,"line_start":589,"line_end":589,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545260,"byte_end":545263,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Panics if state of type `T` is already being managed.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545268,"byte_end":545325,"line_start":591,"line_end":591,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545330,"byte_end":545333,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545338,"byte_end":545351,"line_start":593,"line_end":593,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545356,"byte_end":545359,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545364,"byte_end":545375,"line_start":595,"line_end":595,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545380,"byte_end":545429,"line_start":596,"line_end":596,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545434,"byte_end":545473,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/ use rocket::State;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545478,"byte_end":545500,"line_start":598,"line_end":598,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545505,"byte_end":545508,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ struct MyValue(usize);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545513,"byte_end":545539,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545544,"byte_end":545547,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ #[get(\"/\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545552,"byte_end":545567,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/ fn index(state: State<MyValue>) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545572,"byte_end":545619,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/     format!(\"The stateful value is: {}\", state.0)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545624,"byte_end":545677,"line_start":604,"line_end":604,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545682,"byte_end":545687,"line_start":605,"line_end":605,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545692,"byte_end":545695,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545700,"byte_end":545715,"line_start":607,"line_end":607,"column_start":5,"column_end":20}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545720,"byte_end":545798,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545803,"byte_end":545827,"line_start":609,"line_end":609,"column_start":5,"column_end":29}},{"value":"/         .mount(\"/\", routes![index])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545832,"byte_end":545871,"line_start":610,"line_end":610,"column_start":5,"column_end":44}},{"value":"/         .manage(MyValue(10))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545876,"byte_end":545908,"line_start":611,"line_end":611,"column_start":5,"column_end":37}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545913,"byte_end":545935,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545940,"byte_end":545947,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545952,"byte_end":545957,"line_start":614,"line_end":614,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545962,"byte_end":545969,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":545974,"byte_end":545983,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":547043,"byte_end":547049,"line_start":649,"line_end":649,"column_start":12,"column_end":18},"name":"attach","qualname":"<Rocket>::attach","value":"fn <F> (mut self, fairing: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Attaches a fairing to this instance of Rocket. If the fairing is an\n _attach_ fairing, it is run immediately. All other kinds of fairings\n will be executed at their appropriate time.","sig":null,"attributes":[{"value":"/ Attaches a fairing to this instance of Rocket. If the fairing is an","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546265,"byte_end":546336,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/ _attach_ fairing, it is run immediately. All other kinds of fairings","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546341,"byte_end":546413,"line_start":627,"line_end":627,"column_start":5,"column_end":77}},{"value":"/ will be executed at their appropriate time.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546418,"byte_end":546465,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546470,"byte_end":546473,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546478,"byte_end":546491,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546496,"byte_end":546499,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546504,"byte_end":546515,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546520,"byte_end":546569,"line_start":633,"line_end":633,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546574,"byte_end":546613,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ use rocket::Rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546618,"byte_end":546641,"line_start":635,"line_end":635,"column_start":5,"column_end":28}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546646,"byte_end":546677,"line_start":636,"line_end":636,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546682,"byte_end":546685,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546690,"byte_end":546705,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546710,"byte_end":546788,"line_start":639,"line_end":639,"column_start":5,"column_end":83}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546793,"byte_end":546817,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"/         .attach(AdHoc::on_launch(\"Launch Message\", |_| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546822,"byte_end":546882,"line_start":641,"line_end":641,"column_start":5,"column_end":65}},{"value":"/             println!(\"Rocket is launching!\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546887,"byte_end":546936,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/         }))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546941,"byte_end":546956,"line_start":643,"line_end":643,"column_start":5,"column_end":20}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546961,"byte_end":546983,"line_start":644,"line_end":644,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":546988,"byte_end":546995,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":547000,"byte_end":547005,"line_start":646,"line_end":646,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":547010,"byte_end":547017,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":547022,"byte_end":547031,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548588,"byte_end":548594,"line_start":691,"line_end":691,"column_start":12,"column_end":18},"name":"launch","qualname":"<Rocket>::launch","value":"fn (mut self) -> LaunchError","parent":null,"children":[],"decl_id":null,"docs":" Starts the application server and begins listening for and dispatching\n requests to mounted routes and catchers. Unless there is an error, this\n function does not return and blocks until program termination.","sig":null,"attributes":[{"value":"/ Starts the application server and begins listening for and dispatching","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":547929,"byte_end":548003,"line_start":673,"line_end":673,"column_start":5,"column_end":79}},{"value":"/ requests to mounted routes and catchers. Unless there is an error, this","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548008,"byte_end":548083,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/ function does not return and blocks until program termination.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548088,"byte_end":548154,"line_start":675,"line_end":675,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548159,"byte_end":548162,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548167,"byte_end":548178,"line_start":677,"line_end":677,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548183,"byte_end":548186,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ If there is a problem starting the application, a [`LaunchError`] is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548191,"byte_end":548263,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ returned. Note that a value of type `LaunchError` panics if dropped","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548268,"byte_end":548339,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/ without first being inspected. See the [`LaunchError`] documentation for","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548344,"byte_end":548420,"line_start":681,"line_end":681,"column_start":5,"column_end":81}},{"value":"/ more information.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548425,"byte_end":548446,"line_start":682,"line_end":682,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548451,"byte_end":548454,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548459,"byte_end":548472,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548477,"byte_end":548480,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548485,"byte_end":548496,"line_start":686,"line_end":686,"column_start":5,"column_end":16}},{"value":"/ # if false {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548501,"byte_end":548517,"line_start":687,"line_end":687,"column_start":5,"column_end":21}},{"value":"/ rocket::ignite().launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548522,"byte_end":548552,"line_start":688,"line_end":688,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548557,"byte_end":548564,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":548569,"byte_end":548576,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551543,"byte_end":551549,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"routes","qualname":"<Rocket>::routes","value":"fn <'a> (&'a self) -> impl Iterator<Item = &'a Route> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the routes mounted on this instance of\n Rocket.","sig":null,"attributes":[{"value":"/ Returns an iterator over all of the routes mounted on this instance of","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550520,"byte_end":550594,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ Rocket.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550599,"byte_end":550610,"line_start":742,"line_end":742,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550615,"byte_end":550618,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550623,"byte_end":550636,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550641,"byte_end":550644,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550649,"byte_end":550660,"line_start":746,"line_end":746,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550665,"byte_end":550714,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550719,"byte_end":550758,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ use rocket::Rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550763,"byte_end":550786,"line_start":749,"line_end":749,"column_start":5,"column_end":28}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550791,"byte_end":550822,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550827,"byte_end":550830,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ #[get(\"/hello\")]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550835,"byte_end":550855,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/ fn hello() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550860,"byte_end":550892,"line_start":753,"line_end":753,"column_start":5,"column_end":37}},{"value":"/     \"Hello, world!\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550897,"byte_end":550920,"line_start":754,"line_end":754,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550925,"byte_end":550930,"line_start":755,"line_end":755,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550935,"byte_end":550938,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550943,"byte_end":550958,"line_start":757,"line_end":757,"column_start":5,"column_end":20}},{"value":"/     let rocket = rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":550963,"byte_end":551000,"line_start":758,"line_end":758,"column_start":5,"column_end":42}},{"value":"/         .mount(\"/\", routes![hello])","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551005,"byte_end":551044,"line_start":759,"line_end":759,"column_start":5,"column_end":44}},{"value":"/         .mount(\"/hi\", routes![hello]);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551049,"byte_end":551091,"line_start":760,"line_end":760,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551096,"byte_end":551099,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/     for route in rocket.routes() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551104,"byte_end":551142,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/         match route.base() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551147,"byte_end":551179,"line_start":763,"line_end":763,"column_start":5,"column_end":37}},{"value":"/             \"/\" => assert_eq!(route.uri.path(), \"/hello\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551184,"byte_end":551246,"line_start":764,"line_end":764,"column_start":5,"column_end":67}},{"value":"/             \"/hi\" => assert_eq!(route.uri.path(), \"/hi/hello\"),","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551251,"byte_end":551318,"line_start":765,"line_end":765,"column_start":5,"column_end":72}},{"value":"/             _ => unreachable!(\"only /hello, /hi/hello are expected\")","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551323,"byte_end":551395,"line_start":766,"line_end":766,"column_start":5,"column_end":77}},{"value":"/         }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551400,"byte_end":551413,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551418,"byte_end":551427,"line_start":768,"line_end":768,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551432,"byte_end":551435,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(rocket.routes().count(), 2);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551440,"byte_end":551487,"line_start":770,"line_end":770,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551492,"byte_end":551497,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551502,"byte_end":551509,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551514,"byte_end":551531,"line_start":773,"line_end":773,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552263,"byte_end":552268,"line_start":794,"line_end":794,"column_start":12,"column_end":17},"name":"state","qualname":"<Rocket>::state","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` of the managed state value for the type `T` if it is\n being managed by `self`. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ Returns `Some` of the managed state value for the type `T` if it is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551646,"byte_end":551717,"line_start":778,"line_end":778,"column_start":5,"column_end":76}},{"value":"/ being managed by `self`. Otherwise, returns `None`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551722,"byte_end":551777,"line_start":779,"line_end":779,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551782,"byte_end":551785,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551790,"byte_end":551803,"line_start":781,"line_end":781,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551808,"byte_end":551811,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551816,"byte_end":551827,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551832,"byte_end":551863,"line_start":784,"line_end":784,"column_start":5,"column_end":36}},{"value":"/ struct MyState(&'static str);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551868,"byte_end":551901,"line_start":785,"line_end":785,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551906,"byte_end":551909,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let rocket = rocket::ignite().manage(MyState(\"hello!\"));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551914,"byte_end":551974,"line_start":787,"line_end":787,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rocket.state::<MyState>(), Some(&MyState(\"hello!\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":551979,"byte_end":552047,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552052,"byte_end":552055,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let client = rocket::local::Client::new(rocket).expect(\"valid rocket\");","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552060,"byte_end":552135,"line_start":790,"line_end":790,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(client.rocket().state::<MyState>(), Some(&MyState(\"hello!\")));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552140,"byte_end":552217,"line_start":791,"line_end":791,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552222,"byte_end":552229,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552234,"byte_end":552251,"line_start":793,"line_end":793,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":553009,"byte_end":553015,"line_start":819,"line_end":819,"column_start":12,"column_end":18},"name":"config","qualname":"<Rocket>::config","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the active configuration.","sig":null,"attributes":[{"value":"/ Returns the active configuration.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552358,"byte_end":552395,"line_start":798,"line_end":798,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552400,"byte_end":552403,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552408,"byte_end":552421,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552426,"byte_end":552429,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552434,"byte_end":552445,"line_start":802,"line_end":802,"column_start":5,"column_end":16}},{"value":"/ # #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552450,"byte_end":552499,"line_start":803,"line_end":803,"column_start":5,"column_end":54}},{"value":"/ # #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552504,"byte_end":552543,"line_start":804,"line_end":804,"column_start":5,"column_end":44}},{"value":"/ use rocket::Rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552548,"byte_end":552571,"line_start":805,"line_end":805,"column_start":5,"column_end":28}},{"value":"/ use rocket::fairing::AdHoc;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552576,"byte_end":552607,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552612,"byte_end":552615,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552620,"byte_end":552635,"line_start":808,"line_end":808,"column_start":5,"column_end":20}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552640,"byte_end":552718,"line_start":809,"line_end":809,"column_start":5,"column_end":83}},{"value":"/     rocket::ignite()","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552723,"byte_end":552747,"line_start":810,"line_end":810,"column_start":5,"column_end":29}},{"value":"/         .attach(AdHoc::on_launch(\"Config Printer\", |rocket| {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552752,"byte_end":552817,"line_start":811,"line_end":811,"column_start":5,"column_end":70}},{"value":"/             println!(\"Rocket launch config: {:?}\", rocket.config());","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552822,"byte_end":552894,"line_start":812,"line_end":812,"column_start":5,"column_end":77}},{"value":"/         }))","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552899,"byte_end":552914,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/         .launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552919,"byte_end":552941,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552946,"byte_end":552953,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552958,"byte_end":552963,"line_start":816,"line_end":816,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552968,"byte_end":552975,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":552980,"byte_end":552997,"line_start":818,"line_end":818,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2134},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553383,"byte_end":553398,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"StaticRouteInfo","qualname":"::codegen::StaticRouteInfo","value":"StaticRouteInfo { name, method, path, format, handler, rank }","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140}],"decl_id":null,"docs":" Information generated by the `route` attribute during codegen.\n","sig":null,"attributes":[{"value":"/ Information generated by the `route` attribute during codegen.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553305,"byte_end":553371,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2135},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553466,"byte_end":553470,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::codegen::StaticRouteInfo::name","value":"&'static str","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's name, i.e, the name of the function.\n","sig":null,"attributes":[{"value":"/ The route's name, i.e, the name of the function.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553405,"byte_end":553457,"line_start":10,"line_end":10,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553522,"byte_end":553528,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"method","qualname":"::codegen::StaticRouteInfo::method","value":"rocket_http::Method","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's method.\n","sig":null,"attributes":[{"value":"/ The route's method.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553490,"byte_end":553513,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2137},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553602,"byte_end":553606,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"path","qualname":"::codegen::StaticRouteInfo::path","value":"&'static str","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's path, without the base mount point.\n","sig":null,"attributes":[{"value":"/ The route's path, without the base mount point.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553542,"byte_end":553593,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2138},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553666,"byte_end":553672,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"format","qualname":"::codegen::StaticRouteInfo::format","value":"std::option::Option<rocket_http::MediaType>","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's format, if any.\n","sig":null,"attributes":[{"value":"/ The route's format, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553626,"byte_end":553657,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2139},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553759,"byte_end":553766,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticRouteInfo::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>, data::data::Data) -> outcome::Outcome<response::response::Response<'r>, rocket_http::Status, data::data::Data>","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's handler, i.e, the annotated function.\n","sig":null,"attributes":[{"value":"/ The route's handler, i.e, the annotated function.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553697,"byte_end":553750,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2140},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553825,"byte_end":553829,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"rank","qualname":"::codegen::StaticRouteInfo::rank","value":"std::option::Option<isize>","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" The route's rank, if any.\n","sig":null,"attributes":[{"value":"/ The route's rank, if any.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553787,"byte_end":553816,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2141},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553927,"byte_end":553942,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"StaticCatchInfo","qualname":"::codegen::StaticCatchInfo","value":"StaticCatchInfo { code, handler }","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143}],"decl_id":null,"docs":" Information generated by the `catch` attribute during codegen.\n","sig":null,"attributes":[{"value":"/ Information generated by the `catch` attribute during codegen.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553849,"byte_end":553915,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553988,"byte_end":553992,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"code","qualname":"::codegen::StaticCatchInfo::code","value":"u16","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The catcher's status code.\n","sig":null,"attributes":[{"value":"/ The catcher's status code.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":553949,"byte_end":553979,"line_start":26,"line_end":26,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":554067,"byte_end":554074,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticCatchInfo::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>) -> std::result::Result<response::response::Response<'r>, rocket_http::Status>","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The catcher's handler, i.e, the annotated function.\n","sig":null,"attributes":[{"value":"/ The catcher's handler, i.e, the annotated function.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/codegen.rs","byte_start":554003,"byte_end":554058,"line_start":28,"line_end":28,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2151},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556211,"byte_end":556218,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Catcher","qualname":"::catcher::Catcher","value":"Catcher { code, handler }","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154}],"decl_id":null,"docs":" An error catching route.","sig":null,"attributes":[{"value":"/ An error catching route.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554223,"byte_end":554251,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554252,"byte_end":554255,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Catchers are routes that run when errors occur. They correspond directly","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554256,"byte_end":554332,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ with the HTTP error status code they will be handling and are registered","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554333,"byte_end":554409,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ with Rocket via [`Rocket::register()`](::Rocket::register()). For example,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554410,"byte_end":554488,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ to handle \"404 not found\" errors, a catcher for the \"404\" status code is","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554489,"byte_end":554565,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ registered.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554566,"byte_end":554581,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554582,"byte_end":554585,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Because error handlers are only called when all routes are exhausted, they","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554586,"byte_end":554664,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ should not fail nor forward. If an error catcher fails, the user will","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554665,"byte_end":554738,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ receive no response. If an error catcher forwards, Rocket will respond with","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554739,"byte_end":554818,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ an internal server error.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554819,"byte_end":554848,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554849,"byte_end":554852,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Built-In Catchers","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554853,"byte_end":554876,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554877,"byte_end":554880,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Rocket has many built-in, pre-registered default catchers. In particular,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554881,"byte_end":554958,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ Rocket has catchers for all of the following status codes: 400, 401, 402,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":554959,"byte_end":555036,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417,","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555037,"byte_end":555115,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ 418, 421, 426, 428, 429, 431, 451, 500, 501, 503, and 510. As such, catchers","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555116,"byte_end":555196,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ only need to be registered if an error needs to be handled in a custom","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555197,"byte_end":555271,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ fashion.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555272,"byte_end":555284,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555285,"byte_end":555288,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Code Generation","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555289,"byte_end":555310,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555311,"byte_end":555314,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Catchers should rarely be used directly. Instead, they are typically","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555315,"byte_end":555387,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ declared using the `catch` decorator, as follows:","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555388,"byte_end":555441,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555442,"byte_end":555445,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555446,"byte_end":555457,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ #![feature(proc_macro_hygiene, decl_macro)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555458,"byte_end":555505,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555506,"byte_end":555509,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #[macro_use] extern crate rocket;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555510,"byte_end":555547,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555548,"byte_end":555551,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use rocket::Request;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555552,"byte_end":555576,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555577,"byte_end":555580,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[catch(500)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555581,"byte_end":555598,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ fn internal_error() -> &'static str {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555599,"byte_end":555640,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/     \"Whoops! Looks like we messed up.\"","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555641,"byte_end":555683,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555684,"byte_end":555689,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555690,"byte_end":555693,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[catch(404)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555694,"byte_end":555711,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ fn not_found(req: &Request) -> String {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555712,"byte_end":555755,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     format!(\"I couldn't find '{}'. Try something else?\", req.uri())","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555756,"byte_end":555827,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555828,"byte_end":555833,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555834,"byte_end":555837,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555838,"byte_end":555853,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ # if false { // We don't actually want to launch the server in an example.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555854,"byte_end":555932,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/     rocket::ignite().register(catchers![internal_error, not_found]).launch();","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":555933,"byte_end":556014,"line_start":55,"line_end":55,"column_start":1,"column_end":82}},{"value":"/ # }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556015,"byte_end":556022,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556023,"byte_end":556028,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556029,"byte_end":556036,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556037,"byte_end":556040,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A function decorated with `catch` must take exactly zero or one arguments.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556041,"byte_end":556119,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ If the catcher takes an argument, it must be of type [`&Request`](Request).","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556120,"byte_end":556199,"line_start":61,"line_end":61,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2152},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556276,"byte_end":556280,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"code","qualname":"::catcher::Catcher::code","value":"u16","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":" The HTTP status code to match against.\n","sig":null,"attributes":[{"value":"/ The HTTP status code to match against.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556225,"byte_end":556267,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2153},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556337,"byte_end":556344,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"handler","qualname":"::catcher::Catcher::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>) -> std::result::Result<response::response::Response<'r>, rocket_http::Status>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":" The catcher's associated handler.\n","sig":null,"attributes":[{"value":"/ The catcher's associated handler.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556291,"byte_end":556328,"line_start":65,"line_end":65,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557315,"byte_end":557318,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<Catcher>::new","value":"fn (code: u16, handler: ErrorHandler) -> Catcher","parent":null,"children":[],"decl_id":null,"docs":" Creates a catcher for the given status code using the given error\n handler. This should only be used when routing manually.","sig":null,"attributes":[{"value":"/ Creates a catcher for the given status code using the given error","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556410,"byte_end":556479,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ handler. This should only be used when routing manually.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556484,"byte_end":556544,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556549,"byte_end":556552,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556557,"byte_end":556571,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556576,"byte_end":556579,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556584,"byte_end":556595,"line_start":76,"line_end":76,"column_start":5,"column_end":16}},{"value":"/ # #![allow(unused_variables)]","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556600,"byte_end":556633,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ use rocket::{Catcher, Request};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556638,"byte_end":556673,"line_start":78,"line_end":78,"column_start":5,"column_end":40}},{"value":"/ use rocket::response::{Result, Responder};","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556678,"byte_end":556724,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/ use rocket::response::status::Custom;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556729,"byte_end":556770,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ use rocket::http::Status;","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556775,"byte_end":556804,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556809,"byte_end":556812,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ fn handle_404<'r>(req: &'r Request) -> Result<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556817,"byte_end":556872,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/     let res = Custom(Status::NotFound, format!(\"404: {}\", req.uri()));","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556877,"byte_end":556951,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/     res.respond_to(req)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556956,"byte_end":556983,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556988,"byte_end":556993,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556998,"byte_end":557001,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ fn handle_500<'r>(req: &'r Request) -> Result<'r> {","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557006,"byte_end":557061,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/     \"Whoops, we messed up!\".respond_to(req)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557066,"byte_end":557113,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557118,"byte_end":557123,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557128,"byte_end":557131,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let not_found_catcher = Catcher::new(404, handle_404);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557136,"byte_end":557194,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/ let internal_server_error_catcher = Catcher::new(500, handle_500);","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557199,"byte_end":557269,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557274,"byte_end":557281,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557286,"byte_end":557303,"line_start":95,"line_end":95,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":2200},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4626,"byte_end":4632,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"ignite","qualname":"::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [`Rocket::ignite()`] Creates a new instance of `Rocket`.\n","sig":null,"attributes":[{"value":"/ Alias to [`Rocket::ignite()`] Creates a new instance of `Rocket`.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4549,"byte_end":4618,"line_start":155,"line_end":155,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2201},"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4781,"byte_end":4787,"line_start":162,"line_end":162,"column_start":8,"column_end":14},"name":"custom","qualname":"::custom","value":"fn (config: config::Config) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [`Rocket::custom()`]. Creates a new instance of `Rocket` with a\n custom configuration.\n","sig":null,"attributes":[{"value":"/ Alias to [`Rocket::custom()`]. Creates a new instance of `Rocket` with a","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4671,"byte_end":4747,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/ custom configuration.","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":4748,"byte_end":4773,"line_start":161,"line_end":161,"column_start":1,"column_end":26}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5399,"byte_end":5411,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5781,"byte_end":5793,"line_start":38,"line_end":38,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":6225,"byte_end":6237,"line_start":54,"line_end":54,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":7472,"byte_end":7484,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":19707,"byte_end":19719,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30602,"byte_end":30614,"line_start":437,"line_end":437,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31249,"byte_end":31262,"line_start":455,"line_end":455,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31417,"byte_end":31430,"line_start":464,"line_end":464,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31570,"byte_end":31583,"line_start":471,"line_end":471,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31720,"byte_end":31732,"line_start":477,"line_end":477,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37544,"byte_end":37550,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48975,"byte_end":48982,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":71082,"byte_end":71089,"line_start":697,"line_end":697,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":76682,"byte_end":76689,"line_start":845,"line_end":845,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":77022,"byte_end":77029,"line_start":856,"line_end":856,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":77558,"byte_end":77573,"line_start":873,"line_end":873,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85359,"byte_end":85365,"line_start":216,"line_end":216,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85604,"byte_end":85607,"line_start":225,"line_end":225,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":86799,"byte_end":86805,"line_start":260,"line_end":260,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87095,"byte_end":87101,"line_start":272,"line_end":272,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88624,"byte_end":88632,"line_start":311,"line_end":311,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":89595,"byte_end":89602,"line_start":336,"line_end":336,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":89815,"byte_end":89821,"line_start":344,"line_end":344,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":90136,"byte_end":90142,"line_start":356,"line_end":356,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95749,"byte_end":95757,"line_start":138,"line_end":138,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97884,"byte_end":97893,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100552,"byte_end":100561,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100726,"byte_end":100735,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100909,"byte_end":100918,"line_start":314,"line_end":314,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":102200,"byte_end":102209,"line_start":354,"line_end":354,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111408,"byte_end":111414,"line_start":113,"line_end":113,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111636,"byte_end":111642,"line_start":122,"line_end":122,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118956,"byte_end":118962,"line_start":203,"line_end":203,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":120293,"byte_end":120299,"line_start":250,"line_end":250,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":120747,"byte_end":120753,"line_start":268,"line_end":268,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123320,"byte_end":123331,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123956,"byte_end":123967,"line_start":90,"line_end":90,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":124091,"byte_end":124102,"line_start":98,"line_end":98,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":124582,"byte_end":124593,"line_start":112,"line_end":112,"column_start":82,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131828,"byte_end":131832,"line_start":116,"line_end":116,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132443,"byte_end":132447,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132554,"byte_end":132558,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":134004,"byte_end":134008,"line_start":187,"line_end":187,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":135193,"byte_end":135197,"line_start":222,"line_end":222,"column_start":82,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":135743,"byte_end":135749,"line_start":14,"line_end":14,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147933,"byte_end":147939,"line_start":360,"line_end":360,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":148588,"byte_end":148595,"line_start":387,"line_end":387,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":149361,"byte_end":149371,"line_start":417,"line_end":417,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":149659,"byte_end":149665,"line_start":428,"line_end":428,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":150034,"byte_end":150040,"line_start":440,"line_end":440,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153750,"byte_end":153755,"line_start":108,"line_end":108,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155618,"byte_end":155623,"line_start":168,"line_end":168,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":156102,"byte_end":156107,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157794,"byte_end":157799,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163284,"byte_end":163288,"line_start":203,"line_end":203,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163516,"byte_end":163527,"line_start":212,"line_end":212,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163782,"byte_end":163788,"line_start":221,"line_end":221,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163980,"byte_end":163986,"line_start":230,"line_end":230,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":173596,"byte_end":173602,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":174361,"byte_end":174364,"line_start":233,"line_end":233,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":174674,"byte_end":174678,"line_start":243,"line_end":243,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":175396,"byte_end":175402,"line_start":262,"line_end":262,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":175891,"byte_end":175897,"line_start":275,"line_end":275,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":176690,"byte_end":176696,"line_start":292,"line_end":292,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":177741,"byte_end":177747,"line_start":315,"line_end":315,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179828,"byte_end":179836,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183904,"byte_end":183912,"line_start":150,"line_end":150,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184640,"byte_end":184649,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186556,"byte_end":186565,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186928,"byte_end":186937,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187039,"byte_end":187048,"line_start":102,"line_end":102,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187141,"byte_end":187150,"line_start":108,"line_end":108,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187389,"byte_end":187398,"line_start":118,"line_end":118,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187597,"byte_end":187606,"line_start":128,"line_end":128,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188900,"byte_end":188906,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189543,"byte_end":189549,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":190027,"byte_end":190033,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":190515,"byte_end":190521,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191174,"byte_end":191178,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192475,"byte_end":192479,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193360,"byte_end":193364,"line_start":90,"line_end":90,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196262,"byte_end":196277,"line_start":162,"line_end":162,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208745,"byte_end":208753,"line_start":566,"line_end":566,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":229248,"byte_end":229256,"line_start":1179,"line_end":1179,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":229647,"byte_end":229655,"line_start":1196,"line_end":1196,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231460,"byte_end":231465,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231594,"byte_end":231599,"line_start":64,"line_end":64,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235759,"byte_end":235764,"line_start":105,"line_end":105,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":238738,"byte_end":238743,"line_start":196,"line_end":196,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":238996,"byte_end":239001,"line_start":204,"line_end":204,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":240364,"byte_end":240369,"line_start":243,"line_end":243,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242802,"byte_end":242809,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":246009,"byte_end":246016,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":246665,"byte_end":246672,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248071,"byte_end":248079,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248789,"byte_end":248798,"line_start":132,"line_end":132,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249862,"byte_end":249872,"line_start":168,"line_end":168,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251054,"byte_end":251066,"line_start":208,"line_end":208,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252233,"byte_end":252242,"line_start":248,"line_end":248,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253014,"byte_end":253022,"line_start":275,"line_end":275,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254092,"byte_end":254100,"line_start":313,"line_end":313,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254907,"byte_end":254913,"line_start":340,"line_end":340,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260340,"byte_end":260346,"line_start":124,"line_end":124,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260787,"byte_end":260794,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275044,"byte_end":275051,"line_start":606,"line_end":606,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275589,"byte_end":275596,"line_start":630,"line_end":630,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275761,"byte_end":275768,"line_start":636,"line_end":636,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320736,"byte_end":320747,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":324101,"byte_end":324112,"line_start":133,"line_end":133,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":325248,"byte_end":325259,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":326180,"byte_end":326191,"line_start":175,"line_end":175,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327825,"byte_end":327836,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329956,"byte_end":329967,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":331669,"byte_end":331680,"line_start":152,"line_end":152,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334306,"byte_end":334312,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361785,"byte_end":361791,"line_start":917,"line_end":917,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":362358,"byte_end":362364,"line_start":936,"line_end":936,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363845,"byte_end":363858,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/toml_ext.rs","byte_start":376333,"byte_end":376344,"line_start":86,"line_end":86,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":379477,"byte_end":379486,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":379894,"byte_end":379903,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381461,"byte_end":381467,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381613,"byte_end":381619,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383933,"byte_end":383939,"line_start":182,"line_end":182,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284782,"byte_end":284794,"line_start":233,"line_end":233,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389557,"byte_end":389561,"line_start":64,"line_end":64,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":397001,"byte_end":397005,"line_start":274,"line_end":274,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397850,"byte_end":397860,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":398868,"byte_end":398878,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":399550,"byte_end":399559,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":399979,"byte_end":399988,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":400601,"byte_end":400610,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402180,"byte_end":402186,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403097,"byte_end":403106,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416787,"byte_end":416791,"line_start":390,"line_end":390,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420863,"byte_end":420864,"line_start":508,"line_end":508,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":421306,"byte_end":421312,"line_start":524,"line_end":524,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":421911,"byte_end":421917,"line_start":544,"line_end":544,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":422524,"byte_end":422530,"line_start":567,"line_end":567,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":422915,"byte_end":422918,"line_start":581,"line_end":581,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428619,"byte_end":428620,"line_start":158,"line_end":158,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428746,"byte_end":428749,"line_start":165,"line_end":165,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428910,"byte_end":428911,"line_start":172,"line_end":172,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429216,"byte_end":429223,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/fairings.rs","byte_start":450607,"byte_end":450615,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455380,"byte_end":455385,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457959,"byte_end":457964,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460853,"byte_end":460857,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462785,"byte_end":462789,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449662,"byte_end":449665,"line_start":414,"line_end":414,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465920,"byte_end":465931,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466739,"byte_end":466750,"line_start":123,"line_end":123,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467033,"byte_end":467044,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467192,"byte_end":467207,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467751,"byte_end":467762,"line_start":153,"line_end":153,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467925,"byte_end":467936,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":468116,"byte_end":468127,"line_start":169,"line_end":169,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":468680,"byte_end":468691,"line_start":183,"line_end":183,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470592,"byte_end":470605,"line_start":238,"line_end":238,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470736,"byte_end":470749,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470875,"byte_end":470888,"line_start":250,"line_end":250,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490095,"byte_end":490100,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":513141,"byte_end":513149,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514750,"byte_end":514755,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":521753,"byte_end":521758,"line_start":283,"line_end":283,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":522328,"byte_end":522333,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":522799,"byte_end":522804,"line_start":319,"line_end":319,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/mod.rs","byte_start":471827,"byte_end":471833,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2014},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":524182,"byte_end":524188,"line_start":41,"line_end":41,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":527409,"byte_end":527415,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556396,"byte_end":556403,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557762,"byte_end":557769,"line_start":112,"line_end":112,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557901,"byte_end":557908,"line_start":118,"line_end":118,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/ext.rs","byte_start":564309,"byte_end":564310,"line_start":19,"line_end":19,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3677,"byte_end":3683,"line_start":116,"line_end":116,"column_start":37,"column_end":43},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3693,"byte_end":3698,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3708,"byte_end":3715,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":186}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3725,"byte_end":3733,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":778}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165324,"byte_end":165331,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1121}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/mod.rs","byte_start":165341,"byte_end":165347,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1134}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3743,"byte_end":3750,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1199}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3760,"byte_end":3766,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1279}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3776,"byte_end":3780,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1560}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3790,"byte_end":3797,"line_start":123,"line_end":123,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1742}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3807,"byte_end":3814,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1776}},{"kind":"Mod","span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/lib.rs","byte_start":3824,"byte_end":3829,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1880}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5399,"byte_end":5411,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":5781,"byte_end":5793,"line_start":38,"line_end":38,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":7500}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":6225,"byte_end":6237,"line_start":54,"line_end":54,"column_start":23,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/logger.rs","byte_start":7472,"byte_end":7484,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":47,"index":145}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":19707,"byte_end":19719,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":30602,"byte_end":30614,"line_start":437,"line_end":437,"column_start":25,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31249,"byte_end":31262,"line_start":455,"line_end":455,"column_start":20,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31417,"byte_end":31430,"line_start":464,"line_end":464,"column_start":23,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31570,"byte_end":31583,"line_start":471,"line_end":471,"column_start":25,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/request.rs","byte_start":31720,"byte_end":31732,"line_start":477,"line_end":477,"column_start":20,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1594}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/local/client.rs","byte_start":37544,"byte_end":37550,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":48975,"byte_end":48982,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":71082,"byte_end":71089,"line_start":697,"line_end":697,"column_start":10,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":76682,"byte_end":76689,"line_start":845,"line_end":845,"column_start":25,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2226},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":77022,"byte_end":77029,"line_start":856,"line_end":856,"column_start":27,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2226},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/request.rs","byte_start":77558,"byte_end":77573,"line_start":873,"line_end":873,"column_start":6,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":84831,"byte_end":84836,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":338}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85359,"byte_end":85365,"line_start":216,"line_end":216,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4744},"to":{"krate":0,"index":338}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":85604,"byte_end":85607,"line_start":225,"line_end":225,"column_start":28,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":326},"to":{"krate":0,"index":338}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":86799,"byte_end":86805,"line_start":260,"line_end":260,"column_start":46,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":338}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":87095,"byte_end":87101,"line_start":272,"line_end":272,"column_start":46,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":338}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88287,"byte_end":88292,"line_start":302,"line_end":302,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":88624,"byte_end":88632,"line_start":311,"line_end":311,"column_start":31,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":16,"index":2000},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":89595,"byte_end":89602,"line_start":336,"line_end":336,"column_start":31,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":7066},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":89815,"byte_end":89821,"line_start":344,"line_end":344,"column_start":52,"column_end":58},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/param.rs","byte_start":90136,"byte_end":90142,"line_start":356,"line_end":356,"column_start":52,"column_end":58},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":95749,"byte_end":95757,"line_start":138,"line_end":138,"column_start":10,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":97884,"byte_end":97893,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100552,"byte_end":100561,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2423},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100726,"byte_end":100735,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2423},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":100909,"byte_end":100918,"line_start":314,"line_end":314,"column_start":39,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2423},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form_items.rs","byte_start":102200,"byte_end":102209,"line_start":354,"line_end":354,"column_start":23,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2423},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":110700,"byte_end":110705,"line_start":94,"line_end":94,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111408,"byte_end":111414,"line_start":113,"line_end":113,"column_start":44,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form.rs","byte_start":111636,"byte_end":111642,"line_start":122,"line_end":122,"column_start":44,"column_end":50},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":117929,"byte_end":117934,"line_start":173,"line_end":173,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":478}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":118956,"byte_end":118962,"line_start":203,"line_end":203,"column_start":32,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":4744},"to":{"krate":0,"index":478}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":120293,"byte_end":120299,"line_start":250,"line_end":250,"column_start":54,"column_end":60},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":478}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/from_form_value.rs","byte_start":120747,"byte_end":120753,"line_start":268,"line_end":268,"column_start":54,"column_end":60},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":478}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123320,"byte_end":123331,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":123956,"byte_end":123967,"line_start":90,"line_end":90,"column_start":19,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2618},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":124091,"byte_end":124102,"line_start":98,"line_end":98,"column_start":44,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2618},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/lenient.rs","byte_start":124582,"byte_end":124593,"line_start":112,"line_end":112,"column_start":82,"column_end":93},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2618},"to":{"krate":16,"index":234}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":131828,"byte_end":131832,"line_start":116,"line_end":116,"column_start":9,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132443,"byte_end":132447,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2678},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":132554,"byte_end":132558,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":134004,"byte_end":134008,"line_start":187,"line_end":187,"column_start":44,"column_end":48},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2678},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/form/form.rs","byte_start":135193,"byte_end":135197,"line_start":222,"line_end":222,"column_start":82,"column_end":86},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2678},"to":{"krate":16,"index":234}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":135743,"byte_end":135749,"line_start":14,"line_end":14,"column_start":48,"column_end":54},"kind":{"Impl":{"id":78}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":1206}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147354,"byte_end":147359,"line_start":347,"line_end":347,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":147933,"byte_end":147939,"line_start":360,"line_end":360,"column_start":38,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":16,"index":2271},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":148588,"byte_end":148595,"line_start":387,"line_end":387,"column_start":38,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":16,"index":559},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":149361,"byte_end":149371,"line_start":417,"line_end":417,"column_start":38,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":1,"index":6671},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":149659,"byte_end":149665,"line_start":428,"line_end":428,"column_start":62,"column_end":68},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/from_request.rs","byte_start":150034,"byte_end":150040,"line_start":440,"line_end":440,"column_start":62,"column_end":68},"kind":{"Impl":{"id":83}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":153750,"byte_end":153755,"line_start":108,"line_end":108,"column_start":36,"column_end":41},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":155618,"byte_end":155623,"line_start":168,"line_end":168,"column_start":64,"column_end":69},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2685},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/state.rs","byte_start":156102,"byte_end":156107,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2685},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":157794,"byte_end":157799,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2726},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":162947,"byte_end":162952,"line_start":194,"line_end":194,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163284,"byte_end":163288,"line_start":203,"line_end":203,"column_start":45,"column_end":49},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2678},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163516,"byte_end":163527,"line_start":212,"line_end":212,"column_start":45,"column_end":56},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2618},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163782,"byte_end":163788,"line_start":221,"line_end":221,"column_start":46,"column_end":52},"kind":{"Impl":{"id":90}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/request/query.rs","byte_start":163980,"byte_end":163986,"line_start":230,"line_end":230,"column_start":46,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":173596,"byte_end":173602,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":5,"index":4744},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":174361,"byte_end":174364,"line_start":233,"line_end":233,"column_start":28,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":4068},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":174674,"byte_end":174678,"line_start":243,"line_end":243,"column_start":28,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":1,"index":2103},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":175396,"byte_end":175402,"line_start":262,"line_end":262,"column_start":46,"column_end":52},"kind":{"Impl":{"id":95}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":175891,"byte_end":175897,"line_start":275,"line_end":275,"column_start":61,"column_end":67},"kind":{"Impl":{"id":96}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":176690,"byte_end":176696,"line_start":292,"line_end":292,"column_start":77,"column_end":83},"kind":{"Impl":{"id":97}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/responder.rs","byte_start":177741,"byte_end":177747,"line_start":315,"line_end":315,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":16,"index":2524},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":179828,"byte_end":179836,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/redirect.rs","byte_start":183904,"byte_end":183912,"line_start":150,"line_end":150,"column_start":28,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2736},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":184640,"byte_end":184649,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186556,"byte_end":186565,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2742},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":186928,"byte_end":186937,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2742},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187039,"byte_end":187048,"line_start":102,"line_end":102,"column_start":19,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2742},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187141,"byte_end":187150,"line_start":108,"line_end":108,"column_start":19,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2742},"to":{"krate":1,"index":2870}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187389,"byte_end":187398,"line_start":118,"line_end":118,"column_start":20,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2742},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/named_file.rs","byte_start":187597,"byte_end":187606,"line_start":128,"line_end":128,"column_start":19,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2742},"to":{"krate":1,"index":2936}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":188900,"byte_end":188906,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":189543,"byte_end":189549,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":190027,"byte_end":190033,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/stream.rs","byte_start":190515,"byte_end":190521,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":917},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":191174,"byte_end":191178,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":192475,"byte_end":192479,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":193360,"byte_end":193364,"line_start":90,"line_end":90,"column_start":24,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":196262,"byte_end":196277,"line_start":162,"line_end":162,"column_start":10,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":208745,"byte_end":208753,"line_start":566,"line_end":566,"column_start":10,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":229248,"byte_end":229256,"line_start":1179,"line_end":1179,"column_start":25,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/response.rs","byte_start":229647,"byte_end":229655,"line_start":1196,"line_end":1196,"column_start":28,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2771},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231460,"byte_end":231465,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2779},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/debug.rs","byte_start":231594,"byte_end":231599,"line_start":64,"line_end":64,"column_start":48,"column_end":53},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2779},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":235759,"byte_end":235764,"line_start":105,"line_end":105,"column_start":28,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":238738,"byte_end":238743,"line_start":196,"line_end":196,"column_start":46,"column_end":51},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2786},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":238996,"byte_end":239001,"line_start":204,"line_end":204,"column_start":14,"column_end":19},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/flash.rs","byte_start":240364,"byte_end":240369,"line_start":243,"line_end":243,"column_start":38,"column_end":43},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2786},"to":{"krate":0,"index":639}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/content.rs","byte_start":242802,"byte_end":242809,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2795},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":246009,"byte_end":246016,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2952},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":246665,"byte_end":246672,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2952},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248071,"byte_end":248079,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2969},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":248789,"byte_end":248798,"line_start":132,"line_end":132,"column_start":28,"column_end":37},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2985},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":249862,"byte_end":249872,"line_start":168,"line_end":168,"column_start":46,"column_end":56},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2994},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":251054,"byte_end":251066,"line_start":208,"line_end":208,"column_start":46,"column_end":58},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3010},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":252233,"byte_end":252242,"line_start":248,"line_end":248,"column_start":46,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3026},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":253014,"byte_end":253022,"line_start":275,"line_end":275,"column_start":46,"column_end":54},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3042},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254092,"byte_end":254100,"line_start":313,"line_end":313,"column_start":46,"column_end":54},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3058},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/response/status.rs","byte_start":254907,"byte_end":254913,"line_start":340,"line_end":340,"column_start":46,"column_end":52},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3074},"to":{"krate":0,"index":794}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260340,"byte_end":260346,"line_start":124,"line_end":124,"column_start":40,"column_end":46},"kind":{"Impl":{"id":136}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":1206}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":260787,"byte_end":260794,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275044,"byte_end":275051,"line_start":606,"line_end":606,"column_start":23,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":2267}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275589,"byte_end":275596,"line_start":630,"line_end":630,"column_start":30,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/outcome.rs","byte_start":275761,"byte_end":275768,"line_start":636,"line_end":636,"column_start":32,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":320736,"byte_end":320747,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":324101,"byte_end":324112,"line_start":133,"line_end":133,"column_start":23,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":325248,"byte_end":325259,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3152},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/error.rs","byte_start":326180,"byte_end":326191,"line_start":175,"line_end":175,"column_start":20,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":327825,"byte_end":327836,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":329956,"byte_end":329967,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3197},"to":{"krate":2,"index":7500}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/environment.rs","byte_start":331669,"byte_end":331680,"line_start":152,"line_end":152,"column_start":23,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3197},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":334306,"byte_end":334312,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":361785,"byte_end":361791,"line_start":917,"line_end":917,"column_start":21,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3218},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/config.rs","byte_start":362358,"byte_end":362364,"line_start":936,"line_end":936,"column_start":20,"column_end":26},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3218},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/builder.rs","byte_start":363845,"byte_end":363858,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/toml_ext.rs","byte_start":376333,"byte_end":376344,"line_start":86,"line_end":86,"column_start":27,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":379477,"byte_end":379486,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":379894,"byte_end":379903,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381461,"byte_end":381467,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":1875}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":381613,"byte_end":381619,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/custom_values.rs","byte_start":383933,"byte_end":383939,"line_start":182,"line_end":182,"column_start":23,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/config/mod.rs","byte_start":284782,"byte_end":284794,"line_start":233,"line_end":233,"column_start":6,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":389557,"byte_end":389561,"line_start":64,"line_end":64,"column_start":6,"column_end":10},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data.rs","byte_start":397001,"byte_end":397005,"line_start":274,"line_end":274,"column_start":15,"column_end":19},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":397850,"byte_end":397860,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1617},"to":{"krate":1,"index":2870}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/data_stream.rs","byte_start":398868,"byte_end":398878,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1617},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":399550,"byte_end":399559,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3326},"to":{"krate":1,"index":2870}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":399979,"byte_end":399988,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3326},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/net_stream.rs","byte_start":400601,"byte_end":400610,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3326},"to":{"krate":38,"index":1992}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":402180,"byte_end":402186,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":166}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":1206}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":403097,"byte_end":403106,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":413597,"byte_end":413602,"line_start":322,"line_end":322,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":416787,"byte_end":416791,"line_start":390,"line_end":390,"column_start":27,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1587},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420312,"byte_end":420317,"line_start":495,"line_end":495,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1889},"to":{"krate":0,"index":1698}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":420863,"byte_end":420864,"line_start":508,"line_end":508,"column_start":46,"column_end":47},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":421306,"byte_end":421312,"line_start":524,"line_end":524,"column_start":49,"column_end":55},"kind":{"Impl":{"id":170}},"from":{"krate":2,"index":29528},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":421911,"byte_end":421917,"line_start":544,"line_end":544,"column_start":49,"column_end":55},"kind":{"Impl":{"id":171}},"from":{"krate":2,"index":29407},"to":{"krate":0,"index":1684}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":422524,"byte_end":422530,"line_start":567,"line_end":567,"column_start":25,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":5,"index":4744},"to":{"krate":0,"index":1698}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/data/from_data.rs","byte_start":422915,"byte_end":422918,"line_start":581,"line_end":581,"column_start":25,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":5,"index":4068},"to":{"krate":0,"index":1698}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427466,"byte_end":427475,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":1756},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427478,"byte_end":427482,"line_start":134,"line_end":134,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1884},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":427485,"byte_end":427489,"line_start":134,"line_end":134,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1896},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428619,"byte_end":428620,"line_start":158,"line_end":158,"column_start":40,"column_end":41},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1759},"to":{"krate":0,"index":1756}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428746,"byte_end":428749,"line_start":165,"line_end":165,"column_start":16,"column_end":19},"kind":{"Impl":{"id":175}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1594}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":428910,"byte_end":428911,"line_start":172,"line_end":172,"column_start":52,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1764},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/handler.rs","byte_start":429216,"byte_end":429223,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/fairings.rs","byte_start":450607,"byte_end":450615,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":455380,"byte_end":455385,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/ad_hoc.rs","byte_start":457959,"byte_end":457964,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1816},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":460853,"byte_end":460857,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/info_kind.rs","byte_start":462785,"byte_end":462789,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3342},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446101,"byte_end":446105,"line_start":325,"line_end":325,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1884},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":446108,"byte_end":446112,"line_start":325,"line_end":325,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1896},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/fairing/mod.rs","byte_start":449662,"byte_end":449665,"line_start":414,"line_end":414,"column_start":43,"column_end":46},"kind":{"Impl":{"id":183}},"from":{"krate":5,"index":3773},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":465920,"byte_end":465931,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":466739,"byte_end":466750,"line_start":123,"line_end":123,"column_start":29,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467033,"byte_end":467044,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467192,"byte_end":467207,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3350},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467751,"byte_end":467762,"line_start":153,"line_end":153,"column_start":21,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":467925,"byte_end":467936,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":468116,"byte_end":468127,"line_start":169,"line_end":169,"column_start":30,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1890},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":468680,"byte_end":468691,"line_start":183,"line_end":183,"column_start":15,"column_end":26},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470592,"byte_end":470605,"line_start":238,"line_end":238,"column_start":48,"column_end":61},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470736,"byte_end":470749,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/error.rs","byte_start":470875,"byte_end":470888,"line_start":250,"line_end":250,"column_start":23,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/collider.rs","byte_start":490095,"byte_end":490100,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":513141,"byte_end":513149,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":514750,"byte_end":514755,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":521753,"byte_end":521758,"line_start":283,"line_end":283,"column_start":23,"column_end":28},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3378},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":522328,"byte_end":522333,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3378},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/route.rs","byte_start":522799,"byte_end":522804,"line_start":319,"line_end":319,"column_start":40,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3378},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/router/mod.rs","byte_start":471827,"byte_end":471833,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":524182,"byte_end":524188,"line_start":41,"line_end":41,"column_start":25,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2070},"to":{"krate":38,"index":2350}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/rocket.rs","byte_start":527409,"byte_end":527415,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":556396,"byte_end":556403,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557762,"byte_end":557769,"line_start":112,"line_end":112,"column_start":40,"column_end":47},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2151},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/catcher.rs","byte_start":557901,"byte_end":557908,"line_start":118,"line_end":118,"column_start":23,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2151},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/ext.rs","byte_start":563819,"byte_end":563823,"line_start":3,"line_end":3,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2870},"to":{"krate":0,"index":2180}},{"span":{"file_name":"/home/erflod5/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.4/src/ext.rs","byte_start":564309,"byte_end":564310,"line_start":19,"line_end":19,"column_start":31,"column_end":32},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2183},"to":{"krate":0,"index":2180}}]}